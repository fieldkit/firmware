Adafruit_FlashCache.cpp:39:1:Adafruit_FlashCache::Adafruit_FlashCache() 0
Adafruit_FlashTransport_QSPI.h:40:18:virtual bool Adafruit_FlashTransport_QSPI::supportQuadMode() 0
Adafruit_FlashTransport_QSPI_SAMD.cpp:146:6:virtual void Adafruit_FlashTransport_QSPI::setClockSpeed(uint32_t) 0
Adafruit_FlashTransport_QSPI_SAMD.cpp:48:1:Adafruit_FlashTransport_QSPI::Adafruit_FlashTransport_QSPI() 0
Adafruit_FlashTransport_SPI.cpp:43:6:virtual void Adafruit_FlashTransport_SPI::setClockSpeed(uint32_t) 0
Adafruit_FlashTransport_SPI.h:42:18:virtual bool Adafruit_FlashTransport_SPI::supportQuadMode() 0
Adafruit_SPIFlash.cpp:124:10:uint32_t Adafruit_SPIFlash::size() 0
Adafruit_SPIFlash.cpp:129:10:uint16_t Adafruit_SPIFlash::numPages() 0
Adafruit_SPIFlash.cpp:134:10:uint16_t Adafruit_SPIFlash::pageSize() 0
Adafruit_SPIFlash.cpp:139:10:uint32_t Adafruit_SPIFlash::getJEDECID() 0
Adafruit_SPIFlash.cpp:266:6:virtual bool Adafruit_SPIFlash::syncBlocks() 0
Adafruit_SleepyDog.cpp:32:22:cpp) 0
ArduinoFiles.h:113:10:virtual size_t PrintFile::write(const uint8_t*, size_t) 0
ArduinoFiles.h:72:8:virtual void PrintFile::flush() 0
Base64.cpp:101:5:int base64_dec_len(char*, int) 0
Base64.cpp:111:13:void a3_to_a4(unsigned char*, unsigned char*) 0
Base64.cpp:118:13:void a4_to_a3(unsigned char*, unsigned char*) 0
Base64.cpp:124:22:unsigned char b64_lookup(char) 0
Base64.cpp:96:5:int base64_enc_len(int) 0
EthernetUtil.c:28:17:ethutil_htons 0
EthernetUtil.c:37:17:ethutil_htonl 0
EthernetUtil.c:46:17:ethutil_ntohs 0
EthernetUtil.c:55:17:ethutil_ntohl 0
EthernetUtil.c:67:10:ethutil_swaps 0
EthernetUtil.c:75:10:ethutil_swapl 0
FatFile.cpp:1191:6:void FatFile::setpos(FatPos_t*) 0
FatFile.cpp:256:6:void FatFile::getpos(FatPos_t*) 0
FatFile.cpp:34:6:bool FatFile::addCluster() 0
FatFile.cpp:373:6:bool FatFile::open(FatFileSystem*, const char*, oflag_t) 0
FatFileLFN.cpp:59:17:uint16_t lfnGetChar(ldir_t*, uint8_t) 0
FatFilePrint.cpp:234:5:int FatFile::printField(int32_t, char) 0
FatVolume.cpp:210:10:uint32_t FatVolume::clusterFirstBlock(uint32_t) const 0
FmtNumber.cpp:167:7:float scale10(float, int8_t) 0
FmtNumber.cpp:216:7:char* fmtDec(uint32_t, char*) 0
HardwareSerial.h:70:18:virtual void HardwareSerial::begin(long unsigned int) 0
HardwareSerial.h:71:18:virtual void HardwareSerial::begin(long unsigned int, uint16_t) 0
HardwareSerial.h:72:18:virtual void HardwareSerial::end() 0
IPAddress.cpp:115:1:cpp) 0
IPAddress.cpp:23:1:IPAddress::IPAddress() 0
IPAddress.cpp:36:1:IPAddress::IPAddress(uint32_t) 0
IPAddress.cpp:41:1:IPAddress::IPAddress(const uint8_t*) 0
IPAddress.cpp:88:12:IPAddress& IPAddress::operator=(const uint8_t*) 0
IPAddress.cpp:94:12:IPAddress& IPAddress::operator=(uint32_t) 0
MDNS.cpp:1478:16:const uint8_t* MDNS::_postfixForProtocol(MDNSServiceProtocol_t) 0
MDNS.cpp:176:5:int MDNS::begin(const IPAddress&) 0
MDNS.cpp:233:6:void MDNS::setNameResolvedCallback(MDNSNameFoundCallback) 0
MDNS.cpp:238:6:void MDNS::cancelResolveName() 0
MDNS.cpp:243:5:int MDNS::isResolvingName() 0
MDNS.cpp:248:6:void MDNS::setServiceFoundCallback(MDNSServiceFoundCallback) 0
MDNS.cpp:277:6:void MDNS::stopDiscoveringService() 0
MDNS.cpp:282:5:int MDNS::isDiscoveringService() 0
Print.cpp:60:8:size_t Print::print(unsigned char, int) 0
Print.cpp:65:8:size_t Print::print(int, int) 0
Print.cpp:70:8:size_t Print::print(unsigned int, int) 0
Print.cpp:91:8:size_t Print::print(long unsigned int, int) 0
Print.cpp:97:8:size_t Print::print(double, int) 0
Print.h:62:17:virtual int Print::availableForWrite() 0
Print.h:62:17:virtual int Print::availableForWrite() 0
Print.h:62:17:virtual int Print::availableForWrite() 0
Print.h:62:17:virtual int Print::availableForWrite() 0
Print.h:62:17:virtual int Print::availableForWrite() 0
Print.h:62:17:virtual int Print::availableForWrite() 0
Print.h:62:17:virtual int Print::availableForWrite() 0
Print.h:62:17:virtual int Print::availableForWrite() 0
Print.h:62:17:virtual int Print::availableForWrite() 0
Print.h:62:17:virtual int Print::availableForWrite() 0
Print.h:62:17:virtual int Print::availableForWrite() 0
Print.h:62:17:virtual int Print::availableForWrite() 0
Print.h:89:18:virtual void Print::flush() 0
Print.h:89:18:virtual void Print::flush() 0
Print.h:89:18:virtual void Print::flush() 0
Print.h:89:18:virtual void Print::flush() 0
Print.h:89:18:virtual void Print::flush() 0
Print.h:89:18:virtual void Print::flush() 0
Print.h:89:18:virtual void Print::flush() 0
Print.h:89:18:virtual void Print::flush() 0
Print.h:89:18:virtual void Print::flush() 0
Print.h:89:18:virtual void Print::flush() 0
Reset.cpp:104:6:void initiateReset(int) 0
Reset.cpp:108:6:void cancelReset() 0
Reset.cpp:112:6:void tickReset() 0
RingBuffer.h:100:5:int RingBufferN<N>::available() [with int N = 164] 0
RingBuffer.h:111:5:int RingBufferN<N>::availableForStore() [with int N = 164] 0
RingBuffer.h:65:6:void RingBufferN<N>::store_char(uint8_t) [with int N = 2048; uint8_t = unsigned char] 0
RingBuffer.h:88:5:int RingBufferN<N>::read_char() [with int N = 2048] 0
SEGGER_RTT.c:1304:10:SEGGER_RTT_HasData 0
SEGGER_RTT.c:1325:10:SEGGER_RTT_HasDataUp 0
SEGGER_RTT.c:1651:6:SEGGER_RTT_Init 0
SEGGER_RTT.c:484:17:_GetAvailWriteSpace 0
SERCOM.cpp:116:6:void SERCOM::resetUART() 0
SERCOM.cpp:127:6:void SERCOM::enableUART() 0
SERCOM.cpp:136:6:void SERCOM::flushUART() 0
SERCOM.cpp:146:6:void SERCOM::clearStatusUART() 0
SERCOM.cpp:152:6:bool SERCOM::availableDataUART() 0
SERCOM.cpp:158:6:bool SERCOM::isUARTError() 0
SERCOM.cpp:163:6:void SERCOM::acknowledgeUARTError() 0
SERCOM.cpp:168:6:bool SERCOM::isBufferOverflowErrorUART() 0
SERCOM.cpp:174:6:bool SERCOM::isFrameErrorUART() 0
SERCOM.cpp:180:6:void SERCOM::clearFrameErrorUART() 0
SERCOM.cpp:186:6:bool SERCOM::isParityErrorUART() 0
SERCOM.cpp:192:6:bool SERCOM::isDataRegisterEmptyUART() 0
SERCOM.cpp:198:9:uint8_t SERCOM::readDataUART() 0
SERCOM.cpp:203:5:int SERCOM::writeDataUART(uint8_t) 0
SERCOM.cpp:213:6:void SERCOM::enableDataRegisterEmptyInterruptUART() 0
SERCOM.cpp:218:6:void SERCOM::disableDataRegisterEmptyInterruptUART() 0
SERCOM.cpp:276:6:void SERCOM::resetSPI() 0
SERCOM.cpp:285:6:void SERCOM::enableSPI() 0
SERCOM.cpp:296:6:void SERCOM::disableSPI() 0
SERCOM.cpp:317:17:SercomDataOrder SERCOM::getDataOrderSPI() 0
SERCOM.cpp:358:9:uint8_t SERCOM::transferDataSPI(uint8_t) 0
SERCOM.cpp:374:6:bool SERCOM::isBufferOverflowErrorSPI() 0
SERCOM.cpp:379:6:bool SERCOM::isDataRegisterEmptySPI() 0
SERCOM.cpp:397:9:uint8_t SERCOM::calculateBaudrateSynchronous(uint32_t) 0
SERCOM.cpp:407:6:void SERCOM::resetWIRE() 0
SERCOM.cpp:423:6:void SERCOM::enableWIRE() 0
SERCOM.cpp:452:6:void SERCOM::disableWIRE() 0
SERCOM.cpp:49:1:SERCOM::SERCOM(Sercom*) 0
SERCOM.cpp:525:6:void SERCOM::prepareNackBitWIRE() 0
SERCOM.cpp:535:6:void SERCOM::prepareAckBitWIRE() 0
SERCOM.cpp:545:6:void SERCOM::prepareCommandBitsWire(uint8_t) 0
SERCOM.cpp:624:6:bool SERCOM::sendDataMasterWIRE(uint8_t) 0
SERCOM.cpp:650:6:bool SERCOM::sendDataSlaveWIRE(uint8_t) 0
SERCOM.cpp:662:6:bool SERCOM::isMasterWIRE() 0
SERCOM.cpp:667:6:bool SERCOM::isSlaveWIRE() 0
SERCOM.cpp:672:6:bool SERCOM::isBusIdleWIRE() 0
SERCOM.cpp:677:6:bool SERCOM::isBusOwnerWIRE() 0
SERCOM.cpp:682:6:bool SERCOM::isDataReadyWIRE() 0
SERCOM.cpp:687:6:bool SERCOM::isStopDetectedWIRE() 0
SERCOM.cpp:692:6:bool SERCOM::isRestartDetectedWIRE() 0
SERCOM.cpp:697:6:bool SERCOM::isAddressMatch() 0
SERCOM.cpp:702:6:bool SERCOM::isMasterReadOperationWIRE() 0
SERCOM.cpp:707:6:bool SERCOM::isRXNackReceivedWIRE() 0
SERCOM.cpp:712:5:int SERCOM::availableWIRE() 0
SERCOM.cpp:720:9:uint8_t SERCOM::readDataWIRE() 0
SPI.cpp:151:6:void SPIClass::endTransaction() 0
SPI.cpp:165:6:void SPIClass::setBitOrder(BitOrder) 0
SPI.cpp:174:6:void SPIClass::setDataMode(uint8_t) 0
SPI.cpp:199:6:void SPIClass::setClockDivider(uint8_t) 0
SPI.cpp:208:6:byte SPIClass::transfer(uint8_t) 0
SPI.cpp:238:6:void SPIClass::attachInterrupt() 0
SPI.cpp:242:6:void SPIClass::detachInterrupt() 0
SPI.cpp:267:100:cpp) 0
SPI.cpp:59:6:void SPIClass::init() 0
SdFat.h:67:3:SdFile::SdFile() 0
SdSpiCard.cpp:375:6:void SdSpiCard::dbgClearStats() 0
SdSpiCard.cpp:377:6:void SdSpiCard::dbgPrintStats() 0
SdSpiCard.cpp:485:6:bool SdSpiCard::readData(uint8_t*) 0
SdSpiCard.h:192:8:virtual bool SdSpiCard::syncBlocks() 0
SdSpiCard.h:285:11:14(SdSpiDriver*) 0
SdSpiCard.h:291:8:16(SdSpiDriver*, uint8_t) 0
SdSpiCardEX.cpp:53:6:virtual bool SdSpiCardEX::syncBlocks() 0
SdioCardEX.cpp:64:6:virtual bool SdioCardEX::syncBlocks() 0
StdioStream.cpp:224:9:int32_t StdioStream::ftell() 0
Stream.cpp:100:6:bool Stream::find(char*, size_t) 0
Stream.cpp:87:6:void Stream::setTimeout(long unsigned int) 0
TinyGPS.cpp:114:5:int TinyGPS::from_hex(char) 0
TinyGPS.cpp:280:6:long int TinyGPS::gpsatol(const char*) 0
TinyGPS.cpp:341:13:static const char* TinyGPS::cardinal(float) 0
Tone.cpp:56:20:1() 0
Tone.cpp:68:6:void toneAccurateClock(uint32_t) 0
U8g2lib.cpp:51:6:void U8G2::writeBufferPBM(Print&) 0
U8g2lib.cpp:57:6:void U8G2::writeBufferXBM(Print&) 0
U8g2lib.cpp:63:6:void U8G2::writeBufferPBM2(Print&) 0
U8g2lib.cpp:69:6:void U8G2::writeBufferXBM2(Print&) 0
U8g2lib.h:277:17:u8g2_uint_t U8G2::drawUTF8(u8g2_uint_t, u8g2_uint_t, const char*) 0
U8x8lib.cpp:1090:20:uint8_t u8x8_byte_arduino_sw_i2c(u8x8_t*, uint8_t, uint8_t, void*) 0
U8x8lib.cpp:1506:20:uint8_t u8x8_byte_arduino_8bit_8080mode(u8x8_t*, uint8_t, uint8_t, void*) 0
U8x8lib.cpp:1635:20:uint8_t u8x8_byte_arduino_ks0108(u8x8_t*, uint8_t, uint8_t, void*) 0
U8x8lib.cpp:1655:6:void u8x8_SetPin_4Wire_SW_SPI(u8x8_t*, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t) 0
U8x8lib.cpp:1678:6:void u8x8_SetPin_3Wire_SW_SPI(u8x8_t*, uint8_t, uint8_t, uint8_t, uint8_t) 0
U8x8lib.cpp:1702:6:void u8x8_SetPin_3Wire_HW_SPI(u8x8_t*, uint8_t, uint8_t) 0
U8x8lib.cpp:1711:6:void u8x8_SetPin_4Wire_HW_SPI(u8x8_t*, uint8_t, uint8_t, uint8_t) 0
U8x8lib.cpp:1718:6:void u8x8_SetPin_ST7920_HW_SPI(u8x8_t*, uint8_t, uint8_t) 0
U8x8lib.cpp:1738:6:void u8x8_SetPin_SW_I2C(u8x8_t*, uint8_t, uint8_t, uint8_t) 0
U8x8lib.cpp:1757:6:void u8x8_SetPin_HW_I2C(u8x8_t*, uint8_t, uint8_t, uint8_t) 0
U8x8lib.cpp:1764:6:void u8x8_SetPin_8Bit_6800(u8x8_t*, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t) 0
U8x8lib.cpp:1802:6:void u8x8_SetPin_8Bit_8080(u8x8_t*, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t) 0
U8x8lib.cpp:1840:6:void u8x8_SetPin_KS0108(u8x8_t*, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t) 0
U8x8lib.cpp:1858:6:void u8x8_SetPin_SED1520(u8x8_t*, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t) 0
U8x8lib.cpp:348:11:uint8_t u8x8_byte_arduino_3wire_sw_spi(u8x8_t*, uint8_t, uint8_t, void*) 0
U8x8lib.cpp:683:11:uint8_t u8x8_byte_arduino_4wire_sw_spi(u8x8_t*, uint8_t, uint8_t, void*) 0
Uart.cpp:139:5:virtual int Uart::peek() 0
Uart.cpp:193:21:SercomNumberStopBit Uart::extractNbStopBit(uint16_t) 0
Uart.cpp:206:20:SercomUartCharSize Uart::extractCharSize(uint16_t) 0
Uart.cpp:226:18:SercomParityMode Uart::extractParity(uint16_t) 0
Uart.h:45:5:virtual Uart::operator bool() 0
Udp.h:45:19:virtual uint8_t UDP::beginMulticast(IPAddress, uint16_t) 0
Udp.h:45:19:virtual uint8_t UDP::beginMulticast(IPAddress, uint16_t) 0
WInterrupts.c:271:6:EIC_0_Handler 0
WInterrupts.c:276:6:EIC_1_Handler 0
WInterrupts.c:281:6:EIC_2_Handler 0
WInterrupts.c:286:6:EIC_3_Handler 0
WInterrupts.c:291:6:EIC_4_Handler 0
WInterrupts.c:296:6:EIC_5_Handler 0
WInterrupts.c:301:6:EIC_6_Handler 0
WInterrupts.c:306:6:EIC_7_Handler 0
WInterrupts.c:311:6:EIC_8_Handler 0
WInterrupts.c:316:6:EIC_9_Handler 0
WInterrupts.c:321:6:EIC_10_Handler 0
WInterrupts.c:326:6:EIC_11_Handler 0
WInterrupts.c:331:6:EIC_12_Handler 0
WInterrupts.c:336:6:EIC_13_Handler 0
WInterrupts.c:341:6:EIC_14_Handler 0
WInterrupts.c:346:6:EIC_15_Handler 0
WMath.cpp:25:13:void randomSeed(uint32_t) 0
WMath.cpp:60:17:uint16_t makeWord(uint16_t) 0
WMath.cpp:65:17:uint16_t makeWord(uint8_t, uint8_t) 0
WString.cpp:260:15:unsigned char String::concat(const String&) 0
WString.cpp:436:5:int String::compareTo(const String&) const 0
WString.cpp:491:15:unsigned char String::startsWith(const String&) const 0
WString.cpp:513:6:char String::charAt(unsigned int) const 0
WString.cpp:518:6:void String::setCharAt(unsigned int, char) 0
WString.cpp:523:8:char& String::operator[](unsigned int) 0
WString.cpp:533:6:char String::operator[](unsigned int) const 0
WString.cpp:556:5:int String::indexOf(char) const 0
WString.cpp:569:5:int String::indexOf(const String&) const 0
WString.cpp:582:5:int String::lastIndexOf(char) const 0
WString.cpp:598:5:int String::lastIndexOf(const String&) const 0
WString.cpp:637:6:void String::replace(char, char) 0
WString.cpp:688:6:void String::remove(unsigned int) 0
WString.cpp:737:6:long int String::toInt() const 0
WString.cpp:748:8:double String::toDouble() const 0
WString.h:51:7:void String::StringIfHelper() const 0
WatchdogSAMD.cpp:149:6:void WatchdogSAMD::reset() 0
WatchdogSAMD.cpp:162:9:uint8_t WatchdogSAMD::resetCause() 0
WatchdogSAMD.cpp:170:6:void WatchdogSAMD::disable() 0
WatchdogSAMD.cpp:182:6:void WDT_Handler() 0
WatchdogSAMD.cpp:228:6:void WatchdogSAMD::_initialize_wdt() 0
WiFi.cpp:1071:6:void WiFiClass::refresh() 0
WiFi.cpp:1077:6:void WiFiClass::lowPowerMode() 0
WiFi.cpp:1082:6:void WiFiClass::maxLowPowerMode() 0
WiFi.cpp:1087:6:void WiFiClass::noLowPowerMode() 0
WiFi.cpp:1103:5:int WiFiClass::ping(const String&, uint8_t) 0
WiFi.cpp:1192:6:void WiFiClass::setTimeout(long unsigned int) 0
WiFi.cpp:227:13:void resolve_cb(uint8_t*, uint32_t) 0
WiFi.cpp:232:6:void WiFiClass::handleResolve(uint8_t*, uint32_t) 0
WiFi.cpp:237:13:void socket_cb(SOCKET, uint8, void*) 0
WiFi.cpp:247:6:void WiFiClass::handlePingResponse(uint32, uint32, uint8) 0
WiFi.cpp:266:1:WiFiClass::WiFiClass() 0
WiFi.cpp:275:6:void WiFiClass::setPins(int8_t, int8_t, int8_t, int8_t) 0
WiFi.cpp:409:9:uint8_t WiFiClass::begin(const char*) 0
WiFi.cpp:425:9:uint8_t WiFiClass::begin(const char*, const char*) 0
WiFi.cpp:469:9:uint8_t WiFiClass::beginAP(const char*) 0
WiFi.cpp:474:9:uint8_t WiFiClass::beginAP(const char*, uint8_t, uint32_t) 0
WiFi.cpp:48:13:void wifi_cb(uint8_t, void*) 0
WiFi.cpp:505:9:uint8_t WiFiClass::beginAP(const char*, const char*) 0
WiFi.cpp:581:9:uint8_t WiFiClass::beginProvision() 0
WiFi.cpp:766:10:uint32_t WiFiClass::localIP() 0
WiFi.cpp:771:10:uint32_t WiFiClass::subnetMask() 0
WiFi.cpp:776:10:uint32_t WiFiClass::gatewayIP() 0
WiFi.cpp:781:7:char* WiFiClass::SSID() 0
WiFi.cpp:791:10:uint8_t* WiFiClass::BSSID(uint8_t*) 0
WiFiClient.cpp:124:5:virtual int WiFiClient::available() 0
WiFiClient.cpp:172:6:virtual void WiFiClient::flush() 0
WiFiClient.cpp:187:9:virtual uint8_t WiFiClient::connected() 0
WiFiClient.cpp:196:9:uint8_t WiFiClient::status() 0
WiFiClient.cpp:202:1:virtual WiFiClient::operator bool() 0
WiFiClient.cpp:207:6:bool WiFiClient::operator==(const WiFiClient&) const 0
WiFiClient.cpp:212:6:bool WiFiClient::operator!=(const WiFiClient&) const 0
WiFiClient.cpp:25:1:WiFiClient::WiFiClient() 0
WiFiClient.cpp:30:1:WiFiClient::WiFiClient(uint8_t) 0
WiFiSSLClient.cpp:37:5:virtual int WiFiSSLClient::connect(const char*, uint16_t) 0
WiFiServer.cpp:106:9:uint8_t WiFiServer::status() 0
WiFiServer.cpp:25:1:WiFiServer::WiFiServer(uint16_t) 0
WiFiServer.cpp:31:6:virtual void WiFiServer::begin() 0
WiFiServer.cpp:36:9:uint8_t WiFiServer::beginSSL() 0
WiFiSocket.cpp:293:10:uint16_t WiFiSocketClass::remotePort(SOCKET) 0
WiFiSocket.cpp:380:5:int WiFiSocketClass::hasParent(SOCKET, SOCKET) 0
WiFiSocket.cpp:70:1:WiFiSocketClass::~WiFiSocketClass() 0
WiFiSocket.h:41:11:virtual void* DefaultWiFiCallbacks::malloc(size_t) 0
WiFiSocket.h:45:10:virtual void DefaultWiFiCallbacks::free(void*) 0
WiFiSocket.h:49:10:virtual bool DefaultWiFiCallbacks::busy(uint32_t) 0
WiFiUdp.cpp:129:5:virtual int WiFiUDP::beginPacket(IPAddress, uint16_t) 0
WiFiUdp.cpp:232:6:virtual void WiFiUDP::flush() 0
WiFiUdp.cpp:32:1:WiFiUDP::WiFiUDP() 0
WiFiUdp.cpp:92:5:virtual int WiFiUDP::available() 0
Wire.cpp:100:9:uint8_t TwoWire::requestFrom(uint8_t, size_t) 0
Wire.cpp:105:6:void TwoWire::beginTransmission(uint8_t) 0
Wire.cpp:149:9:uint8_t TwoWire::endTransmission() 0
Wire.cpp:181:5:virtual int TwoWire::available() 0
Wire.cpp:191:5:virtual int TwoWire::peek() 0
Wire.cpp:196:6:virtual void TwoWire::flush() 0
Wire.cpp:202:6:void TwoWire::onReceive(void (*)(int)) 0
Wire.cpp:207:6:void TwoWire::onRequest(void (*)()) 0
Wire.cpp:287:8:void SERCOM3_Handler() 0
Wire.cpp:295:8:void SERCOM1_Handler() 0
Wire.cpp:303:8:void SERCOM6_Handler() 0
Wire.cpp:61:6:void TwoWire::end() 0
abi.cpp:24:6:void __cxa_pure_virtual() 0
abi.cpp:31:6:void __cxa_deleted_virtual() 0
activity.h:17:18:virtual void fk::Activity::consumed() 0
activity.h:17:18:virtual void fk::Activity::consumed() 0
ads_1219.cpp:38:1:fk::Ads1219::~Ads1219() 0
ads_1219.cpp:41:6:bool fk::Ads1219::begin() 0
ads_1219.cpp:83:6:bool fk::Ads1219::read_differential_0_1(int32_t&) 0
ads_1219.cpp:87:6:bool fk::Ads1219::read_differential_2_3(int32_t&) 0
ads_1219.cpp:91:6:bool fk::Ads1219::read_dfferential_1_2(int32_t&) 0
aggregated_weather.cpp:63:11:float fk::AggregatedWeatherHelpers::get_rain_mm_per_hour() 0
api_handler.cpp:36:6:void fk::ApiHandler::adjust_time_if_necessary(const fk_app_HttpQuery*) 0
arduino.cpp:24:13:void serial_putchar(char, void*) 0
arduino.cpp:42:10:uint32_t osi_vprintf(const char*, va_list) 0
arduino.cpp:47:13:os_status_t osi_platform_setup() 0
arduino.cpp:51:10:uint32_t osi_platform_uptime() 0
arduino.cpp:60:10:uint32_t osi_platform_micros() 0
atlas_api.cpp:8:1:fk::AtlasApi::AtlasApi(fk::AtlasSensorType, fk::OemAtlas&) 0
atlas_api_reply.cpp:31:6:bool fk::AtlasApiReply::has_errors() const 0
atlas_module.cpp:11:1:fk::AtlasModule::AtlasModule(fk::Pool&) 0
atlas_module.cpp:14:1:fk::AtlasModule::~AtlasModule() 0
atlas_module.cpp:163:13:const char* fk::AtlasModule::get_display_name_key() 0
atlas_module.cpp:282:17:nonstd::optional_lite::optional<float> fk::AtlasModule::get_pressure(fk::ReadingsContext) 0
backup_worker.cpp:20:1:fk::BackupWorker::BackupWorker() 0
backup_worker.h:10:7:fk::BackupWorker::~BackupWorker() 0
backup_worker.h:18:13:virtual uint8_t fk::BackupWorker::priority() const 0
backup_worker.h:22:17:virtual const char* fk::BackupWorker::name() const 0
bad_blocks.cpp:21:1:fk::BadBlocks::~BadBlocks() 0
bad_blocks.cpp:24:6:void fk::BadBlocks::mark_address_as_bad(uint32_t) 0
bad_blocks.cpp:34:6:bool fk::BadBlocks::is_address_bad(uint32_t) const 0
base64.cpp:39:1:fk::HexWriter::HexWriter(fk::Writer*) 0
base64.cpp:5:1:fk::HexReader::HexReader(fk::Reader*) 0
base64.cpp:8:15:size_t fk::hexchr2bin(uint8_t, uint8_t*) 0
battery_gauge.cpp:13:15:fk::BatteryGauge* fk::get_battery_gauge() 0
blake2b.cpp:124:8:size_t BLAKE2b::hashSize() const 0
blake2b.cpp:129:8:size_t BLAKE2b::blockSize() const 0
blake2b.cpp:144:6:void BLAKE2b::reset() 0
blake2b.cpp:53:6:void clean(void*, size_t) 0
board.c:103:6:board_minimal_initialize 0
board.c:72:6:initialize_dpll 0
board.cpp:128:20:fk::AcquireTwoWireBus* fk::Board::acquire_i2c_radio() 0
board.cpp:134:20:fk::AcquireTwoWireBus* fk::Board::acquire_i2c_module() 0
board.cpp:138:1:fk::EepromLock::EepromLock() 0
board.cpp:141:1:fk::EepromLock::EepromLock(const fk::EepromLock&) 0
board.cpp:144:1:fk::EepromLock::EepromLock(uint32_t) 0
board.cpp:8:8:fk::Board* fk::get_board() 0
buttons.cpp:49:6:bool fk::Button::is_up() const 0
buttons.cpp:53:6:bool fk::Button::is_enter() const 0
buttons.cpp:57:6:bool fk::Button::is_down() const 0
buttons.cpp:61:6:bool fk::Button::is_external() const 0
buttons.cpp:71:10:fk::Buttons* fk::get_buttons() 0
bytes.h:34:24:dhara_r32 0
bytes.h:34:24:dhara_r32 0
bytes.h:42:20:dhara_w32 0
caching_memory.cpp:16:6:bool fk::CachedPage::dirty() const 0
circular_buffer.h:139:10:bool fk::circular_buffer<T>::empty() const [with T = char] 0
clock.cpp:68:1:fk::CoreClock::CoreClock(fk::TwoWireWrapper) 0
compare_banks_worker.cpp:5:1:fk::CompareBanksWorker::CompareBanksWorker() 0
compare_banks_worker.cpp:8:6:virtual void fk::CompareBanksWorker::run(fk::Pool&) 0
compare_banks_worker.h:15:13:virtual uint8_t fk::CompareBanksWorker::priority() const 0
compare_banks_worker.h:19:17:virtual const char* fk::CompareBanksWorker::name() const 0
compare_banks_worker.h:7:7:fk::CompareBanksWorker::~CompareBanksWorker() 0
configure.cpp:7:1:fk::ModuleConfigurer::ModuleConfigurer(fk::ModuleScanning&) 0
configure_module_worker.cpp:17:1:fk::ConfigureModuleWorker::ConfigureModuleWorker(fk::ModulePosition) 0
configure_module_worker.h:22:13:virtual uint8_t fk::ConfigureModuleWorker::priority() const 0
configure_module_worker.h:26:17:virtual const char* fk::ConfigureModuleWorker::name() const 0
configure_module_worker.h:8:7:fk::ConfigureModuleWorker::~ConfigureModuleWorker() 0
contexts.cpp:12:17:const fk::GpsState* fk::ScanningContext::gps() 0
contexts.cpp:31:17:fk::TwoWireWrapper& fk::ModuleContext::module_bus() 0
contexts.cpp:39:10:uint32_t fk::ModuleContext::now() const 0
core_cm4.h:1626:22:NVIC_EnableIRQ 0
core_cm4.h:1637:22:NVIC_DisableIRQ 0
core_cm4.h:1672:22:NVIC_ClearPendingIRQ 0
core_cm4.h:1790:22:NVIC_SystemReset 0
core_cm4.h:1790:22:void NVIC_SystemReset() 0
cortex_handlers.c:30:6:Dummy_Handler 0
cortex_handlers.c:540:6:USB_SetHandler 0
cpool.cpp:24:8:size_t fk::ConnectionPool::available() 0
crc.c:12:10:crc32_update 0
crc32.cpp:11:10:uint32_t phylum::crc32_update(uint32_t, uint8_t) 0
crc32.cpp:28:10:uint32_t phylum::crc32_checksum(const uint8_t*, size_t) 0
curves.cpp:10:19:virtual float fk::NoopCurve::apply(float) 0
curves.cpp:38:19:virtual float fk::LinearCurve::apply(float) 0
debug_udp.cpp:170:8:size_t fk::DebugUDP::debug(const char*, const uint8_t*, size_t) 0
debug_udp.cpp:17:1:fk::DebugUDP::~DebugUDP() 0
debugging.cpp:103:6:bool fk::fk_debug_is_attached() 0
debugging.cpp:107:6:void fk::fk_debug_mode_configure(const char*) 0
debugging.cpp:118:6:bool fk::fk_debug_get_console_attached() 0
debugging.cpp:122:6:bool fk::fk_debug_override_schedules() 0
debugging.cpp:126:6:void fk::fk_debug_set_console_attached() 0
debugging.cpp:134:6:void fk::fk_debugger_break() 0
debugging.cpp:140:10:virtual void fk::NoopDebuggerOfLastResort::message(const char*) 0
debugging.cpp:155:23:static fk::DebuggerOfLastResort* fk::DebuggerOfLastResort::get() 0
debugging.cpp:162:6:static void fk::DebuggerOfLastResort::enable() 0
debugging.cpp:166:6:static void fk::DebuggerOfLastResort::disable() 0
debugging.cpp:82:6:void __cyg_profile_func_exit(void*, void*) 0
debugging.cpp:99:6:bool fk::fk_debugging_initialize() 0
delay.c:29:15:millis 0
delay.c:81:6:SysTick_DefaultHandler 0
delimited_buffer.h:394:18:virtual void phylum::delimited_buffer::ensure_valid() const 0
delimited_buffer.h:394:18:virtual void phylum::delimited_buffer::ensure_valid() const 0
delimited_buffer.h:394:18:virtual void phylum::delimited_buffer::ensure_valid() const 0
delimited_buffer.h:394:18:virtual void phylum::delimited_buffer::ensure_valid() const 0
delimited_buffer.h:394:18:virtual void phylum::delimited_buffer::ensure_valid() const 0
delimited_buffer.h:394:18:virtual void phylum::delimited_buffer::ensure_valid() const 0
delimited_buffer.h:394:18:virtual void phylum::delimited_buffer::ensure_valid() const 0
delimited_buffer.h:394:18:virtual void phylum::delimited_buffer::ensure_valid() const 0
delimited_buffer.h:394:18:virtual void phylum::delimited_buffer::ensure_valid() const 0
delimited_buffer.h:394:18:virtual void phylum::delimited_buffer::ensure_valid() const 0
delimited_buffer.h:394:18:virtual void phylum::delimited_buffer::ensure_valid() const 0
dhara_map.cpp:222:5:int phylum::dhara_sector_map::dhara_is_bad(const dhara_nand*, phylum::dhara_block_t) 0
dhara_map.cpp:226:5:int phylum::dhara_sector_map::dhara_is_free(const dhara_nand*, phylum::dhara_page_t) 0
dhara_map.cpp:230:6:void phylum::dhara_sector_map::dhara_mark_bad(const dhara_nand*, phylum::dhara_block_t) 0
dhara_map.cpp:265:5:int phylum::dhara_nand_is_bad(const dhara_nand*, phylum::dhara_block_t) 0
dhara_map.cpp:273:6:void phylum::dhara_nand_mark_bad(const dhara_nand*, phylum::dhara_block_t) 0
dhara_map.cpp:303:5:int phylum::dhara_nand_is_free(const dhara_nand*, phylum::dhara_page_t) 0
dhara_map.cpp:93:8:virtual size_t phylum::dhara_sector_map::sector_size() 0
dhara_map.cpp:97:16:virtual phylum::dhara_sector_t phylum::dhara_sector_map::size() 0
diagnostics_module.cpp:32:1:fk::DiagnosticsModule::DiagnosticsModule(fk::Pool&) 0
diagnostics_module.cpp:35:1:fk::DiagnosticsModule::~DiagnosticsModule() 0
diagnostics_module.cpp:52:22:virtual const ModuleSensors* fk::DiagnosticsModule::get_sensors(fk::Pool&) 0
diagnostics_module.cpp:56:27:virtual const ModuleConfiguration fk::DiagnosticsModule::get_configuration(fk::Pool&) 0
directory.h:23:8:phylum::found_file::found_file() 0
directory.h:23:8:phylum::found_file::found_file() 0
directory_tree.h:58:13:phylum::directory_tree::~directory_tree() 0
display.cpp:107:10:virtual void fk::MainViewController::show_qr_code() 0
display.cpp:111:10:virtual void fk::MainViewController::show_lora() 0
display.cpp:115:10:virtual void fk::MainViewController::show_gps() 0
display.cpp:11:1:fk::MenuScreen::MenuScreen(const char*, fk::MenuOption**) 0
display.cpp:37:1:cpp) 0
display.cpp:49:13:fk::MainViewController::~MainViewController() 0
display.cpp:61:10:virtual void fk::MainViewController::show_menu() 0
display.cpp:65:10:virtual void fk::MainViewController::show_home() 0
display.cpp:69:10:virtual void fk::MainViewController::show_self_check() 0
display.cpp:73:10:virtual void fk::MainViewController::show_readings() 0
display.cpp:77:10:virtual void fk::MainViewController::show_schedule() 0
display.cpp:8:1:fk::MenuScreen::MenuScreen() 0
display.cpp:91:10:virtual void fk::MainViewController::show_module_status() 0
display.h:102:18:virtual void fk::MenuOption::focused(bool) 0
display.h:106:25:virtual const char* fk::MenuOption::label() const 0
display.h:110:18:virtual void fk::MenuOption::refresh(const fk::GlobalState*) 0
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_main_menu()::__lambda65] 0
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_main_menu()::__lambda66] 0
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_main_menu()::__lambda67] 0
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_main_menu()::__lambda68] 0
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_main_menu()::__lambda69] 0
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_module_menu()::__lambda27] 0
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_network_menu()::__lambda58] 0
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_network_menu()::__lambda60] 0
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_tools_menu()::__lambda36] 0
display.h:236:10:virtual bool fk::NullDisplay::begin() 0
display.h:236:10:virtual bool fk::NullDisplay::begin() 0
display.h:237:10:virtual void fk::NullDisplay::on() 0
display.h:237:10:virtual void fk::NullDisplay::on() 0
display.h:238:10:virtual void fk::NullDisplay::off() 0
display.h:238:10:virtual void fk::NullDisplay::off() 0
display.h:239:10:virtual void fk::NullDisplay::centered(const xbm_data_t&) 0
display.h:239:10:virtual void fk::NullDisplay::centered(const xbm_data_t&) 0
display.h:240:10:virtual void fk::NullDisplay::company_logo() 0
display.h:240:10:virtual void fk::NullDisplay::company_logo() 0
display.h:241:10:virtual void fk::NullDisplay::fk_logo() 0
display.h:241:10:virtual void fk::NullDisplay::fk_logo() 0
display.h:242:10:virtual void fk::NullDisplay::home(const fk::HomeScreen&) 0
display.h:242:10:virtual void fk::NullDisplay::home(const fk::HomeScreen&) 0
display.h:243:10:virtual void fk::NullDisplay::menu(const fk::MenuScreen&) 0
display.h:243:10:virtual void fk::NullDisplay::menu(const fk::MenuScreen&) 0
display.h:244:10:virtual void fk::NullDisplay::qr(const fk::QrCodeScreen&) 0
display.h:244:10:virtual void fk::NullDisplay::qr(const fk::QrCodeScreen&) 0
display.h:245:10:virtual void fk::NullDisplay::self_check(const fk::SelfCheckScreen&) 0
display.h:245:10:virtual void fk::NullDisplay::self_check(const fk::SelfCheckScreen&) 0
display.h:246:10:virtual void fk::NullDisplay::simple(fk::SimpleScreen&&) 0
display.h:246:10:virtual void fk::NullDisplay::simple(fk::SimpleScreen&&) 0
display.h:247:10:virtual void fk::NullDisplay::reading(fk::ReadingScreen&) 0
display.h:247:10:virtual void fk::NullDisplay::reading(fk::ReadingScreen&) 0
display.h:248:10:virtual void fk::NullDisplay::module_status(fk::ModuleStatusScreen&) 0
display.h:248:10:virtual void fk::NullDisplay::module_status(fk::ModuleStatusScreen&) 0
display.h:74:18:virtual bool fk::MenuOption::active() const 0
display.h:78:18:virtual void fk::MenuOption::active(bool) 0
display.h:82:18:virtual bool fk::MenuOption::visible() const 0
display.h:86:18:virtual void fk::MenuOption::visible(bool) 0
display.h:90:18:virtual bool fk::MenuOption::selected() const 0
display.h:94:18:virtual void fk::MenuOption::selected(bool) 0
display.h:98:18:virtual bool fk::MenuOption::focused() const 0
display_self_check_callbacks.cpp:51:6:void fk::DisplaySelfCheckCallbacks::clear() 0
display_self_check_callbacks.cpp:56:18:fk::SelfCheckScreen& fk::DisplaySelfCheckCallbacks::screen() 0
display_views.h:40:18:virtual void fk::DisplayView::hide() 0
display_views.h:40:18:virtual void fk::DisplayView::hide() 0
display_views.h:40:18:virtual void fk::DisplayView::hide() 0
display_views.h:40:18:virtual void fk::DisplayView::hide() 0
display_views.h:40:18:virtual void fk::DisplayView::hide() 0
display_views.h:40:18:virtual void fk::DisplayView::hide() 0
display_views.h:40:18:virtual void fk::DisplayView::hide() 0
display_views.h:43:18:virtual void fk::DisplayView::show() 0
display_views.h:43:18:virtual void fk::DisplayView::show() 0
display_views.h:43:18:virtual void fk::DisplayView::show() 0
display_views.h:43:18:virtual void fk::DisplayView::show() 0
display_views.h:43:18:virtual void fk::DisplayView::show() 0
display_views.h:43:18:virtual void fk::DisplayView::show() 0
display_views.h:43:18:virtual void fk::DisplayView::show() 0
display_views.h:43:18:virtual void fk::DisplayView::show() 0
display_views.h:43:18:virtual void fk::DisplayView::show() 0
display_views.h:62:18:virtual bool fk::DisplayView::custom_leds() 0
display_views.h:62:18:virtual bool fk::DisplayView::custom_leds() 0
display_views.h:62:18:virtual bool fk::DisplayView::custom_leds() 0
display_views.h:62:18:virtual bool fk::DisplayView::custom_leds() 0
display_views.h:62:18:virtual bool fk::DisplayView::custom_leds() 0
display_views.h:62:18:virtual bool fk::DisplayView::custom_leds() 0
display_views.h:62:18:virtual bool fk::DisplayView::custom_leds() 0
display_views.h:62:18:virtual bool fk::DisplayView::custom_leds() 0
display_views.h:62:18:virtual bool fk::DisplayView::custom_leds() 0
distance_module.cpp:11:1:fk::DistanceModule::~DistanceModule() 0
distance_module.cpp:58:22:virtual const ModuleSensors* fk::DistanceModule::get_sensors(fk::Pool&) 0
distance_module.cpp:62:27:virtual const ModuleConfiguration fk::DistanceModule::get_configuration(fk::Pool&) 0
dns_message.cpp:433:17:fk::EncodedMessage* fk::DNSWriter::finish() 0
download_firmware_worker.cpp:24:1:fk::DownloadFirmwareWorker::DownloadFirmwareWorker() 0
download_firmware_worker.h:17:13:virtual uint8_t fk::DownloadFirmwareWorker::priority() const 0
download_firmware_worker.h:21:17:virtual const char* fk::DownloadFirmwareWorker::name() const 0
download_firmware_worker.h:7:7:fk::DownloadFirmwareWorker::~DownloadFirmwareWorker() 0
download_handler.cpp:144:1:fk::DownloadHandler::DownloadHandler(uint8_t) 0
download_handler.h:21:7:fk::DownloadWorker::~DownloadWorker() 0
download_handler.h:32:13:virtual uint8_t fk::DownloadWorker::priority() const 0
download_handler.h:36:17:virtual const char* fk::DownloadWorker::name() const 0
driver_init.c:105:6:QUAD_SPI_0_PORT_init 0
driver_init.c:109:6:QUAD_SPI_0_CLOCK_init 0
driver_init.c:123:6:CALENDAR_0_CLOCK_init 0
driver_init.c:158:6:I2C_0_CLOCK_init 0
driver_init.c:197:6:I2C_1_CLOCK_init 0
driver_init.c:236:6:I2C_2_CLOCK_init 0
driver_init.c:292:6:SPI_0_CLOCK_init 0
driver_init.c:348:6:SPI_1_CLOCK_init 0
driver_init.c:404:6:SPI_2_CLOCK_init 0
driver_init.c:419:6:delay_driver_init 0
driver_init.c:437:6:RAND_0_CLOCK_init 0
driver_init.c:43:6:CRYPTOGRAPHY_0_init 0
driver_init.c:448:6:WDT_0_CLOCK_init 0
driver_init.c:54:6:CRC_0_init 0
driver_init.c:60:6:EXTERNAL_IRQ_0_init 0
driver_init.c:68:6:EVENT_SYSTEM_0_init 0
driver_init.c:76:6:HASH_ALGORITHM_0_CLOCK_init 0
driver_init.c:93:6:FLASH_0_CLOCK_init 0
dump_flash_memory_worker.h:13:13:virtual uint8_t fk::DumpFlashMemoryWorker::priority() const 0
dump_flash_memory_worker.h:17:17:virtual const char* fk::DumpFlashMemoryWorker::name() const 0
dump_flash_memory_worker.h:8:7:fk::DumpFlashMemoryWorker::~DumpFlashMemoryWorker() 0
eeprom.cpp:13:1:fk::ModuleEeprom::ModuleEeprom(fk::TwoWireWrapper&) 0
eeprom.cpp:99:6:bool fk::ModuleEeprom::read_header(ModuleHeader&) 0
enable_module_power.cpp:16:6:bool fk::EnableModulePower::can_control() 0
error.c:20:13:dhara_strerror 0
ethutil.cpp:11:10:uint32_t ethutil_htonl(long unsigned int) 0
ethutil.cpp:19:10:uint16_t ethutil_ntohs(short unsigned int) 0
ethutil.cpp:27:10:uint32_t ethutil_ntohl(long unsigned int) 0
ethutil.cpp:35:10:uint16_t ethutil_swaps(uint16_t) 0
ethutil.cpp:3:10:uint16_t ethutil_htons(short unsigned int) 0
ethutil.cpp:42:10:uint32_t ethutil_swapl(uint32_t) 0
export_data_worker.h:40:13:virtual uint8_t fk::ExportDataWorker::priority() const 0
export_data_worker.h:44:17:virtual const char* fk::ExportDataWorker::name() const 0
export_data_worker.h:48:21:virtual fk::TaskDisplayInfo fk::ExportDataWorker::display_info() const 0
external.c:78:10:fkb_aligned_on 0
factory_wipe.cpp:9:1:fk::FactoryWipe::FactoryWipe(fk::Storage&) 0
factory_wipe_worker.cpp:14:1:fk::FactoryWipeWorker::FactoryWipeWorker(bool) 0
factory_wipe_worker.h:18:13:virtual uint8_t fk::FactoryWipeWorker::priority() const 0
factory_wipe_worker.h:22:17:virtual const char* fk::FactoryWipeWorker::name() const 0
factory_wipe_worker.h:7:7:fk::FactoryWipeWorker::~FactoryWipeWorker() 0
file.cpp:75:6:bool fk::File::create() 0
file.cpp:93:6:bool fk::File::partial_write_align_necessary() const 0
file_handler.cpp:103:1:fk::DownloadFileHandler::DownloadFileHandler() 0
file_handler.cpp:13:1:fk::DownloadFileWorker::DownloadFileWorker(fk::HttpServerConnection*) 0
file_handler.h:18:7:fk::DownloadFileWorker::~DownloadFileWorker() 0
file_handler.h:28:13:virtual uint8_t fk::DownloadFileWorker::priority() const 0
file_handler.h:32:17:virtual const char* fk::DownloadFileWorker::name() const 0
file_ops_darwin.cpp:15:1:fk::darwin::MetaOps::MetaOps(fk::Storage&) 0
file_ops_darwin.cpp:160:6:virtual bool fk::darwin::FileReader::seek_record(fk::RecordNumber, fk::Pool&) 0
file_ops_darwin.cpp:164:9:virtual int32_t fk::darwin::FileReader::read(uint8_t*, size_t) 0
file_ops_darwin.cpp:168:9:virtual int32_t fk::darwin::FileReader::read(void*, const pb_msgdesc_t*) 0
file_ops_darwin.cpp:72:1:fk::darwin::DataOps::DataOps(fk::Storage&) 0
file_ops_phylum.cpp:100:6:virtual bool fk::phylum_ops::FileReader::seek_record(fk::RecordNumber, fk::Pool&) 0
file_ops_phylum.cpp:104:9:virtual int32_t fk::phylum_ops::FileReader::read(uint8_t*, size_t) 0
file_ops_phylum.cpp:108:9:virtual int32_t fk::phylum_ops::FileReader::read(void*, const pb_msgdesc_t*) 0
file_ops_phylum.cpp:112:9:virtual int32_t fk::phylum_ops::FileReader::get_file_size(size_t&) 0
file_ops_phylum.cpp:13:1:fk::PhylumFlashMemory::PhylumFlashMemory(fk::DataMemory*) 0
file_ops_phylum.cpp:48:1:fk::phylum_ops::MetaOps::MetaOps(fk::Storage&) 0
file_ops_phylum.cpp:51:31:virtual tl::expected<long unsigned int, fk::Error> fk::phylum_ops::MetaOps::write_state(fk::GlobalState*, fk::Pool&) 0
file_ops_phylum.cpp:55:31:virtual tl::expected<long unsigned int, fk::Error> fk::phylum_ops::MetaOps::write_state(fk::GlobalState*, const fkb_header_t*, fk::Pool&) 0
file_ops_phylum.cpp:59:31:virtual tl::expected<long unsigned int, fk::Error> fk::phylum_ops::MetaOps::write_modules(fk::GlobalState*, const fkb_header_t*, fk::ConstructedModulesCollection&, fk::ModuleReadingsCollection&, fk::Pool&) 0
file_ops_phylum.cpp:63:37:virtual tl::expected<fk::FileAttributes, fk::Error> fk::phylum_ops::MetaOps::attributes() 0
file_ops_phylum.cpp:67:6:virtual bool fk::phylum_ops::MetaOps::read_record(fk::SignedRecordKind, fk::MetaRecord&, fk::Pool&) 0
file_ops_phylum.cpp:71:1:fk::phylum_ops::DataOps::DataOps(fk::Storage&) 0
file_ops_phylum.cpp:74:31:virtual tl::expected<long unsigned int, fk::Error> fk::phylum_ops::DataOps::write_readings(fk::GlobalState*, fk_data_DataRecord*, fk::Pool&) 0
file_ops_phylum.cpp:78:37:virtual tl::expected<fk::FileAttributes, fk::Error> fk::phylum_ops::DataOps::attributes() 0
file_ops_phylum.cpp:82:6:virtual bool fk::phylum_ops::DataOps::read_fixed_record(fk::DataRecord&, fk::Pool&) 0
file_ops_phylum.cpp:89:43:virtual tl::expected<fk::FileReader::SizeInfo, fk::Error> fk::phylum_ops::FileReader::get_size(fk::BlockNumber, fk::BlockNumber, fk::Pool&) 0
file_ops_phylum.cpp:96:6:virtual bool fk::phylum_ops::FileReader::decode_signed(void*, const pb_msgdesc_t*, fk::Pool&) 0
file_reader.cpp:13:13:phylum::file_size_t phylum::file_reader::position() const 0
file_reader.cpp:22:9:int32_t phylum::file_reader::read(size_t) 0
file_reader.cpp:71:9:int32_t phylum::file_reader::close() 0
firmware_manager.cpp:10:1:fk::FirmwareManager::FirmwareManager() 0
flash.cpp:118:8:fk::Flash* fk::get_flash() 0
flash.cpp:122:1:cpp) 0
flash.cpp:14:1:fk::DataMemoryFlash::DataMemoryFlash(fk::DataMemory*) 0
flash.cpp:28:1:fk::FlashWriter::~FlashWriter() 0
flash.h:15:22:virtual uint32_t fk::FlashMemory::flash_to_cpu(uint32_t) 0
flash.h:41:14:virtual uint32_t fk::DataMemoryFlash::flash_to_cpu(uint32_t) 0
flash.h:45:17:virtual const char* fk::DataMemoryFlash::name() 0
flash.h:81:17:virtual const char* fk::Flash::name() 0
format_sd_card.h:39:13:uint8_t fk::FormatSdCard::write_cache(uint32_t) 0
fsck_worker.h:11:13:virtual uint8_t fk::FsckWorker::priority() const 0
fsck_worker.h:15:17:virtual const char* fk::FsckWorker::name() const 0
fsck_worker.h:7:7:fk::FsckWorker::~FsckWorker() 0
fstream.cpp:137:6:bool FatStreamBase::seekoff(ios_base::off_type, ios_base::seekdir) 0
fstream.cpp:161:6:bool FatStreamBase::seekpos(ios_base::pos_type) 0
fstream.cpp:165:5:int FatStreamBase::write(const void*, size_t) 0
functional:2054:7:) [with _Res = long int; _Functor = phylum::sector_chain::prepare_sector(phylum::page_lock&, phylum::dhara_sector_t, bool)::__lambda1; _ArgTypes = {phylum::sector_chain_header_t*}] 0
gps.cpp:15:6:fk::Gps* fk::get_gps() 0
gps.cpp:19:1:cpp) 0
gps_view.cpp:30:6:virtual void fk::GpsView::hide() 0
hal_aes_sync.c:106:9:aes_sync_ecb_crypt 0
hal_aes_sync.c:411:9:aes_sync_gcm_update 0
hal_aes_sync.c:422:9:aes_sync_gcm_finish 0
hal_aes_sync.c:478:10:aes_sync_get_version 0
hal_aes_sync.c:48:9:aes_sync_init 0
hal_aes_sync.c:58:9:aes_sync_deinit 0
hal_aes_sync.c:68:9:aes_sync_enable 0
hal_aes_sync.c:78:9:aes_sync_disable 0
hal_aes_sync.c:88:9:aes_sync_set_encrypt_key 0
hal_aes_sync.c:97:9:aes_sync_set_decrypt_key 0
hal_atomic.c:44:6:atomic_enter_critical 0
hal_atomic.c:54:6:atomic_leave_critical 0
hal_atomic.c:63:10:atomic_get_version 0
hal_cache.c:43:9:cache_init 0
hal_cache.c:51:9:cache_enable 0
hal_cache.c:59:9:cache_disable 0
hal_cache.c:67:9:cache_configure 0
hal_cache.c:75:9:cache_invalidate_all 0
hal_calendar.c:506:9:calendar_set_baseyear 0
hal_calendar.c:640:10:calendar_get_version 0
hal_calendar.c:70:17:get_secs_in_month 0
hal_crc_sync.c:102:10:crc_sync_get_version 0
hal_crc_sync.c:41:9:crc_sync_init 0
hal_crc_sync.c:51:9:crc_sync_deinit 0
hal_crc_sync.c:61:9:crc_sync_enable 0
hal_crc_sync.c:71:9:crc_sync_disable 0
hal_crc_sync.c:80:9:crc_sync_crc32 0
hal_crc_sync.c:91:9:crc_sync_crc16 0
hal_delay.c:53:6:delay_init 0
hal_delay.c:77:10:delay_get_version 0
hal_evsys.c:45:9:event_system_init 0
hal_evsys.c:53:9:event_system_deinit 0
hal_evsys.c:61:9:event_system_enable_user 0
hal_evsys.c:69:9:event_system_disable_user 0
hal_evsys.c:77:9:event_system_enable_generator 0
hal_evsys.c:85:9:event_system_disable_generator 0
hal_evsys.c:95:10:event_system_get_version 0
hal_ext_irq.c:139:9:ext_irq_enable 0
hal_ext_irq.c:147:9:ext_irq_disable 0
hal_ext_irq.c:155:10:ext_irq_get_version 0
hal_ext_irq.c:67:9:ext_irq_init 0
hal_ext_irq.c:82:9:ext_irq_deinit 0
hal_flash.c:245:10:flash_get_page_size 0
hal_flash.c:254:10:flash_get_total_pages 0
hal_flash.c:263:10:flash_get_version 0
hal_gpio.c:41:10:gpio_get_version 0
hal_gpio.h:105:20:gpio_set_pin_direction 0
hal_i2c_m_sync.c:130:9:i2c_m_sync_enable 0
hal_i2c_m_sync.c:138:9:i2c_m_sync_disable 0
hal_i2c_m_sync.c:146:9:i2c_m_sync_set_slaveaddr 0
hal_i2c_m_sync.c:154:9:i2c_m_sync_set_baudrate 0
hal_i2c_m_sync.c:230:9:i2c_m_sync_transfer 0
hal_i2c_m_sync.c:238:9:i2c_m_sync_send_stop 0
hal_i2c_m_sync.c:246:9:i2c_m_sync_get_io_descriptor 0
hal_i2c_m_sync.c:255:10:i2c_m_sync_get_version 0
hal_init.c:44:10:init_get_version 0
hal_io.c:42:10:io_get_version 0
hal_qspi_sync.c:47:9:qspi_sync_init 0
hal_qspi_sync.c:54:9:qspi_sync_deinit 0
hal_qspi_sync.c:61:9:qspi_sync_enable 0
hal_qspi_sync.c:68:9:qspi_sync_disable 0
hal_qspi_sync.c:75:9:qspi_sync_serial_run_command 0
hal_qspi_sync.c:82:10:qspi_sync_get_version 0
hal_rand_sync.c:119:10:rand_sync_get_version 0
hal_rand_sync.c:39:9:rand_sync_init 0
hal_rand_sync.c:46:6:rand_sync_deinit 0
hal_rand_sync.c:52:9:rand_sync_enable 0
hal_rand_sync.c:58:6:rand_sync_disable 0
hal_rand_sync.c:64:9:rand_sync_set_seed 0
hal_rand_sync.c:95:10:rand_sync_read32 0
hal_sha_sync.c:281:10:sha_sync_get_version 0
hal_sha_sync.c:42:9:sha_sync_init 0
hal_sha_sync.c:52:9:sha_sync_deinit 0
hal_sha_sync.c:62:9:sha_sync_enable 0
hal_sha_sync.c:72:9:sha_sync_disable 0
hal_sleep.c:70:10:sleep_get_version 0
hal_spi_m_sync.c:103:9:spi_m_sync_set_mode 0
hal_spi_m_sync.c:109:9:spi_m_sync_set_char_size 0
hal_spi_m_sync.c:115:9:spi_m_sync_set_data_order 0
hal_spi_m_sync.c:187:9:spi_m_sync_get_io_descriptor 0
hal_spi_m_sync.c:194:10:spi_m_sync_get_version 0
hal_spi_m_sync.c:55:6:spi_m_sync_set_func_ptr 0
hal_spi_m_sync.c:79:6:spi_m_sync_deinit 0
hal_spi_m_sync.c:85:6:spi_m_sync_enable 0
hal_spi_m_sync.c:91:6:spi_m_sync_disable 0
hal_spi_m_sync.c:97:9:spi_m_sync_set_baudrate 0
hal_timer.c:183:10:timer_get_version 0
hal_usart_sync.c:103:9:usart_sync_get_io_descriptor 0
hal_usart_sync.c:222:10:usart_sync_get_version 0
hal_usb_device.c:156:13:usb_d_dummy_cb_false 0
hal_usb_device.c:295:6:usb_d_deinit 0
hal_usb_device.c:300:6:usb_d_register_callback 0
hal_usb_device.c:306:9:usb_d_enable 0
hal_usb_device.c:311:6:usb_d_disable 0
hal_usb_device.c:316:6:usb_d_attach 0
hal_usb_device.c:321:6:usb_d_detach 0
hal_usb_device.c:326:16:usb_d_get_speed 0
hal_usb_device.c:331:10:usb_d_get_frame_num 0
hal_usb_device.c:336:9:usb_d_get_uframe_num 0
hal_usb_device.c:341:6:usb_d_set_address 0
hal_usb_device.c:346:6:usb_d_send_remotewakeup 0
hal_usb_device.c:351:9:usb_d_ep0_init 0
hal_usb_device.c:585:10:usb_d_get_version 0
hal_wdt.c:41:10:wdt_get_version 0
home_view.cpp:131:6:virtual void fk::HomeView::up(fk::ViewController*) 0
home_view.cpp:135:6:virtual void fk::HomeView::down(fk::ViewController*) 0
home_view.cpp:143:6:void fk::HomeView::show_name() 0
home_view.cpp:147:6:void fk::HomeView::show_build() 0
home_view.cpp:151:6:void fk::HomeView::show_uptime() 0
hooks.c:28:13:__empty 0
hooks.c:39:12:__false 0
hooks.c:52:13:__halt 0
hpl_aes.c:167:9:_aes_sync_init 0
hpl_aes.c:182:9:_aes_sync_deinit 0
hpl_aes.c:194:9:_aes_sync_enable 0
hpl_aes.c:203:9:_aes_sync_disable 0
hpl_cmcc.c:295:9:_cmcc_configure_monitor 0
hpl_cmcc.c:309:9:_cmcc_enable_monitor 0
hpl_cmcc.c:323:9:_cmcc_disable_monitor 0
hpl_cmcc.c:337:9:_cmcc_reset_monitor 0
hpl_cmcc.c:351:10:_cmcc_get_monitor_event_count 0
hpl_cmcc.h:102:23:_cmcc_enable 0
hpl_cmcc.h:119:23:_cmcc_disable 0
hpl_core_m4.c:103:6:_irq_set 0
hpl_core_m4.c:111:6:_irq_clear 0
hpl_core_m4.c:119:6:_irq_enable 0
hpl_core_m4.c:127:6:_irq_register 0
hpl_core_m4.c:137:6:Default_Handler 0
hpl_core_m4.c:169:10:_get_cycles_for_us 0
hpl_core_m4.c:200:10:_get_cycles_for_ms 0
hpl_core_m4.c:70:6:_reset_mcu 0
hpl_core_m4.c:78:6:_go_to_sleep 0
hpl_core_m4.c:87:9:_irq_get_current 0
hpl_core_m4.c:95:6:_irq_disable 0
hpl_dsu.c:123:9:_crc_sync_crc16 0
hpl_dsu.c:43:9:_crc_sync_init 0
hpl_dsu.c:53:9:_crc_sync_deinit 0
hpl_dsu.c:63:9:_crc_sync_enable 0
hpl_dsu.c:73:9:_crc_sync_disable 0
hpl_eic.c:193:9:_ext_irq_enable 0
hpl_evsys.c:105:9:_event_system_deinit 0
hpl_evsys.c:116:9:_event_system_enable_user 0
hpl_evsys.c:131:9:_event_system_enable_generator 0
hpl_evsys.c:85:9:_event_system_init 0
hpl_gclk.c:166:6:_gclk_init_generators_by_fref 0
hpl_gclk.c:42:6:_gclk_init_generators 0
hpl_icm.c:101:9:_sha_sync_deinit 0
hpl_icm.c:109:9:_sha_sync_enable 0
hpl_icm.c:116:9:_sha_sync_disable 0
hpl_icm.c:123:9:_sha_sync_sha1_start 0
hpl_icm.c:144:9:_sha_sync_sha256_start 0
hpl_icm.c:94:9:_sha_sync_init 0
hpl_mclk.c:40:6:_mclk_init 0
hpl_nvmctrl.c:107:10:_flash_get_page_size 0
hpl_nvmctrl.c:116:10:_flash_get_total_pages 0
hpl_nvmctrl.c:125:9:_flash_get_wait_state 0
hpl_nvmctrl.c:133:6:_flash_set_wait_state 0
hpl_nvmctrl.c:251:9:_flash_lock 0
hpl_nvmctrl.c:276:9:_flash_unlock 0
hpl_nvmctrl.c:301:6:_flash_is_locked 0
hpl_nvmctrl.c:314:6:_flash_set_irq_state 0
hpl_nvmctrl.c:411:6:NVMCTRL_0_Handler 0
hpl_nvmctrl.c:419:6:NVMCTRL_1_Handler 0
hpl_nvmctrl.c:71:9:_flash_init 0
hpl_nvmctrl.c:97:6:_flash_deinit 0
hpl_osc32kctrl.c:40:6:_osc32kctrl_init_sources 0
hpl_oscctrl.c:42:6:_oscctrl_init_sources 0
hpl_oscctrl.c:99:6:_oscctrl_init_referenced_generators 0
hpl_pac.c:39:17:_pac_get_peripheral_id 0
hpl_pm.c:41:9:_set_sleep_mode 0
hpl_qspi.c:62:9:_qspi_sync_init 0
hpl_qspi.c:78:9:_qspi_sync_deinit 0
hpl_qspi.c:84:9:_qspi_sync_enable 0
hpl_qspi.c:90:9:_qspi_sync_disable 0
hpl_ramecc.c:44:9:_ramecc_init 0
hpl_ramecc.c:57:6:_ramecc_register_callback 0
hpl_rtc.c:184:6:_is_tamper_detected 0
hpl_rtc.c:197:9:_tamper_clear_tampid_flag 0
hpl_rtc.c:308:9:_tamper_register_callback 0
hpl_rtc.c:336:9:_calendar_register_callback 0
hpl_rtc.c:388:6:_calendar_set_irq 0
hpl_sercom.c:1042:9:_i2c_m_async_enable 0
hpl_sercom.c:1242:9:_i2c_m_async_register_callback 0
hpl_sercom.c:1288:9:_i2c_m_async_get_bytes_left 0
hpl_sercom.c:1302:9:_i2c_m_sync_init 0
hpl_sercom.c:1331:9:_i2c_m_sync_enable 0
hpl_sercom.c:1396:6:_i2c_m_async_set_irq_state 0
hpl_sercom.c:1798:9:_i2c_s_sync_is_10bit_addressing_on 0
hpl_sercom.c:1806:9:_i2c_s_async_is_10bit_addressing_on 0
hpl_sercom.c:1814:9:_i2c_s_sync_set_address 0
hpl_sercom.c:1822:9:_i2c_s_async_set_address 0
hpl_sercom.c:1830:6:_i2c_s_sync_write_byte 0
hpl_sercom.c:1838:6:_i2c_s_async_write_byte 0
hpl_sercom.c:1846:9:_i2c_s_sync_read_byte 0
hpl_sercom.c:1854:6:_i2c_s_sync_is_byte_sent 0
hpl_sercom.c:185:9:_usart_sync_init 0
hpl_sercom.c:1862:6:_i2c_s_sync_is_byte_received 0
hpl_sercom.c:1870:16:_i2c_s_sync_get_status 0
hpl_sercom.c:1878:9:_i2c_s_sync_clear_data_ready_flag 0
hpl_sercom.c:1888:16:_i2c_s_async_get_status 0
hpl_sercom.c:1896:9:_i2c_s_async_abort_transmission 0
hpl_sercom.c:1906:9:_i2c_s_async_set_irq_state 0
hpl_sercom.c:2390:9:_spi_s_sync_init 0
hpl_sercom.c:2420:9:_spi_s_async_init 0
hpl_sercom.c:2451:9:_spi_m_sync_enable 0
hpl_sercom.c:2458:9:_spi_s_sync_enable 0
hpl_sercom.c:2465:9:_spi_m_async_enable 0
hpl_sercom.c:2472:9:_spi_s_async_enable 0
hpl_sercom.c:2479:9:_spi_m_sync_disable 0
hpl_sercom.c:2486:9:_spi_s_sync_disable 0
hpl_sercom.c:2493:9:_spi_m_async_disable 0
hpl_sercom.c:2500:9:_spi_s_async_disable 0
hpl_sercom.c:2507:9:_spi_m_sync_set_mode 0
hpl_sercom.c:2514:9:_spi_m_async_set_mode 0
hpl_sercom.c:2521:9:_spi_s_async_set_mode 0
hpl_sercom.c:2528:9:_spi_s_sync_set_mode 0
hpl_sercom.c:2535:9:_spi_calc_baud_val 0
hpl_sercom.c:2554:9:_spi_m_sync_set_baudrate 0
hpl_sercom.c:2561:9:_spi_m_async_set_baudrate 0
hpl_sercom.c:2568:9:_spi_m_sync_set_char_size 0
hpl_sercom.c:2575:9:_spi_m_async_set_char_size 0
hpl_sercom.c:257:6:_usart_sync_enable 0
hpl_sercom.c:2582:9:_spi_s_async_set_char_size 0
hpl_sercom.c:2589:9:_spi_s_sync_set_char_size 0
hpl_sercom.c:2596:9:_spi_m_sync_set_data_order 0
hpl_sercom.c:2603:9:_spi_m_async_set_data_order 0
hpl_sercom.c:2610:9:_spi_s_async_set_data_order 0
hpl_sercom.c:2617:9:_spi_s_sync_set_data_order 0
hpl_sercom.c:265:6:_usart_async_enable 0
hpl_sercom.c:273:6:_usart_sync_disable 0
hpl_sercom.c:2754:9:_spi_m_async_enable_tx 0
hpl_sercom.c:2769:9:_spi_s_async_enable_tx 0
hpl_sercom.c:2774:9:_spi_m_async_enable_rx 0
hpl_sercom.c:2790:9:_spi_s_async_enable_rx 0
hpl_sercom.c:2795:9:_spi_m_async_enable_tx_complete 0
hpl_sercom.c:2808:9:_spi_s_async_enable_ss_detect 0
hpl_sercom.c:2813:9:_spi_m_async_write_one 0
hpl_sercom.c:281:6:_usart_async_disable 0
hpl_sercom.c:2822:9:_spi_s_async_write_one 0
hpl_sercom.c:2831:9:_spi_s_sync_write_one 0
hpl_sercom.c:2840:10:_spi_m_async_read_one 0
hpl_sercom.c:2847:10:_spi_s_async_read_one 0
hpl_sercom.c:2854:10:_spi_s_sync_read_one 0
hpl_sercom.c:2861:9:_spi_m_async_register_callback 0
hpl_sercom.c:2875:9:_spi_s_async_register_callback 0
hpl_sercom.c:2881:6:_spi_s_sync_is_tx_ready 0
hpl_sercom.c:2888:6:_spi_s_sync_is_rx_ready 0
hpl_sercom.c:2895:6:_spi_s_sync_is_ss_deactivated 0
hpl_sercom.c:289:6:_usart_sync_set_baud_rate 0
hpl_sercom.c:2908:6:_spi_s_sync_is_error 0
hpl_sercom.c:2929:6:_spi_m_async_set_irq_state 0
hpl_sercom.c:2946:6:_spi_s_async_set_irq_state 0
hpl_sercom.c:297:6:_usart_async_set_baud_rate 0
hpl_sercom.c:305:6:_usart_sync_set_data_order 0
hpl_sercom.c:313:6:_usart_async_set_data_order 0
hpl_sercom.c:321:6:_usart_sync_set_mode 0
hpl_sercom.c:329:6:_usart_async_set_mode 0
hpl_sercom.c:337:6:_usart_sync_set_parity 0
hpl_sercom.c:345:6:_usart_async_set_parity 0
hpl_sercom.c:353:6:_usart_sync_set_stop_bits 0
hpl_sercom.c:361:6:_usart_async_set_stop_bits 0
hpl_sercom.c:369:6:_usart_sync_set_character_size 0
hpl_sercom.c:377:6:_usart_async_set_character_size 0
hpl_sercom.c:385:10:_usart_sync_get_status 0
hpl_sercom.c:393:10:_usart_async_get_status 0
hpl_sercom.c:401:6:_usart_sync_write_byte 0
hpl_sercom.c:409:6:_usart_async_write_byte 0
hpl_sercom.c:417:9:_usart_sync_read_byte 0
hpl_sercom.c:425:6:_usart_sync_is_ready_to_send 0
hpl_sercom.c:433:6:_usart_sync_is_transmit_done 0
hpl_sercom.c:441:6:_usart_async_is_byte_sent 0
hpl_sercom.c:449:6:_usart_sync_is_byte_received 0
hpl_sercom.c:457:6:_usart_sync_set_flow_control_state 0
hpl_sercom.c:467:6:_usart_async_set_flow_control_state 0
hpl_sercom.c:477:32:_usart_sync_get_flow_control_state 0
hpl_sercom.c:490:32:_usart_async_get_flow_control_state 0
hpl_sercom.c:503:6:_usart_async_enable_byte_sent_irq 0
hpl_sercom.c:511:6:_usart_async_enable_tx_done_irq 0
hpl_sercom.c:534:9:_usart_sync_get_hardware_index 0
hpl_sercom.c:542:9:_usart_async_get_hardware_index 0
hpl_sercom.c:550:6:_usart_async_set_irq_state 0
hpl_sercom.c:938:20:_sercom_i2c_send_stop 0
hpl_systick.c:45:6:_system_time_init 0
hpl_systick.c:55:6:_delay_init 0
hpl_systick.c:63:6:_system_time_deinit 0
hpl_systick.c:72:15:_system_time_get 0
hpl_systick.c:81:15:_system_time_get_max_time_value 0
hpl_tc.c:196:6:_timer_start 0
hpl_tc.c:203:6:_timer_stop 0
hpl_tc.c:210:6:_timer_set_period 0
hpl_tc.c:250:30:_tc_get_timer 0
hpl_tc.c:258:28:_tc_get_pwm 0
hpl_trng.c:100:10:_rand_sync_read_one 0
hpl_trng.c:57:9:_rand_sync_init 0
hpl_trng.c:71:6:_rand_sync_deinit 0
hpl_trng.c:76:9:_rand_sync_enable 0
hpl_trng.c:85:6:_rand_sync_disable 0
hpl_trng.c:93:9:_rand_sync_set_seed 0
hpl_usb.c:118:20:_usb_d_dev_wait_dfll_rdy 0
hpl_usb.c:1500:9:_usb_d_dev_enable 0
hpl_usb.c:1525:9:_usb_d_dev_disable 0
hpl_usb.c:1551:6:_usb_d_dev_attach 0
hpl_usb.c:1556:6:_usb_d_dev_detach 0
hpl_usb.c:1581:6:_usb_d_dev_set_address 0
hpl_usb.c:1586:9:_usb_d_dev_get_address 0
hpl_usb.c:1592:10:_usb_d_dev_get_frame_n 0
hpl_usb.c:1598:9:_usb_d_dev_get_uframe_n 0
hpl_usb.c:1622:9:_usb_d_dev_ep0_init 0
hpl_usb.c:2025:6:_usb_d_dev_register_callback 0
hpl_usb.c:2035:6:_usb_d_dev_register_ep_callback 0
hpl_usb.c:2050:6:USB_0_Handler 0
hpl_usb.c:2058:6:USB_1_Handler 0
hpl_usb.c:2066:6:USB_2_Handler 0
hpl_usb.c:2074:6:USB_3_Handler 0
hpl_usb.c:47:13:_dummy_func_no_return 0
hpl_usb.c:885:23:_usbd_ep_pcksize_size 0
hpl_usb.c:898:37:_usb_d_dev_ept 0
hpl_wdt.c:187:10:_wdt_get_timeout_period 0
hpl_wdt.c:248:9:_wdt_enable 0
hpl_wdt.c:278:9:_wdt_feed 0
hri_aes_d51.h:568:20:hri_aes_write_CTRLA_KEYSIZE_bf 0
hri_eic_d51.h:66:20:6 0
hri_rtc_d51.h:3287:20:hri_rtcmode0_write_CTRLA_ENABLE_bit 0
hri_rtc_d51.h:91:20:hri_rtcmode0_wait_for_sync 0
hri_sercom_d51.h:100:20:hri_sercomi2cm_wait_for_sync 0
hri_sercom_d51.h:111:20:hri_sercomi2cs_wait_for_sync 0
hri_sercom_d51.h:122:20:hri_sercomspi_wait_for_sync 0
hri_sercom_d51.h:133:20:hri_sercomusart_wait_for_sync 0
hri_sercom_d51.h:1374:20:hri_sercomi2cm_clear_CTRLA_ENABLE_bit 0
hri_sercom_d51.h:1960:20:hri_sercomi2cs_clear_CTRLA_ENABLE_bit 0
hri_sercom_d51.h:2403:20:hri_sercomspi_set_CTRLA_SWRST_bit 0
hri_sercom_d51.h:2449:20:hri_sercomspi_clear_CTRLA_ENABLE_bit 0
hri_sercom_d51.h:2979:20:hri_sercomusart_write_CTRLA_ENABLE_bit 0
hri_sercom_d51.h:2991:20:hri_sercomusart_clear_CTRLA_ENABLE_bit 0
hri_tc_d51.h:75:20:hri_tc_wait_for_sync 0
hri_wdt_d51.h:294:20:hri_wdt_get_CTRLA_ALWAYSON_bit 0
http_parser.c:2160:1:http_message_needs_eof 0
http_parser.c:2208:1:http_method_str 0
http_parser.c:2214:1:http_status_str 0
http_parser.c:2236:1:http_parser_settings_init 0
http_parser.c:2418:1:http_parser_url_init 0
http_parser.c:2561:1:http_body_is_final 0
http_parser.c:2566:1:http_parser_version 0
http_parser.c:2573:1:http_parser_set_max_header_size 0
http_server_connection.cpp:39:9:int32_t fk::HttpServerConnection::available() const 0
http_server_connection.cpp:53:9:int32_t fk::HttpServerConnection::fault() 0
ina219.cpp:95:1:fk::Ina219::Ina219(fk::TwoWireWrapper&, uint8_t) 0
io.cpp:105:9:int32_t fk::BufferedReader::skip(size_t) 0
io.cpp:144:1:fk::Buffer::Buffer(uint8_t*, size_t) 0
io.cpp:152:6:bool fk::Buffer::full() const 0
io.cpp:156:6:void fk::Buffer::clear() 0
io.cpp:79:1:fk::BufferedReader::~BufferedReader() 0
io.cpp:8:13:void fk::write_buffered_writer(char, void*) 0
ipc.cpp:13:6:fk::IPC* fk::get_ipc() 0
ipc.h:35:18:virtual void fk::IPC::verify() 0
ipc.h:45:18:virtual bool fk::IPC::remove_worker(fk::TaskWorker*) 0
ipc.h:49:18:virtual bool fk::IPC::signal_workers(fk::WorkerCategory, uint32_t) 0
ipc.h:53:18:virtual bool fk::IPC::has_any_running_worker() 0
ipc.h:57:18:virtual bool fk::IPC::has_running_worker(fk::WorkerCategory) 0
ipc.h:61:41:virtual fk::collection<fk::TaskDisplayInfo> fk::IPC::get_workers_display_info(fk::Pool&) 0
itoa.c:125:14:utoa 0
itoa.c:70:14:itoa 0
journal.c:175:13:reset_journal 0
journal.c:568:6:dhara_journal_clear 0
journal.c:82:20:hdr_clear_user 0
leds.cpp:10:1:fk::ModuleLeds::~ModuleLeds() 0
leds.cpp:19:13:fk::ModuleLeds* fk::get_module_leds() 0
leds.cpp:7:1:fk::ModuleLeds::ModuleLeds() 0
leds.cpp:9:1:fk::LedsController::LedsController() 0
linux_battery_gauge.cpp:16:16:virtual fk::ChargingStatus fk::LinuxBatteryGauge::status() 0
linux_battery_gauge.cpp:20:6:virtual bool fk::LinuxBatteryGauge::battery_available() 0
linux_battery_gauge.cpp:24:6:virtual bool fk::LinuxBatteryGauge::solar_available() 0
linux_battery_gauge.cpp:5:1:fk::LinuxBatteryGauge::LinuxBatteryGauge() 0
linux_battery_gauge.cpp:8:6:virtual bool fk::LinuxBatteryGauge::begin() 0
linux_buttons.cpp:12:6:virtual bool fk::LinuxButtons::is_debug_pressed() const 0
linux_buttons.cpp:16:6:virtual bool fk::LinuxButtons::get(uint8_t) const 0
linux_buttons.cpp:8:6:virtual bool fk::LinuxButtons::begin() 0
linux_gps.cpp:13:6:virtual bool fk::LinuxGps::stop() 0
linux_gps.cpp:5:6:virtual bool fk::LinuxGps::begin() 0
linux_gps.cpp:9:6:virtual bool fk::LinuxGps::service(fk::GpsFix&) 0
linux_leds.cpp:12:6:virtual bool fk::LinuxLeds::brightness(uint8_t, bool) 0
linux_leds.cpp:16:6:virtual void fk::LinuxLeds::off() 0
linux_leds.cpp:19:6:virtual void fk::LinuxLeds::on() 0
linux_leds.cpp:25:6:virtual void fk::LinuxLeds::off(uint8_t) 0
linux_leds.cpp:28:6:virtual void fk::LinuxLeds::on(uint8_t) 0
linux_leds.cpp:31:6:virtual bool fk::LinuxLeds::refresh() 0
linux_leds.cpp:8:6:virtual bool fk::LinuxLeds::begin() 0
linux_sd_card.cpp:12:6:virtual bool fk::LinuxSdCard::append_logs(const uint8_t*, size_t) 0
linux_sd_card.cpp:16:6:virtual bool fk::LinuxSdCard::append_logs(fk::circular_buffer<char>&) 0
linux_sd_card.cpp:20:6:virtual bool fk::LinuxSdCard::append_logs(fk::circular_buffer<char>&, fk::circular_buffer<char>::iterator) 0
linux_sd_card.cpp:24:6:virtual bool fk::LinuxSdCard::close_logs() 0
linux_sd_card.cpp:28:6:virtual bool fk::LinuxSdCard::is_file(const char*) 0
linux_sd_card.cpp:32:6:virtual bool fk::LinuxSdCard::is_directory(const char*) 0
linux_sd_card.cpp:36:6:virtual bool fk::LinuxSdCard::mkdir(const char*) 0
linux_sd_card.cpp:40:6:virtual bool fk::LinuxSdCard::unlink(const char*) 0
linux_sd_card.cpp:48:6:virtual bool fk::LinuxSdCard::format() 0
linux_sd_card.cpp:52:9:virtual int32_t fk::LinuxSdCardFile::write(const uint8_t*, size_t) 0
linux_sd_card.cpp:56:9:virtual int32_t fk::LinuxSdCardFile::read(uint8_t*, size_t) 0
linux_sd_card.cpp:5:1:fk::LinuxSdCard::LinuxSdCard() 0
linux_sd_card.cpp:60:9:virtual int32_t fk::LinuxSdCardFile::seek_beginning() 0
linux_sd_card.cpp:64:9:virtual int32_t fk::LinuxSdCardFile::seek_end() 0
linux_sd_card.cpp:68:9:virtual int32_t fk::LinuxSdCardFile::seek_from_end(int32_t) 0
linux_sd_card.cpp:72:8:virtual size_t fk::LinuxSdCardFile::file_size() 0
linux_sd_card.cpp:76:6:virtual bool fk::LinuxSdCardFile::close() 0
linux_sd_card.cpp:8:6:virtual bool fk::LinuxSdCard::begin() 0
linux_sd_card.h:35:10:virtual bool fk::LinuxSdCardFile::is_open() const 0
live_tests.cpp:220:6:void fk::fk_live_tests() 0
log_stream.cpp:39:11:LogStream Logger::begin(const char*) const 0
log_stream.cpp:43:11:LogStream Logger::begin() const 0
logging.cpp:142:13:const char* alog_get_log_level(LogLevels) 0
logging.cpp:186:6:void fk::task_logging_hook(os_task_t*, os_task_status) 0
logging.cpp:24:17:uint32_t always_zero() 0
logging.cpp:28:6:void log_configure_writer(log_message_write_fn_t) 0
logging.cpp:32:6:void log_configure_hook_register(log_message_hook_fn_t, void*) 0
logging.cpp:341:6:bool fk::fk_log_buffer_try_lock() 0
logging.cpp:356:6:void fk::fk_log_buffer_unlock() 0
logging.cpp:360:13:fk::log_buffer& fk::fk_log_buffer() 0
logging.cpp:375:1:cpp) 0
logging.cpp:38:6:void log_configure_hook(bool) 0
logging.cpp:42:6:void log_configure_level(LogLevels) 0
logging.cpp:46:9:uint8_t log_get_level() 0
logging.cpp:50:6:bool log_is_trace() 0
logging.cpp:54:6:bool log_is_debug() 0
logging.cpp:58:6:void log_configure_time(log_message_uptime_fn_t, log_message_time_fn_t) 0
logging_arduino.cpp:16:6:void log_uart_set(Stream&) 0
logging_arduino.cpp:20:9:Stream* log_uart_get() 0
logs_handler.cpp:13:1:fk::DownloadLogsWorker::DownloadLogsWorker(fk::HttpServerConnection*) 0
logs_handler.cpp:97:1:fk::DownloadLogsHandler::DownloadLogsHandler() 0
logs_handler.h:18:7:fk::DownloadLogsWorker::~DownloadLogsWorker() 0
logs_handler.h:28:13:virtual uint8_t fk::DownloadLogsWorker::priority() const 0
logs_handler.h:32:17:virtual const char* fk::DownloadLogsWorker::name() const 0
lora.cpp:15:14:fk::LoraNetwork* fk::get_lora_network() 0
lora.cpp:19:1:cpp) 0
lora_manager.cpp:10:1:fk::LoraManager::LoraManager(fk::LoraNetwork*) 0
lora_manager.cpp:53:13:bool fk::is_null_byte_array(const uint8_t*, size_t) 0
lora_packetizer.cpp:10:1:fk::LoraPacketizer::LoraPacketizer() 0
lora_packetizer.cpp:13:1:fk::LoraPacketizer::~LoraPacketizer() 0
lora_ranging_worker.cpp:15:1:fk::LoraRangingWorker::LoraRangingWorker(bool) 0
lora_ranging_worker.h:17:13:virtual uint8_t fk::LoraRangingWorker::priority() const 0
lora_ranging_worker.h:21:17:virtual const char* fk::LoraRangingWorker::name() const 0
lora_ranging_worker.h:7:7:fk::LoraRangingWorker::~LoraRangingWorker() 0
lora_worker.h:11:13:virtual uint8_t fk::LoraWorker::priority() const 0
lora_worker.h:15:17:virtual const char* fk::LoraWorker::name() const 0
lora_worker.h:7:7:fk::LoraWorker::~LoraWorker() 0
lwcron.cpp:167:6:bool lwcron::CronSpec::valid() const 0
lwcron.cpp:171:6:virtual bool lwcron::CronTask::enabled() const 0
lwcron.cpp:187:6:virtual void lwcron::CronTask::run() 0
lwcron.cpp:190:6:virtual bool lwcron::CronTask::valid() const 0
lwcron.cpp:89:6:virtual void lwcron::PeriodicTask::run() 0
lwcron.cpp:92:6:virtual bool lwcron::PeriodicTask::valid() const 0
lwcron.cpp:96:6:virtual bool lwcron::PeriodicTask::enabled() const 0
lwcron.h:114:25:virtual const char* lwcron::Task::toString() const 0
lwcron.h:114:25:virtual const char* lwcron::Task::toString() const 0
lwcron.h:177:20:void lwcron::bitarray_set(uint8_t (&)[N], uint32_t) [with unsigned int N = 8u; uint8_t = unsigned char; uint32_t = long unsigned int] 0
m2m_hif.c:137:13:m2m_hif_cb 0
m2m_hif.c:189:6:hif_set_sleep_mode 0
m2m_hif.c:204:7:hif_get_sleep_mode 0
m2m_hif.c:215:7:hif_chip_sleep_sc 0
m2m_hif.c:229:7:hif_chip_sleep 0
m2m_hif.c:90:13:isr 0
m2m_periph.c:112:7:m2m_periph_init 0
m2m_periph.c:135:7:m2m_periph_gpio_pullup_ctrl 0
m2m_periph.c:145:7:m2m_periph_i2c_master_init 0
m2m_periph.c:155:7:m2m_periph_i2c_master_write 0
m2m_periph.c:168:7:m2m_periph_i2c_master_read 0
m2m_periph.c:183:7:m2m_periph_pullup_ctrl 0
m2m_periph.c:66:14:get_gpio_idx 0
m2m_ssl.c:244:14:m2m_ssl_stop_processing_certs 0
m2m_ssl.c:253:14:m2m_ssl_ecc_process_done 0
m2m_wifi.c:1111:7:m2m_wifi_get_num_ap_found 0
m2m_wifi.c:1121:7:m2m_wifi_get_sleep_mode 0
m2m_wifi.c:533:7:m2m_wifi_handle_events 0
m2m_wifi.c:695:7:m2m_wifi_request_dhcp_client 0
m2m_wifi.c:700:7:m2m_wifi_request_dhcp_server 0
main.c:119:9:bl_button_initialize 0
main.c:17:10:serial_number_get 0
main.c:266:6:cm_systick 0
main.c:270:10:millis 0
main.c:274:6:delay 0
main.cpp:163:6:void loop() 0
main.cpp:25:6:void initVariant() 0
main.cpp:25:6:void initVariant() 0
map.c:62:20:meta_set_alt 0
map.c:92:6:dhara_map_clear 0
math_helper.c:120:6:arm_provide_guard_bits_q15 0
math_helper.c:222:6:arm_provide_guard_bits_q31 0
math_helper.c:244:6:arm_provide_guard_bits_q7 0
math_helper.c:266:10:arm_calc_guard_bits 0
math_helper.c:307:10:arm_calc_2pow 0
math_helper.c:438:6:arm_clip_f32 0
mcp_2803.cpp:22:1:fk::Mcp2803::~Mcp2803() 0
mdns_pool_allocator.h:22:10:virtual void fk::MDNSPoolAllocator::free(void*) 0
memory.cpp:150:10:uint32_t fk::TranslatingMemory::translate(uint32_t) 0
memory.cpp:171:1:cpp) 0
memory.cpp:210:14:static fk::DataMemory** fk::MemoryFactory::get_data_memory_banks() 0
memory.cpp:214:13:static fk::DataMemory* fk::MemoryFactory::get_data_memory() 0
memory.cpp:222:19:static fk::ExecutableMemory* fk::MemoryFactory::get_qspi_memory() 0
memory_page_store.cpp:7:1:fk::MemoryPageStore::MemoryPageStore(fk::DataMemory*) 0
menu_view.cpp:57:10:virtual void fk::ConfirmOption::on_selected() 0
menu_view.cpp:75:10:bool fk::NetworkOption<T>::active() const [with T = fk::MenuView::create_network_menu()::__lambda57] 0
menu_view.cpp:79:17:const char* fk::NetworkOption<T>::label() const [with T = fk::MenuView::create_network_menu()::__lambda57] 0
metal_battery_gauge.cpp:103:6:virtual bool fk::MetalBatteryGauge::solar_available() 0
metal_battery_gauge.cpp:20:1:fk::MetalBatteryGauge::MetalBatteryGauge() 0
metal_battery_gauge.cpp:87:16:virtual fk::ChargingStatus fk::MetalBatteryGauge::status() 0
metal_battery_gauge.cpp:99:6:virtual bool fk::MetalBatteryGauge::battery_available() 0
metal_board.cpp:107:6:void fk::Board::disable_gps() 0
metal_board.cpp:111:6:void fk::Board::enable_gps() 0
metal_board.cpp:115:6:void fk::Board::disable_lora() 0
metal_board.cpp:119:6:void fk::Board::enable_lora() 0
metal_board.cpp:142:6:void fk::Board::release_eeprom() 0
metal_board.cpp:195:6:void fk::SpiWrapper::begin() 0
metal_buttons.cpp:57:6:virtual bool fk::MetalButtons::is_debug_pressed() const 0
metal_buttons.cpp:71:6:void fk::MetalButtons::irq(uint8_t, bool) 0
metal_ipc.cpp:134:6:virtual bool fk::MetalIPC::remove_worker(fk::TaskWorker*) 0
metal_ipc.cpp:23:1:fk::MetalIPC::MetalIPC() 0
metal_ipc.cpp:30:6:virtual bool fk::MetalIPC::available() 0
metal_leds.h:7:7:fk::MetalLeds::~MetalLeds() 0
metal_lora.cpp:101:6:virtual bool fk::Rn2903LoraNetwork::sleep(uint32_t) 0
metal_lora.cpp:105:6:virtual bool fk::Rn2903LoraNetwork::wake() 0
metal_lora.cpp:58:6:virtual bool fk::Rn2903LoraNetwork::join(const char*, const char*, int32_t, uint32_t) 0
metal_lora.cpp:74:6:virtual bool fk::Rn2903LoraNetwork::resume_previous_session() 0
metal_lora.cpp:82:6:virtual bool fk::Rn2903LoraNetwork::save_state() 0
metal_lora.h:35:14:virtual uint32_t fk::Rn2903LoraNetwork::uplink_counter() 0
metal_lora.h:39:20:virtual const uint8_t* fk::Rn2903LoraNetwork::device_eui() const 0
metal_lora.h:43:19:virtual fk::LoraErrorCode fk::Rn2903LoraNetwork::error() const 0
metal_lora.h:47:10:virtual bool fk::Rn2903LoraNetwork::available() const 0
metal_memory.cpp:11:6:virtual bool fk::MetalDataMemory::begin() 0
metal_memory.cpp:19:9:virtual int32_t fk::MetalDataMemory::read(uint32_t, uint8_t*, size_t, fk::MemoryReadFlags) 0
metal_memory.cpp:23:9:virtual int32_t fk::MetalDataMemory::write(uint32_t, const uint8_t*, size_t, fk::MemoryWriteFlags) 0
metal_memory.cpp:34:9:virtual int32_t fk::MetalDataMemory::copy_page(uint32_t, uint32_t, size_t) 0
metal_memory.cpp:38:9:virtual int32_t fk::MetalDataMemory::flush() 0
metal_modmux.cpp:107:6:virtual bool fk::MetalModMux::disable_topology_irq() 0
metal_modmux.cpp:367:6:virtual bool fk::MetalModMux::is_module_on(fk::ModulePosition) 0
metal_modmux.cpp:95:6:virtual bool fk::MetalModMux::enable_topology_irq() 0
metal_network.cpp:141:9:virtual int32_t fk::MetalNetworkConnection::write(const uint8_t*, size_t) 0
metal_network.cpp:164:13:void fk::write_connection(char, void*) 0
metal_network.cpp:181:9:virtual int32_t fk::MetalNetworkConnection::socket() 0
metal_network.cpp:298:10:virtual uint32_t fk::MetalNetwork::ip_address() 0
metal_network.cpp:360:6:virtual bool fk::MetalNetwork::enabled() 0
metal_network.cpp:377:13:virtual const char* fk::MetalNetwork::get_ssid() 0
metal_network.cpp:404:6:virtual void fk::MetalNetwork::verify() 0
metal_network.cpp:424:6:virtual bool fk::MetalNetworkListener::stop() 0
metal_network.cpp:57:10:virtual bool fk::StaticWiFiCallbacks::busy(uint32_t) 0
metal_network.cpp:65:13:const char* fk::get_wifi_status(uint8_t) 0
metal_qspi.cpp:90:9:virtual int32_t fk::MetalQspiMemory::flush() 0
metal_qspi.h:12:7:fk::MetalQspiMemory::~MetalQspiMemory() 0
metal_sd_card.cpp:224:6:virtual bool fk::MetalSdCard::close_logs() 0
metal_sd_card.cpp:260:6:virtual bool fk::MetalSdCard::unlink(const char*) 0
metal_sd_card.cpp:405:9:virtual int32_t fk::MetalSdCardFile::write(const uint8_t*, size_t) 0
metal_sd_card.cpp:409:9:virtual int32_t fk::MetalSdCardFile::read(uint8_t*, size_t) 0
metal_sd_card.cpp:428:8:virtual size_t fk::MetalSdCardFile::file_size() 0
metal_sd_card.cpp:437:6:virtual bool fk::MetalSdCardFile::is_open() const 0
metal_sd_card.cpp:82:1:fk::LogFile::LogFile(fk::MetalSdCard*) 0
metal_sd_card.cpp:85:1:fk::LogFile::~LogFile() 0
metal_sd_card.cpp:88:6:bool fk::LogFile::open() 0
modmux.cpp:126:6:bool fk::Topology::all_modules_on() const 0
modmux.cpp:137:9:fk::ModMux* fk::get_modmux() 0
modmux.cpp:79:1:fk::TopologyChange::TopologyChange() 0
modmux.cpp:82:1:fk::TopologyChange::TopologyChange(uint32_t) 0
modmux.cpp:97:1:fk::Topology::Topology() 0
module.cpp:21:6:void fk_module_initialize_diagnostics() 0
module.cpp:21:6:void fk_module_initialize_distance() 0
module.cpp:21:6:void fk_module_initialize_random() 0
module.cpp:21:6:void fk_module_initialize_weather() 0
module_factory.cpp:135:6:void fk::ModuleFactory::sort_modules() 0
module_factory.cpp:141:6:bool fk::ModuleFactory::service(fk::ScanningContext&, fk::Pool&) 0
module_factory.cpp:39:30:nonstd::optional_lite::optional<fk::ConstructedModule*> fk::ModuleFactory::get(fk::ModulePosition) 0
module_factory.cpp:56:30:fk::ConstructedModulesCollection fk::ModuleFactory::modules() 0
module_factory.cpp:60:10:uint32_t fk::ModuleFactory::service_interval() const 0
module_handler.cpp:10:1:fk::ModuleHandler::ModuleHandler(fk::ModulePosition) 0
module_readings.h:14:5:fk::NModuleReadings<N>::NModuleReadings() [with unsigned int N = 12u] 0
module_readings.h:14:5:fk::NModuleReadings<N>::NModuleReadings() [with unsigned int N = 16u] 0
module_readings.h:14:5:fk::NModuleReadings<N>::NModuleReadings() [with unsigned int N = 1u] 0
module_readings.h:14:5:fk::NModuleReadings<N>::NModuleReadings() [with unsigned int N = 4u] 0
module_readings.h:14:5:fk::NModuleReadings<N>::NModuleReadings() [with unsigned int N = 4u] 0
module_readings.h:22:12:size_t fk::NModuleReadings<N>::size() const [with unsigned int N = 10u; size_t = unsigned int] 0
module_readings.h:22:12:size_t fk::NModuleReadings<N>::size() const [with unsigned int N = 12u; size_t = unsigned int] 0
module_readings.h:22:12:size_t fk::NModuleReadings<N>::size() const [with unsigned int N = 16u; size_t = unsigned int] 0
module_readings.h:22:12:size_t fk::NModuleReadings<N>::size() const [with unsigned int N = 1u; size_t = unsigned int] 0
module_readings.h:22:12:size_t fk::NModuleReadings<N>::size() const [with unsigned int N = 3u; size_t = unsigned int] 0
module_readings.h:22:12:size_t fk::NModuleReadings<N>::size() const [with unsigned int N = 4u; size_t = unsigned int] 0
module_readings.h:22:12:size_t fk::NModuleReadings<N>::size() const [with unsigned int N = 4u; size_t = unsigned int] 0
modules.c:12:9:fk_module_is_available_i2c_address 0
modules.c:4:10:fk_module_header_sign 0
modules_bridge.h:42:13:fk::Module::~Module() 0
modules_bridge.h:42:13:fk::Module::~Module() 0
modules_bridge.h:42:13:fk::Module::~Module() 0
modules_bridge.h:42:13:fk::Module::~Module() 0
modules_bridge.h:42:13:fk::Module::~Module() 0
modules_bridge.h:42:13:fk::Module::~Module() 0
modules_bridge.h:42:13:fk::Module::~Module() 0
mutex.c:34:13:osi_mutex_create 0
mutex.c:44:13:os_mutex_is_owner 0
network.cpp:14:10:fk::Network* fk::get_network() 0
network.h:126:18:virtual void fk::Network::verify() 0
network.h:38:13:fk::NetworkConnection::~NetworkConnection() 0
network_services.cpp:33:10:uint32_t fk::NetworkServices::activity() const 0
network_services.cpp:37:6:bool fk::NetworkServices::active_connections() const 0
network_services.cpp:45:13:const char* fk::NetworkServices::ssid() const 0
new.cpp:21:7:void* operator new(size_t) 0
new.cpp:25:7:void* operator new [](size_t) 0
new.cpp:29:6:void operator delete(void*) 0
new.cpp:33:6:void operator delete [](void*) 0
nm_bsp_arduino.c:56:28:attachInterruptMultiArch 0
nm_bsp_arduino.c:61:28:detachInterruptMultiArch 0
nm_bus_wrapper_samd21.cpp:194:7:sint8 nm_bus_reinit(void*) 0
nm_bus_wrapper_samd21.cpp:199:1:cpp) 0
nm_common.c:53:7:m2m_checksum 0
nm_common.c:65:6:m2m_memset 0
nm_common.c:75:8:m2m_strlen 0
nmbus.c:109:7:nm_bus_iface_reconfigure 0
nmbus.c:130:8:nm_read_reg 0
nmbus.c:156:7:nm_read_reg_with_ret 0
nmbus.c:181:7:nm_write_reg 0
nmbus.c:58:7:nm_bus_iface_init 0
nmbus.c:73:7:nm_bus_iface_deinit 0
nmbus.c:87:7:nm_bus_reset 0
nmspi.c:1276:7:nm_spi_deinit 0
oem_atlas.cpp:127:17:fk::AtlasSensorType fk::OemAtlas::type() const 0
oem_atlas.cpp:131:9:uint8_t fk::OemAtlas::address() const 0
oem_atlas.cpp:76:1:fk::OemAtlas::OemAtlas(fk::TwoWireWrapper&) 0
optional.hpp:863:26:nonstd::optional_lite::optional<T>::optional(const nonstd::optional_lite::optional<T>&, typename std::enable_if<(true || std::is_copy_constructible<_Tp>::value), void*>::type) [with T = float; typename std::enable_if<(true || std::is_copy_constructible<_Tp>::value), void*>::type = void*] 0
os.c:247:10:os_task_is_running 0
os.c:260:13:os_task_start 0
os.c:345:16:os_task_get_status 0
os.c:64:13:os_initialize 0
os.c:702:17:os_uptime 0
os.c:706:17:os_micros 0
os.c:720:11:osi_task_return_regs 0
os.c:738:13:osi_task_stacked_return_tuple 0
os.c:753:13:osi_irs_systick 0
os.c:764:13:os_status_str 0
os.c:775:13:os_task_status_str 0
os.c:788:13:os_panic_kind_str 0
os.c:82:13:os_configure_hooks 0
os.c:88:13:os_teardown 0
ostream.cpp:139:6:void ostream::putNum(int32_t) 0
ostream.cpp:38:6:void ostream::fill_not_left(unsigned int) 0
ostream.cpp:55:6:void ostream::putBool(bool) 0
paging_delimited_buffer.cpp:98:6:virtual void phylum::paging_delimited_buffer::ensure_valid() const 0
pb_common.c:290:6:pb_field_iter_begin_const 0
pb_common.c:295:6:pb_field_iter_begin_extension_const 0
pb_decode.c:1170:18:pb_decode 0
pb_decode.c:234:18:pb_decode_varint32 0
pb_encode.c:112:13:safe_read_bool 0
pb_encode.c:622:18:pb_encode_svarint 0
pb_encode.c:667:6:pb_encode_tag_for_field 0
pb_encode.c:817:25:pb_enc_fixed 0
phyctx.h:20:13:phylum::phyctx::~phyctx() 0
phyctx.h:20:13:phylum::phyctx::~phyctx() 0
phyctx.h:20:13:phylum::phyctx::~phyctx() 0
phyctx.h:20:13:phylum::phyctx::~phyctx() 0
phylum.cpp:15:6:bool fk::Phylum::sync() 0
platform.cpp:12:13:ostreamtype serror() 0
platform.cpp:155:7:void* fk_malloc_internal(size_t, const char*, int32_t) 0
platform.cpp:166:6:void fk_free_internal(void*, const char*, int32_t) 0
platform.cpp:16:13:ostreamtype serror(const char*) 0
platform.cpp:4:13:ostreamtype sdebug() 0
platform.cpp:56:10:uint32_t fk::fk_uptime_adjust_after_sleep(uint32_t) 0
platform.cpp:61:10:uint32_t fk::fk_delay(uint32_t) 0
platform.cpp:65:10:uint32_t fk::fk_deep_sleep(uint32_t) 0
platform.cpp:71:10:uint32_t fk::fk_free_memory() 0
platform.cpp:75:10:uint32_t fk::fk_serial_number_get(fk::fk_serial_number_t*) 0
platform.cpp:8:13:ostreamtype sdebug(const char*) 0
poll_sensors_worker.h:7:7:fk::PollSensorsWorker::~PollSensorsWorker() 0
pool.cpp:212:13:fk::InsidePool::~InsidePool() 0
pool.cpp:48:1:fk::Pool::~Pool() 0
pool.cpp:63:6:virtual void fk::Pool::log_destroy(const char*) 0
pool.cpp:71:6:virtual void fk::Pool::clear() 0
pool.h:72:20:virtual size_t fk::Pool::size() const 0
pool.h:76:20:virtual size_t fk::Pool::used() const 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::BackupWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::BackupWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::ConfigureModuleWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::ConfigureModuleWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::DownloadFileWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::DownloadFileWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::DownloadFirmwareWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::DownloadFirmwareWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::DownloadLogsWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::DownloadLogsWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::DownloadWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::DownloadWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::DumpFlashMemoryWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::DumpFlashMemoryWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::ExportDataWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::ExportDataWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::FactoryWipeWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::FactoryWipeWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::FactoryWipeWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::FactoryWipeWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::FsckWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::FsckWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::LoraRangingWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::LoraRangingWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::LoraWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::LoraWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::NetworkConnection] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::NetworkConnection] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::NetworkListener] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::NetworkListener] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::PollSensorsWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::PollSensorsWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::ReadingsWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::ReadingsWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::ReadingsWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::ReadingsWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::ReceiveFirmwareWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::ReceiveFirmwareWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::RefreshModulesWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::RefreshModulesWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::SelfCheckWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::SelfCheckWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::ServiceModulesWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::ServiceModulesWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::StartupWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::StartupWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::UpgradeFirmwareFromSdWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::UpgradeFirmwareFromSdWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::UploadDataWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::UploadDataWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::UploadDataWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::UploadDataWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::WifiToggleWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::WifiToggleWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::WifiToggleWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::WifiToggleWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::WriteMemoryWorker] 0
pool_pointer.h:12:13:fk::PoolPointer<T>::~PoolPointer() [with T = fk::WriteMemoryWorker] 0
pool_pointer.h:52:11:fk::Pool* fk::WeakPoolWrapper<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::NetworkListener; ConcreteWrapped = fk::MetalNetworkListener; Args = {short unsigned int&}] 0
pool_pointer.h:56:14:Wrapped* fk::WeakPoolWrapper<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::NetworkListener; ConcreteWrapped = fk::MetalNetworkListener; Args = {short unsigned int&}] 0
pool_pointer.h:83:11:fk::Pool* fk::StandardPoolWrapper<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::NetworkConnection; ConcreteWrapped = fk::MetalNetworkConnection; Args = {WiFiClient&}] 0
pool_pointer.h:87:14:Wrapped* fk::StandardPoolWrapper<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::NetworkConnection; ConcreteWrapped = fk::MetalNetworkConnection; Args = {WiFiClient&}] 0
printf.cpp:100:20:void _out_null(char, void*, size_t, size_t) 0
printf.cpp:100:20:void _out_null(char, void*, size_t, size_t) 0
printf.cpp:91:20:void _out_buffer(char, void*, size_t, size_t) 0
printf.cpp:91:20:void _out_buffer(char, void*, size_t, size_t) 0
process.h:11:21:virtual fk::TaskDisplayInfo fk::Process::display_info() const 0
process.h:16:13:virtual uint8_t fk::Process::priority() const 0
process.h:20:17:virtual const char* fk::Process::name() const 0
process.h:7:7:fk::Process::~Process() 0
progress_tracker.cpp:11:6:void fk::ProgressTracker::update(int32_t) 0
progress_tracker.cpp:36:6:bool fk::ProgressTracker::busy() const 0
progress_tracker.cpp:40:6:bool fk::ProgressTracker::done() const 0
progress_tracker.cpp:48:10:uint32_t fk::ProgressTracker::bytes() const 0
progress_tracker.cpp:52:10:uint32_t fk::ProgressTracker::remaining_bytes() const 0
protobuf.cpp:188:8:size_t fk::pb_varint_size(uint32_t) 0
protobuf.cpp:197:12:fk::pb_data_t* fk::pb_get_data_if_provided(void*, fk::Pool&) 0
protobuf.cpp:204:13:const char* fk::pb_get_string_if_provided(void*, fk::Pool&) 0
protobuf.cpp:211:13:const char* fk::pb_data_to_hex_string(const pb_data_t*, fk::Pool&) 0
qr_code_view.cpp:16:1:fk::QrCodeView::QrCodeView(fk::WhichQrCode) 0
qr_code_view.cpp:19:6:virtual void fk::QrCodeView::show() 0
qrcode.c:106:15:getAlphanumeric 0
qrcode.c:150:13:getModeBits 0
qrcode.c:248:13:bb_getBit 0
qrcode.c:774:10:qrcode_getBufferSize 0
qrcode.c:859:6:qrcode_getModule 0
queue.c:34:13:osi_queue_create 0
random_module.cpp:44:22:virtual const ModuleSensors* fk::RandomModule::get_sensors(fk::Pool&) 0
random_module.cpp:48:27:virtual const ModuleConfiguration fk::RandomModule::get_configuration(fk::Pool&) 0
random_module.cpp:6:1:fk::RandomModule::RandomModule(fk::Pool&) 0
random_module.cpp:9:1:fk::RandomModule::~RandomModule() 0
readings.cpp:170:6:void fk::Readings::meta_record(uint32_t) 0
readings.cpp:174:6:void fk::Readings::record_number(uint32_t) 0
readings.cpp:178:21:fk_data_DataRecord& fk::Readings::record() 0
readings_view.cpp:51:6:virtual void fk::ReadingsView::up(fk::ViewController*) 0
readings_view.cpp:56:6:virtual void fk::ReadingsView::down(fk::ViewController*) 0
readings_worker.h:21:13:virtual uint8_t fk::ReadingsWorker::priority() const 0
readings_worker.h:21:13:virtual uint8_t fk::ReadingsWorker::priority() const 0
readings_worker.h:25:17:virtual const char* fk::ReadingsWorker::name() const 0
readings_worker.h:25:17:virtual const char* fk::ReadingsWorker::name() const 0
readings_worker.h:9:7:fk::ReadingsWorker::~ReadingsWorker() 0
receive_firmware_handler.cpp:12:1:fk::ReceiveFirmwareWorker::ReceiveFirmwareWorker(fk::HttpServerConnection*) 0
receive_firmware_handler.h:14:7:fk::ReceiveFirmwareWorker::~ReceiveFirmwareWorker() 0
receive_firmware_handler.h:24:13:virtual uint8_t fk::ReceiveFirmwareWorker::priority() const 0
receive_firmware_handler.h:28:17:virtual const char* fk::ReceiveFirmwareWorker::name() const 0
refresh_modules_worker.cpp:6:1:fk::RefreshModulesWorker::RefreshModulesWorker() 0
refresh_modules_worker.h:15:13:virtual uint8_t fk::RefreshModulesWorker::priority() const 0
refresh_modules_worker.h:19:17:virtual const char* fk::RefreshModulesWorker::name() const 0
refresh_modules_worker.h:7:7:fk::RefreshModulesWorker::~RefreshModulesWorker() 0
registry.cpp:22:1:fk::ModuleRegistry::ModuleRegistry() 0
registry.cpp:25:1:fk::ModuleRegistry::~ModuleRegistry() 0
req.cpp:23:12:int fk::http_on_message_begin_callback(http_parser*) 0
req.cpp:27:12:int fk::http_url_callback(http_parser*, const char*, size_t) 0
req.cpp:31:12:int fk::http_header_field_callback(http_parser*, const char*, size_t) 0
req.cpp:35:12:int fk::http_header_value_callback(http_parser*, const char*, size_t) 0
req.cpp:39:12:int fk::http_headers_complete_callback(http_parser*) 0
req.cpp:43:12:int fk::http_body_callback(http_parser*, const char*, size_t) 0
req.cpp:47:12:int fk::http_message_complete_callback(http_parser*) 0
rn2903.cpp:140:6:bool fk::Rn2903::save_state() 0
rn2903.cpp:15:6:bool fk::Rn2903::begin() 0
rn2903.cpp:19:6:bool fk::Rn2903::sleep(uint32_t) 0
rn2903.cpp:267:6:bool fk::Rn2903::configure_sf(uint8_t) 0
rwlock.c:27:13:osi_rwlock_create 0
samd21_host.c:215:6:UHD_Handler 0
samd21_host.c:324:18:UHD_GetVBUSState 0
samd21_host.c:339:10:UHD_Pipe0_Alloc 0
samd21_host.c:409:6:UHD_Pipe_CountZero 0
samd21_host.c:419:6:UHD_Pipe_Free 0
samd21_host.c:512:10:UHD_Pipe_Is_Transfer_Complete 0
samd51.c:13:6:fk_nvm_swap_banks 0
samd51.c:21:8:fk_nvm_get_active_bank 0
samd51.c:25:6:fk_restart 0
samd51.c:29:22:fk_get_reset_reason 0
samd51.c:33:13:fk_get_reset_reason_string 0
sc16is740.cpp:57:1:fk::Sc16is740::Sc16is740(fk::AcquireTwoWireBus*) 0
scan_modules_worker.cpp:10:1:fk::ScanModulesWorker::ScanModulesWorker() 0
scan_modules_worker.h:15:13:virtual uint8_t fk::ScanModulesWorker::priority() const 0
scan_modules_worker.h:19:17:virtual const char* fk::ScanModulesWorker::name() const 0
scan_modules_worker.h:7:7:fk::ScanModulesWorker::~ScanModulesWorker() 0
scanning.cpp:15:1:fk::ModuleScanning::ModuleScanning(fk::ModMux*) 0
scanning.cpp:18:6:bool fk::ModuleScanning::available() 0
scanning.cpp:196:6:virtual bool fk::ModuleScanning::configure(fk::ModulePosition, const uint8_t*, size_t) 0
schedule_view.cpp:49:6:virtual void fk::ScheduleView::up(fk::ViewController*) 0
schedule_view.cpp:53:6:virtual void fk::ScheduleView::down(fk::ViewController*) 0
scheduling.cpp:29:13:virtual const char* fk::ReadingsTask::toString() const 0
scheduling.cpp:36:6:virtual void fk::GpsTask::run() 0
scheduling.cpp:40:13:virtual const char* fk::GpsTask::toString() const 0
scheduling.cpp:51:13:virtual const char* fk::LoraTask::toString() const 0
scheduling.cpp:66:13:virtual const char* fk::UploadDataTask::toString() const 0
scheduling.cpp:70:1:fk::SynchronizeTimeTask::SynchronizeTimeTask(uint32_t) 0
scheduling.cpp:82:13:virtual const char* fk::SynchronizeTimeTask::toString() const 0
scheduling.cpp:86:1:fk::ServiceModulesTask::ServiceModulesTask(uint32_t) 0
scheduling.cpp:93:13:virtual const char* fk::ServiceModulesTask::toString() const 0
sd_card.cpp:14:9:fk::SdCard* fk::get_sd_card() 0
sd_card.cpp:18:1:cpp) 0
sd_card.h:50:18:virtual bool fk::SdCard::ls(const char*, size_t, fk_app_DirectoryEntry**, size_t&, size_t&, fk::Pool&) 0
sd_card.h:50:18:virtual bool fk::SdCard::ls(const char*, size_t, fk_app_DirectoryEntry**, size_t&, size_t&, fk::Pool&) 0
sd_card.h:54:18:virtual void fk::SdCard::name(const char*) 0
sd_card.h:54:18:virtual void fk::SdCard::name(const char*) 0
sector_allocator.h:23:28:virtual phylum::dhara_sector_t phylum::sector_allocator::allocate() 0
sector_chain.h:136:10:void phylum::sector_chain::sector(phylum::dhara_sector_t) 0
sector_chain.h:57:10:bool phylum::sector_chain::valid() const 0
sector_map.h:14:13:phylum::sector_map::~sector_map() 0
self_check.cpp:119:6:bool fk::SelfCheck::rtc() 0
self_check.cpp:131:6:bool fk::SelfCheck::temperature() 0
self_check.cpp:143:6:bool fk::SelfCheck::battery_gauge() 0
self_check.cpp:155:6:bool fk::SelfCheck::solar_gauge() 0
self_check.cpp:167:6:bool fk::SelfCheck::qspi_memory() 0
self_check.cpp:208:6:bool fk::SelfCheck::gps() 0
self_check.cpp:252:6:bool fk::SelfCheck::sd_card_open() 0
self_check.cpp:264:6:bool fk::SelfCheck::sd_card_write() 0
self_check.cpp:332:6:bool fk::SelfCheck::lora() 0
self_check.h:81:10:virtual void fk::NoopSelfCheckCallbacks::update(fk::SelfCheckStatus) 0
self_check_view.h:28:10:virtual bool fk::SelfCheckView::custom_leds() 0
self_check_worker.cpp:11:1:fk::SelfCheckWorker::SelfCheckWorker(fk::SelfCheckCallbacks&) 0
self_check_worker.h:18:13:virtual uint8_t fk::SelfCheckWorker::priority() const 0
self_check_worker.h:22:17:virtual const char* fk::SelfCheckWorker::name() const 0
self_check_worker.h:8:7:fk::SelfCheckWorker::~SelfCheckWorker() 0
semaphore.c:34:13:osi_semaphore_create 0
sequential_memory.cpp:12:1:fk::SequentialMemory::SequentialMemory(fk::DataMemory*) 0
sequential_memory.cpp:84:1:fk::BufferedPageMemory::~BufferedPageMemory() 0
service.c:110:13:svc_mutex_create 0
service.c:114:13:svc_mutex_acquire 0
service.c:118:13:svc_mutex_release 0
service.c:122:13:svc_semaphore_create 0
service.c:126:13:svc_semaphore_acquire 0
service.c:130:13:svc_semaphore_release 0
service.c:134:13:svc_rwlock_create 0
service.c:138:13:svc_rwlock_acquire_read 0
service.c:142:13:svc_rwlock_acquire_write 0
service.c:146:13:svc_rwlock_release 0
service.c:150:13:svc_signal 0
service.c:154:13:svc_signal_check 0
service.c:76:10:svc_block 0
service.c:81:10:svc_printf 0
service.c:86:10:svc_pstr 0
service.c:90:13:svc_queue_create 0
service_modules_worker.cpp:11:1:fk::ServiceModulesWorker::ServiceModulesWorker() 0
service_modules_worker.h:16:13:virtual uint8_t fk::ServiceModulesWorker::priority() const 0
service_modules_worker.h:20:17:virtual const char* fk::ServiceModulesWorker::name() const 0
service_modules_worker.h:9:7:fk::ServiceModulesWorker::~ServiceModulesWorker() 0
signals.c:35:13:osi_signal_check 0
signed_log.cpp:12:1:fk::SignedRecordLog::SignedRecordLog(fk::File&) 0
signed_log.cpp:15:6:bool fk::SignedRecordLog::seek_end() 0
socket.c:1308:7:getsockopt 0
socket.c:514:6:registerSocketCallback 0
socket.c:709:7:accept 0
spi_flash.cpp:644:6:void fk::SpiFlash::enable() 0
spi_flash.cpp:649:6:void fk::SpiFlash::disable() 0
spi_flash.cpp:702:1:cpp) 0
startup.c:54:6:SystemInit 0
startup_worker.h:10:7:fk::StartupWorker::~StartupWorker() 0
startup_worker.h:14:21:virtual fk::TaskDisplayInfo fk::StartupWorker::display_info() const 0
startup_worker.h:19:13:virtual uint8_t fk::StartupWorker::priority() const 0
startup_worker.h:23:17:virtual const char* fk::StartupWorker::name() const 0
state.cpp:104:6:void fk::GlobalState::update_data_stream(uint32_t, uint32_t) 0
state.cpp:110:6:void fk::GlobalState::update_meta_stream(uint32_t, uint32_t) 0
state.cpp:173:17:const fk::GpsState* fk::GlobalState::location(fk::Pool&) const 0
state.cpp:177:1:cpp) 0
state_manager.cpp:96:6:bool fk::GlobalStateManager::rebuild() 0
statistics_memory.cpp:53:19:fk::MemoryStatistics& fk::StatisticsMemory::statistics() 0
storage.cpp:135:10:fk::DataOps* fk::Storage::data_ops() 0
storage.cpp:139:10:fk::MetaOps* fk::Storage::meta_ops() 0
storage.cpp:147:9:int32_t fk::Storage::used() 0
storage.cpp:49:6:void fk::BlockHeader::fill_hash() 0
storage.cpp:63:6:void fk::BlockTail::fill_hash() 0
storage.cpp:73:10:uint32_t fk::RecordHeader::sign() 0
storage.cpp:783:6:void fk::Storage::verify_opened() const 0
storage.cpp:787:6:void fk::Storage::verify_mutable() const 0
storage.cpp:81:10:uint32_t fk::RecordTail::sign() 0
storage.cpp:89:14:static fk::SeekSettings fk::SeekSettings::end_of(uint8_t) 0
syscall_plumbing.h:189:20:osi_in_task 0
syscalls_app.cpp:10:7:void* svc_memory_alloc() 0
task_stack.cpp:26:6:void task_stack::pop() 0
task_stack.cpp:34:13:task_stack* get_task_stack() 0
task_stack.cpp:36:1:cpp) 0
tasks.cpp:42:13:os_task_t** fk::fk_tasks_all() 0
temperature.cpp:20:1:fk::CoreTemperature::CoreTemperature(fk::TwoWireWrapper) 0
temperature.cpp:23:6:bool fk::CoreTemperature::begin() 0
tiny_printf.c:103:20:_out_null 0
tiny_printf.c:94:20:_out_buffer 0
tree_sector.h:89:13:phylum::tree_sector<KEY, VALUE, Size>::~tree_sector() [with KEY = long unsigned int; VALUE = phylum::attribute_value_t<256u>; unsigned int Size = 15u] 0
tree_sector.h:89:13:phylum::tree_sector<KEY, VALUE, Size>::~tree_sector() [with KEY = long unsigned int; VALUE = phylum::dirtree_tree_value_t<128u>; unsigned int Size = 4u] 0
types.h:106:8:fk::BlockTail::BlockTail() 0
types.h:164:5:fk::SeekValue::SeekValue() 0
u8g2_bitmap.c:39:6:u8g2_SetBitmapMode 0
u8g2_buffer.c:178:6:u8g2_UpdateDisplay 0
u8g2_buffer.c:40:6:u8g2_ClearBuffer 0
u8g2_d_memory.c:1007:10:u8g2_m_40_30_2 0
u8g2_d_memory.c:1018:10:u8g2_m_40_30_f 0
u8g2_d_memory.c:1029:10:u8g2_m_20_8_1 0
u8g2_d_memory.c:1040:10:u8g2_m_20_8_2 0
u8g2_d_memory.c:1051:10:u8g2_m_20_8_f 0
u8g2_d_memory.c:105:10:u8g2_m_9_5_1 0
u8g2_d_memory.c:1062:10:u8g2_m_17_4_1 0
u8g2_d_memory.c:1073:10:u8g2_m_17_4_2 0
u8g2_d_memory.c:1084:10:u8g2_m_17_4_f 0
u8g2_d_memory.c:1095:10:u8g2_m_17_8_1 0
u8g2_d_memory.c:1106:10:u8g2_m_17_8_2 0
u8g2_d_memory.c:1117:10:u8g2_m_17_8_f 0
u8g2_d_memory.c:1128:10:u8g2_m_48_17_1 0
u8g2_d_memory.c:1139:10:u8g2_m_48_17_2 0
u8g2_d_memory.c:1150:10:u8g2_m_48_17_f 0
u8g2_d_memory.c:1161:10:u8g2_m_32_20_1 0
u8g2_d_memory.c:116:10:u8g2_m_9_5_2 0
u8g2_d_memory.c:1172:10:u8g2_m_32_20_2 0
u8g2_d_memory.c:1183:10:u8g2_m_32_20_f 0
u8g2_d_memory.c:1194:10:u8g2_m_22_13_1 0
u8g2_d_memory.c:1205:10:u8g2_m_22_13_2 0
u8g2_d_memory.c:1216:10:u8g2_m_22_13_f 0
u8g2_d_memory.c:1227:10:u8g2_m_24_12_1 0
u8g2_d_memory.c:1238:10:u8g2_m_24_12_2 0
u8g2_d_memory.c:1249:10:u8g2_m_24_12_f 0
u8g2_d_memory.c:1260:10:u8g2_m_20_10_1 0
u8g2_d_memory.c:1271:10:u8g2_m_20_10_2 0
u8g2_d_memory.c:127:10:u8g2_m_9_5_f 0
u8g2_d_memory.c:1282:10:u8g2_m_20_10_f 0
u8g2_d_memory.c:1293:10:u8g2_m_20_4_1 0
u8g2_d_memory.c:1304:10:u8g2_m_20_4_2 0
u8g2_d_memory.c:1315:10:u8g2_m_20_4_f 0
u8g2_d_memory.c:1326:10:u8g2_m_20_17_1 0
u8g2_d_memory.c:1337:10:u8g2_m_20_17_2 0
u8g2_d_memory.c:1348:10:u8g2_m_20_17_f 0
u8g2_d_memory.c:1359:10:u8g2_m_22_9_1 0
u8g2_d_memory.c:1370:10:u8g2_m_22_9_2 0
u8g2_d_memory.c:1381:10:u8g2_m_22_9_f 0
u8g2_d_memory.c:138:10:u8g2_m_8_4_1 0
u8g2_d_memory.c:1392:10:u8g2_m_25_25_1 0
u8g2_d_memory.c:1403:10:u8g2_m_25_25_2 0
u8g2_d_memory.c:1414:10:u8g2_m_25_25_f 0
u8g2_d_memory.c:1425:10:u8g2_m_37_16_1 0
u8g2_d_memory.c:1436:10:u8g2_m_37_16_2 0
u8g2_d_memory.c:1447:10:u8g2_m_37_16_f 0
u8g2_d_memory.c:1458:10:u8g2_m_8_1_1 0
u8g2_d_memory.c:1469:10:u8g2_m_8_1_2 0
u8g2_d_memory.c:1480:10:u8g2_m_8_1_f 0
u8g2_d_memory.c:1491:10:u8g2_m_4_1_1 0
u8g2_d_memory.c:149:10:u8g2_m_8_4_2 0
u8g2_d_memory.c:1502:10:u8g2_m_4_1_2 0
u8g2_d_memory.c:1513:10:u8g2_m_4_1_f 0
u8g2_d_memory.c:1524:10:u8g2_m_1_1_1 0
u8g2_d_memory.c:1535:10:u8g2_m_1_1_2 0
u8g2_d_memory.c:1546:10:u8g2_m_1_1_f 0
u8g2_d_memory.c:1557:10:u8g2_m_48_30_1 0
u8g2_d_memory.c:1568:10:u8g2_m_48_30_2 0
u8g2_d_memory.c:1579:10:u8g2_m_48_30_f 0
u8g2_d_memory.c:160:10:u8g2_m_8_4_f 0
u8g2_d_memory.c:171:10:u8g2_m_8_16_1 0
u8g2_d_memory.c:17:10:u8g2_m_16_4_2 0
u8g2_d_memory.c:182:10:u8g2_m_8_16_2 0
u8g2_d_memory.c:193:10:u8g2_m_8_16_f 0
u8g2_d_memory.c:204:10:u8g2_m_12_12_1 0
u8g2_d_memory.c:215:10:u8g2_m_12_12_2 0
u8g2_d_memory.c:226:10:u8g2_m_12_12_f 0
u8g2_d_memory.c:237:10:u8g2_m_16_16_1 0
u8g2_d_memory.c:248:10:u8g2_m_16_16_2 0
u8g2_d_memory.c:259:10:u8g2_m_16_16_f 0
u8g2_d_memory.c:270:10:u8g2_m_20_20_1 0
u8g2_d_memory.c:281:10:u8g2_m_20_20_2 0
u8g2_d_memory.c:28:10:u8g2_m_16_4_f 0
u8g2_d_memory.c:292:10:u8g2_m_20_20_f 0
u8g2_d_memory.c:303:10:u8g2_m_32_8_1 0
u8g2_d_memory.c:314:10:u8g2_m_32_8_2 0
u8g2_d_memory.c:325:10:u8g2_m_32_8_f 0
u8g2_d_memory.c:336:10:u8g2_m_8_6_1 0
u8g2_d_memory.c:347:10:u8g2_m_8_6_2 0
u8g2_d_memory.c:358:10:u8g2_m_8_6_f 0
u8g2_d_memory.c:369:10:u8g2_m_6_8_1 0
u8g2_d_memory.c:380:10:u8g2_m_6_8_2 0
u8g2_d_memory.c:391:10:u8g2_m_6_8_f 0
u8g2_d_memory.c:39:10:u8g2_m_16_8_1 0
u8g2_d_memory.c:402:10:u8g2_m_12_2_1 0
u8g2_d_memory.c:413:10:u8g2_m_12_2_2 0
u8g2_d_memory.c:424:10:u8g2_m_12_2_f 0
u8g2_d_memory.c:435:10:u8g2_m_16_12_1 0
u8g2_d_memory.c:446:10:u8g2_m_16_12_2 0
u8g2_d_memory.c:457:10:u8g2_m_16_12_f 0
u8g2_d_memory.c:468:10:u8g2_m_32_4_1 0
u8g2_d_memory.c:479:10:u8g2_m_32_4_2 0
u8g2_d_memory.c:490:10:u8g2_m_32_4_f 0
u8g2_d_memory.c:501:10:u8g2_m_12_8_1 0
u8g2_d_memory.c:50:10:u8g2_m_16_8_2 0
u8g2_d_memory.c:512:10:u8g2_m_12_8_2 0
u8g2_d_memory.c:523:10:u8g2_m_12_8_f 0
u8g2_d_memory.c:534:10:u8g2_m_24_4_1 0
u8g2_d_memory.c:545:10:u8g2_m_24_4_2 0
u8g2_d_memory.c:556:10:u8g2_m_24_4_f 0
u8g2_d_memory.c:567:10:u8g2_m_50_30_1 0
u8g2_d_memory.c:578:10:u8g2_m_50_30_2 0
u8g2_d_memory.c:589:10:u8g2_m_50_30_f 0
u8g2_d_memory.c:600:10:u8g2_m_18_21_1 0
u8g2_d_memory.c:611:10:u8g2_m_18_21_2 0
u8g2_d_memory.c:61:10:u8g2_m_16_8_f 0
u8g2_d_memory.c:622:10:u8g2_m_18_21_f 0
u8g2_d_memory.c:633:10:u8g2_m_13_8_1 0
u8g2_d_memory.c:644:10:u8g2_m_13_8_2 0
u8g2_d_memory.c:655:10:u8g2_m_13_8_f 0
u8g2_d_memory.c:666:10:u8g2_m_11_6_1 0
u8g2_d_memory.c:677:10:u8g2_m_11_6_2 0
u8g2_d_memory.c:688:10:u8g2_m_11_6_f 0
u8g2_d_memory.c:699:10:u8g2_m_12_9_1 0
u8g2_d_memory.c:6:10:u8g2_m_16_4_1 0
u8g2_d_memory.c:710:10:u8g2_m_12_9_2 0
u8g2_d_memory.c:721:10:u8g2_m_12_9_f 0
u8g2_d_memory.c:72:10:u8g2_m_255_2_1 0
u8g2_d_memory.c:732:10:u8g2_m_24_8_1 0
u8g2_d_memory.c:743:10:u8g2_m_24_8_2 0
u8g2_d_memory.c:754:10:u8g2_m_24_8_f 0
u8g2_d_memory.c:765:10:u8g2_m_30_8_1 0
u8g2_d_memory.c:776:10:u8g2_m_30_8_2 0
u8g2_d_memory.c:787:10:u8g2_m_30_8_f 0
u8g2_d_memory.c:798:10:u8g2_m_30_15_1 0
u8g2_d_memory.c:809:10:u8g2_m_30_15_2 0
u8g2_d_memory.c:820:10:u8g2_m_30_15_f 0
u8g2_d_memory.c:831:10:u8g2_m_30_16_1 0
u8g2_d_memory.c:83:10:u8g2_m_255_2_2 0
u8g2_d_memory.c:842:10:u8g2_m_30_16_2 0
u8g2_d_memory.c:853:10:u8g2_m_30_16_f 0
u8g2_d_memory.c:864:10:u8g2_m_20_16_1 0
u8g2_d_memory.c:875:10:u8g2_m_20_16_2 0
u8g2_d_memory.c:886:10:u8g2_m_20_16_f 0
u8g2_d_memory.c:897:10:u8g2_m_20_13_1 0
u8g2_d_memory.c:908:10:u8g2_m_20_13_2 0
u8g2_d_memory.c:919:10:u8g2_m_20_13_f 0
u8g2_d_memory.c:930:10:u8g2_m_30_20_1 0
u8g2_d_memory.c:941:10:u8g2_m_30_20_2 0
u8g2_d_memory.c:94:10:u8g2_m_255_2_f 0
u8g2_d_memory.c:952:10:u8g2_m_30_20_f 0
u8g2_d_memory.c:963:10:u8g2_m_32_16_1 0
u8g2_d_memory.c:974:10:u8g2_m_32_16_2 0
u8g2_d_memory.c:985:10:u8g2_m_32_16_f 0
u8g2_d_memory.c:996:10:u8g2_m_40_30_1 0
u8g2_display.cpp:473:6:virtual void fk::U8g2Display::off() 0
u8g2_font.c:1004:6:u8g2_SetFontRefHeightExtendedText 0
u8g2_font.c:1010:6:u8g2_SetFontRefHeightAll 0
u8g2_font.c:1019:13:u8g2_font_calc_vref_font 0
u8g2_font.c:1024:6:u8g2_SetFontPosBaseline 0
u8g2_font.c:1030:13:u8g2_font_calc_vref_bottom 0
u8g2_font.c:1035:6:u8g2_SetFontPosBottom 0
u8g2_font.c:1040:13:u8g2_font_calc_vref_top 0
u8g2_font.c:1049:6:u8g2_SetFontPosTop 0
u8g2_font.c:1054:13:u8g2_font_calc_vref_center 0
u8g2_font.c:1064:6:u8g2_SetFontPosCenter 0
u8g2_font.c:1108:9:u8g2_IsAllValidUTF8 0
u8g2_font.c:118:17:u8g2_font_get_word 0
u8g2_font.c:1254:13:u8g2_GetStrWidth 0
u8g2_font.c:1276:13:u8g2_GetUTF8Width 0
u8g2_font.c:1284:6:u8g2_SetFontDirection 0
u8g2_font.c:205:9:u8g2_GetFontBBXWidth 0
u8g2_font.c:210:9:u8g2_GetFontBBXHeight 0
u8g2_font.c:216:8:u8g2_GetFontBBXOffX 0
u8g2_font.c:222:8:u8g2_GetFontBBXOffY 0
u8g2_font.c:228:9:u8g2_GetFontCapitalAHeight 0
u8g2_font.c:296:13:u8g2_add_vector_y 0
u8g2_font.c:316:13:u8g2_add_vector_x 0
u8g2_font.c:763:6:u8g2_SetFontMode 0
u8g2_font.c:998:6:u8g2_SetFontRefHeightText 0
u8g2_hvline.c:249:6:u8g2_SetDrawColor 0
u8g2_intersection.c:123:9:u8g2_is_intersection_decision_tree 0
u8g2_polygon.c:126:16:pg_inc 0
u8g2_polygon.c:134:16:pg_dec 0
u8g2_polygon.c:323:6:u8g2_ClearPolygonXY 0
u8g2_polygon.c:328:6:u8g2_AddPolygonXY 0
u8g2_setup.c:212:6:u8g2_update_dimension_r0 0
u8g2_setup.c:217:6:u8g2_update_page_win_r0 0
u8g2_setup.c:240:6:u8g2_update_page_win_r1 0
u8g2_setup.c:253:6:u8g2_update_dimension_r2 0
u8g2_setup.c:258:6:u8g2_update_page_win_r2 0
u8g2_setup.c:285:6:u8g2_update_page_win_r3 0
u8log.c:180:6:u8log_SetCallback 0
u8log.c:186:6:u8log_SetRedrawMode 0
u8log.c:192:6:u8log_SetLineHeightOffset 0
u8log.c:223:13:u8log_WriteHexHalfByte 0
u8x8_8x8.c:153:10:u8x8_upscale_byte 0
u8x8_8x8.c:285:6:u8x8_utf8_init 0
u8x8_8x8.c:290:10:u8x8_ascii_next 0
u8x8_8x8.c:304:10:u8x8_utf8_next 0
u8x8_8x8.c:50:6:u8x8_SetFont 0
u8x8_byte.c:461:13:i2c_delay 0
u8x8_byte.c:490:13:i2c_read_sda 0
u8x8_byte.c:66:9:u8x8_byte_empty 0
u8x8_capture.c:61:9:u8x8_capture_get_pixel_2 0
u8x8_d_sbn1661.c:213:9:u8x8_d_sed1520_122x32 0
u8x8_d_st7565.c:686:9:u8x8_d_st7565_jlx12864 0
u8x8_d_uc1617.c:73:16:u8x8_upscale_4bit 0
u8x8_display.c:52:6:u8x8_d_helper_display_setup_memory 0
u8x8_selection_list.c:60:6:u8sl_Prev 0
u8x8_setup.c:40:9:u8x8_dummy_cb 0
u8x8_setup.c:95:6:u8x8_SetupDefaults 0
u8x8_string.c:40:9:u8x8_GetStringLineCnt 0
u8x8_string.c:66:13:u8x8_GetStringLineStart 0
unknown.cpp:35:22:virtual const ModuleSensors* fk::UnknownModule::get_sensors(fk::Pool&) 0
unknown.cpp:39:27:virtual const ModuleConfiguration fk::UnknownModule::get_configuration(fk::Pool&) 0
unknown.cpp:43:17:virtual fk::ModuleReadings* fk::UnknownModule::take_readings(fk::ReadingsContext, fk::Pool&) 0
unknown.h:7:7:fk::UnknownModule::~UnknownModule() 0
upgrade_from_sd_worker.h:25:7:fk::UpgradeFirmwareFromSdWorker::~UpgradeFirmwareFromSdWorker() 0
upgrade_from_sd_worker.h:36:13:virtual uint8_t fk::UpgradeFirmwareFromSdWorker::priority() const 0
upgrade_from_sd_worker.h:40:17:virtual const char* fk::UpgradeFirmwareFromSdWorker::name() const 0
upload_data_worker.cpp:19:1:fk::UploadDataWorker::UploadDataWorker() 0
upload_data_worker.h:21:13:virtual uint8_t fk::UploadDataWorker::priority() const 0
upload_data_worker.h:25:17:virtual const char* fk::UploadDataWorker::name() const 0
upload_data_worker.h:8:7:fk::UploadDataWorker::~UploadDataWorker() 0
utilities.h:48:20:0 0
variant.cpp:204:6:void SERCOM0_0_Handler() 0
variant.cpp:208:6:void SERCOM0_1_Handler() 0
variant.cpp:212:6:void SERCOM0_2_Handler() 0
variant.cpp:216:6:void SERCOM0_3_Handler() 0
varint.cpp:20:8:size_t phylum::varint_encoding_length(long long unsigned int) 0
water_api.cpp:8:1:fk::WaterApi::WaterApi() 0
water_module.cpp:151:13:const char* fk::WaterModule::get_display_name_key() 0
water_module.cpp:155:27:virtual const ModuleConfiguration fk::WaterModule::get_configuration(fk::Pool&) 0
water_module.cpp:54:1:fk::WaterModule::WaterModule(fk::Pool&) 0
water_module.cpp:57:1:fk::WaterModule::~WaterModule() 0
weather_module.cpp:41:1:fk::WeatherModule::WeatherModule(fk::Pool&) 0
weather_module.cpp:44:1:fk::WeatherModule::~WeatherModule() 0
weather_module.cpp:47:22:virtual const ModuleSensors* fk::WeatherModule::get_sensors(fk::Pool&) 0
weather_module.cpp:51:27:virtual const ModuleConfiguration fk::WeatherModule::get_configuration(fk::Pool&) 0
weather_types.cpp:32:7:static float fk::WindDirection::get_mv_from_raw_adc(uint32_t) 0
weather_types.cpp:5:9:static int16_t fk::WindDirection::get_adc_value_from_raw_adc(uint32_t) 0
weather_types.cpp:9:9:static int16_t fk::WindDirection::get_angle_from_raw_adc(uint32_t) 0
wifi_toggle_worker.cpp:13:1:fk::WifiToggleWorker::WifiToggleWorker(fk::WifiToggleWorker::DesiredState) 0
wifi_toggle_worker.h:26:13:virtual uint8_t fk::WifiToggleWorker::priority() const 0
wifi_toggle_worker.h:30:17:virtual const char* fk::WifiToggleWorker::name() const 0
wifi_toggle_worker.h:7:7:fk::WifiToggleWorker::~WifiToggleWorker() 0
wiring_analog.c:112:6:analogWriteResolution 0
wiring_analog.c:134:6:analogReference 0
wiring_digital.c:105:5:digitalRead 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::BackupWorker; ConcreteWrapped = fk::BackupWorker; Args = {}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::ConfigureModuleWorker; ConcreteWrapped = fk::ConfigureModuleWorker; Args = {fk::ModulePosition&, ModuleHeader&}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::ConfigureModuleWorker; ConcreteWrapped = fk::ConfigureModuleWorker; Args = {fk::ModulePosition&}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::DownloadFileWorker; ConcreteWrapped = fk::DownloadFileWorker; Args = {fk::HttpServerConnection*&}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::DownloadFirmwareWorker; ConcreteWrapped = fk::DownloadFirmwareWorker; Args = {}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::DownloadLogsWorker; ConcreteWrapped = fk::DownloadLogsWorker; Args = {fk::HttpServerConnection*&}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::DownloadWorker; ConcreteWrapped = fk::DownloadWorker; Args = {fk::HttpServerConnection*&, unsigned char&}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::DumpFlashMemoryWorker; ConcreteWrapped = fk::DumpFlashMemoryWorker; Args = {}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::ExportDataWorker; ConcreteWrapped = fk::ExportDataWorker; Args = {}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::FactoryWipeWorker; ConcreteWrapped = fk::FactoryWipeWorker; Args = {bool}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::FactoryWipeWorker; ConcreteWrapped = fk::FactoryWipeWorker; Args = {bool}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::FsckWorker; ConcreteWrapped = fk::FsckWorker; Args = {}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::LoraRangingWorker; ConcreteWrapped = fk::LoraRangingWorker; Args = {bool}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::LoraWorker; ConcreteWrapped = fk::LoraWorker; Args = {}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::PollSensorsWorker; ConcreteWrapped = fk::PollSensorsWorker; Args = {}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::ReadingsWorker; ConcreteWrapped = fk::ReadingsWorker; Args = {bool, bool, fk::ModulePowerState}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::ReadingsWorker; ConcreteWrapped = fk::ReadingsWorker; Args = {bool, bool, fk::ModulePowerState}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::ReceiveFirmwareWorker; ConcreteWrapped = fk::ReceiveFirmwareWorker; Args = {fk::HttpServerConnection*&}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::RefreshModulesWorker; ConcreteWrapped = fk::RefreshModulesWorker; Args = {}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::SelfCheckWorker; ConcreteWrapped = fk::SelfCheckWorker; Args = {fk::DisplaySelfCheckCallbacks&}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::ServiceModulesWorker; ConcreteWrapped = fk::ServiceModulesWorker; Args = {}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::StartupWorker; ConcreteWrapped = fk::StartupWorker; Args = {}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::UpgradeFirmwareFromSdWorker; ConcreteWrapped = fk::UpgradeFirmwareFromSdWorker; Args = {fk::SdCardFirmware&}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::UploadDataWorker; ConcreteWrapped = fk::UploadDataWorker; Args = {bool, bool}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::UploadDataWorker; ConcreteWrapped = fk::UploadDataWorker; Args = {}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::WifiToggleWorker; ConcreteWrapped = fk::WifiToggleWorker; Args = {fk::WifiToggleWorker::DesiredState}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::WifiToggleWorker; ConcreteWrapped = fk::WifiToggleWorker; Args = {}; uint8_t = unsigned char] 0
worker.h:105:13:uint8_t fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::priority() const [with Wrapped = fk::WriteMemoryWorker; ConcreteWrapped = fk::WriteMemoryWorker; Args = {fk::HttpServerConnection*&}; uint8_t = unsigned char] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::BackupWorker; ConcreteWrapped = fk::BackupWorker; Args = {}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::ConfigureModuleWorker; ConcreteWrapped = fk::ConfigureModuleWorker; Args = {fk::ModulePosition&, ModuleHeader&}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::ConfigureModuleWorker; ConcreteWrapped = fk::ConfigureModuleWorker; Args = {fk::ModulePosition&}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::DownloadFileWorker; ConcreteWrapped = fk::DownloadFileWorker; Args = {fk::HttpServerConnection*&}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::DownloadFirmwareWorker; ConcreteWrapped = fk::DownloadFirmwareWorker; Args = {}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::DownloadLogsWorker; ConcreteWrapped = fk::DownloadLogsWorker; Args = {fk::HttpServerConnection*&}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::DownloadWorker; ConcreteWrapped = fk::DownloadWorker; Args = {fk::HttpServerConnection*&, unsigned char&}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::DumpFlashMemoryWorker; ConcreteWrapped = fk::DumpFlashMemoryWorker; Args = {}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::ExportDataWorker; ConcreteWrapped = fk::ExportDataWorker; Args = {}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::FactoryWipeWorker; ConcreteWrapped = fk::FactoryWipeWorker; Args = {bool}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::FactoryWipeWorker; ConcreteWrapped = fk::FactoryWipeWorker; Args = {bool}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::FsckWorker; ConcreteWrapped = fk::FsckWorker; Args = {}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::LoraRangingWorker; ConcreteWrapped = fk::LoraRangingWorker; Args = {bool}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::LoraWorker; ConcreteWrapped = fk::LoraWorker; Args = {}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::PollSensorsWorker; ConcreteWrapped = fk::PollSensorsWorker; Args = {}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::ReadingsWorker; ConcreteWrapped = fk::ReadingsWorker; Args = {bool, bool, fk::ModulePowerState}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::ReadingsWorker; ConcreteWrapped = fk::ReadingsWorker; Args = {bool, bool, fk::ModulePowerState}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::ReceiveFirmwareWorker; ConcreteWrapped = fk::ReceiveFirmwareWorker; Args = {fk::HttpServerConnection*&}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::RefreshModulesWorker; ConcreteWrapped = fk::RefreshModulesWorker; Args = {}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::SelfCheckWorker; ConcreteWrapped = fk::SelfCheckWorker; Args = {fk::DisplaySelfCheckCallbacks&}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::ServiceModulesWorker; ConcreteWrapped = fk::ServiceModulesWorker; Args = {}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::StartupWorker; ConcreteWrapped = fk::StartupWorker; Args = {}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::UpgradeFirmwareFromSdWorker; ConcreteWrapped = fk::UpgradeFirmwareFromSdWorker; Args = {fk::SdCardFirmware&}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::UploadDataWorker; ConcreteWrapped = fk::UploadDataWorker; Args = {bool, bool}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::UploadDataWorker; ConcreteWrapped = fk::UploadDataWorker; Args = {}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::WifiToggleWorker; ConcreteWrapped = fk::WifiToggleWorker; Args = {fk::WifiToggleWorker::DesiredState}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::WifiToggleWorker; ConcreteWrapped = fk::WifiToggleWorker; Args = {}] 0
worker.h:109:17:const char* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::name() const [with Wrapped = fk::WriteMemoryWorker; ConcreteWrapped = fk::WriteMemoryWorker; Args = {fk::HttpServerConnection*&}] 0
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::ExportDataWorker; ConcreteWrapped = fk::ExportDataWorker; Args = {}] 0
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::StartupWorker; ConcreteWrapped = fk::StartupWorker; Args = {}] 0
worker.h:20:13:fk::TaskWorker::~TaskWorker() 0
worker.h:20:13:fk::TaskWorker::~TaskWorker() 0
worker.h:20:13:fk::TaskWorker::~TaskWorker() 0
worker.h:20:13:fk::TaskWorker::~TaskWorker() 0
worker.h:20:13:fk::TaskWorker::~TaskWorker() 0
worker.h:20:13:fk::TaskWorker::~TaskWorker() 0
worker.h:20:13:fk::TaskWorker::~TaskWorker() 0
worker.h:20:13:fk::TaskWorker::~TaskWorker() 0
worker.h:20:13:fk::TaskWorker::~TaskWorker() 0
worker.h:20:13:fk::TaskWorker::~TaskWorker() 0
worker.h:20:13:fk::TaskWorker::~TaskWorker() 0
worker.h:26:21:virtual uint8_t fk::TaskWorker::priority() const 0
worker.h:26:21:virtual uint8_t fk::TaskWorker::priority() const 0
worker.h:26:21:virtual uint8_t fk::TaskWorker::priority() const 0
worker.h:26:21:virtual uint8_t fk::TaskWorker::priority() const 0
worker.h:26:21:virtual uint8_t fk::TaskWorker::priority() const 0
worker.h:26:21:virtual uint8_t fk::TaskWorker::priority() const 0
worker.h:26:21:virtual uint8_t fk::TaskWorker::priority() const 0
worker.h:26:21:virtual uint8_t fk::TaskWorker::priority() const 0
worker.h:26:21:virtual uint8_t fk::TaskWorker::priority() const 0
worker.h:26:21:virtual uint8_t fk::TaskWorker::priority() const 0
worker.h:26:21:virtual uint8_t fk::TaskWorker::priority() const 0
worker.h:30:25:virtual const char* fk::TaskWorker::name() const 0
worker.h:30:25:virtual const char* fk::TaskWorker::name() const 0
worker.h:30:25:virtual const char* fk::TaskWorker::name() const 0
worker.h:30:25:virtual const char* fk::TaskWorker::name() const 0
worker.h:30:25:virtual const char* fk::TaskWorker::name() const 0
worker.h:30:25:virtual const char* fk::TaskWorker::name() const 0
worker.h:30:25:virtual const char* fk::TaskWorker::name() const 0
worker.h:30:25:virtual const char* fk::TaskWorker::name() const 0
worker.h:30:25:virtual const char* fk::TaskWorker::name() const 0
worker.h:30:25:virtual const char* fk::TaskWorker::name() const 0
worker.h:30:25:virtual const char* fk::TaskWorker::name() const 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:46:13:fk::Worker::~Worker() 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:52:21:virtual uint8_t fk::Worker::priority() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:56:25:virtual const char* fk::Worker::name() const 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::BackupWorker; ConcreteWrapped = fk::BackupWorker; Args = {}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::ConfigureModuleWorker; ConcreteWrapped = fk::ConfigureModuleWorker; Args = {fk::ModulePosition&, ModuleHeader&}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::ConfigureModuleWorker; ConcreteWrapped = fk::ConfigureModuleWorker; Args = {fk::ModulePosition&}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::DownloadFileWorker; ConcreteWrapped = fk::DownloadFileWorker; Args = {fk::HttpServerConnection*&}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::DownloadFirmwareWorker; ConcreteWrapped = fk::DownloadFirmwareWorker; Args = {}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::DownloadLogsWorker; ConcreteWrapped = fk::DownloadLogsWorker; Args = {fk::HttpServerConnection*&}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::DownloadWorker; ConcreteWrapped = fk::DownloadWorker; Args = {fk::HttpServerConnection*&, unsigned char&}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::DumpFlashMemoryWorker; ConcreteWrapped = fk::DumpFlashMemoryWorker; Args = {}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::ExportDataWorker; ConcreteWrapped = fk::ExportDataWorker; Args = {}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::FactoryWipeWorker; ConcreteWrapped = fk::FactoryWipeWorker; Args = {bool}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::FactoryWipeWorker; ConcreteWrapped = fk::FactoryWipeWorker; Args = {bool}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::FsckWorker; ConcreteWrapped = fk::FsckWorker; Args = {}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::LoraRangingWorker; ConcreteWrapped = fk::LoraRangingWorker; Args = {bool}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::LoraWorker; ConcreteWrapped = fk::LoraWorker; Args = {}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::PollSensorsWorker; ConcreteWrapped = fk::PollSensorsWorker; Args = {}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::ReadingsWorker; ConcreteWrapped = fk::ReadingsWorker; Args = {bool, bool, fk::ModulePowerState}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::ReadingsWorker; ConcreteWrapped = fk::ReadingsWorker; Args = {bool, bool, fk::ModulePowerState}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::ReceiveFirmwareWorker; ConcreteWrapped = fk::ReceiveFirmwareWorker; Args = {fk::HttpServerConnection*&}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::RefreshModulesWorker; ConcreteWrapped = fk::RefreshModulesWorker; Args = {}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::SelfCheckWorker; ConcreteWrapped = fk::SelfCheckWorker; Args = {fk::DisplaySelfCheckCallbacks&}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::ServiceModulesWorker; ConcreteWrapped = fk::ServiceModulesWorker; Args = {}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::StartupWorker; ConcreteWrapped = fk::StartupWorker; Args = {}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::UpgradeFirmwareFromSdWorker; ConcreteWrapped = fk::UpgradeFirmwareFromSdWorker; Args = {fk::SdCardFirmware&}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::UploadDataWorker; ConcreteWrapped = fk::UploadDataWorker; Args = {bool, bool}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::UploadDataWorker; ConcreteWrapped = fk::UploadDataWorker; Args = {}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::WifiToggleWorker; ConcreteWrapped = fk::WifiToggleWorker; Args = {fk::WifiToggleWorker::DesiredState}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::WifiToggleWorker; ConcreteWrapped = fk::WifiToggleWorker; Args = {}] 0
worker.h:91:11:fk::Pool* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::pool() [with Wrapped = fk::WriteMemoryWorker; ConcreteWrapped = fk::WriteMemoryWorker; Args = {fk::HttpServerConnection*&}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::BackupWorker; ConcreteWrapped = fk::BackupWorker; Args = {}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::ConfigureModuleWorker; ConcreteWrapped = fk::ConfigureModuleWorker; Args = {fk::ModulePosition&, ModuleHeader&}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::ConfigureModuleWorker; ConcreteWrapped = fk::ConfigureModuleWorker; Args = {fk::ModulePosition&}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::DownloadFileWorker; ConcreteWrapped = fk::DownloadFileWorker; Args = {fk::HttpServerConnection*&}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::DownloadFirmwareWorker; ConcreteWrapped = fk::DownloadFirmwareWorker; Args = {}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::DownloadLogsWorker; ConcreteWrapped = fk::DownloadLogsWorker; Args = {fk::HttpServerConnection*&}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::DownloadWorker; ConcreteWrapped = fk::DownloadWorker; Args = {fk::HttpServerConnection*&, unsigned char&}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::DumpFlashMemoryWorker; ConcreteWrapped = fk::DumpFlashMemoryWorker; Args = {}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::ExportDataWorker; ConcreteWrapped = fk::ExportDataWorker; Args = {}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::FactoryWipeWorker; ConcreteWrapped = fk::FactoryWipeWorker; Args = {bool}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::FactoryWipeWorker; ConcreteWrapped = fk::FactoryWipeWorker; Args = {bool}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::FsckWorker; ConcreteWrapped = fk::FsckWorker; Args = {}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::LoraRangingWorker; ConcreteWrapped = fk::LoraRangingWorker; Args = {bool}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::LoraWorker; ConcreteWrapped = fk::LoraWorker; Args = {}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::PollSensorsWorker; ConcreteWrapped = fk::PollSensorsWorker; Args = {}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::ReadingsWorker; ConcreteWrapped = fk::ReadingsWorker; Args = {bool, bool, fk::ModulePowerState}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::ReadingsWorker; ConcreteWrapped = fk::ReadingsWorker; Args = {bool, bool, fk::ModulePowerState}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::ReceiveFirmwareWorker; ConcreteWrapped = fk::ReceiveFirmwareWorker; Args = {fk::HttpServerConnection*&}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::RefreshModulesWorker; ConcreteWrapped = fk::RefreshModulesWorker; Args = {}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::SelfCheckWorker; ConcreteWrapped = fk::SelfCheckWorker; Args = {fk::DisplaySelfCheckCallbacks&}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::ServiceModulesWorker; ConcreteWrapped = fk::ServiceModulesWorker; Args = {}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::StartupWorker; ConcreteWrapped = fk::StartupWorker; Args = {}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::UpgradeFirmwareFromSdWorker; ConcreteWrapped = fk::UpgradeFirmwareFromSdWorker; Args = {fk::SdCardFirmware&}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::UploadDataWorker; ConcreteWrapped = fk::UploadDataWorker; Args = {bool, bool}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::UploadDataWorker; ConcreteWrapped = fk::UploadDataWorker; Args = {}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::WifiToggleWorker; ConcreteWrapped = fk::WifiToggleWorker; Args = {fk::WifiToggleWorker::DesiredState}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::WifiToggleWorker; ConcreteWrapped = fk::WifiToggleWorker; Args = {}] 0
worker.h:95:14:Wrapped* fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::get() [with Wrapped = fk::WriteMemoryWorker; ConcreteWrapped = fk::WriteMemoryWorker; Args = {fk::HttpServerConnection*&}] 0
write_memory_handler.cpp:15:1:fk::WriteMemoryWorker::WriteMemoryWorker(fk::HttpServerConnection*) 0
write_memory_handler.h:14:7:fk::WriteMemoryWorker::~WriteMemoryWorker() 0
write_memory_handler.h:24:13:virtual uint8_t fk::WriteMemoryWorker::priority() const 0
write_memory_handler.h:28:17:virtual const char* fk::WriteMemoryWorker::name() const 0
service.c:272:13:os_mutex_release 4
service.c:276:13:os_semaphore_acquire 4
service.c:280:13:os_semaphore_release 4
service.c:294:13:os_rwlock_acquire_read 4
service.c:306:13:os_rwlock_release 4
service.c:310:13:os_signal 4
service.c:314:13:os_signal_check 4
Adafruit_FlashTransport_QSPI_SAMD.cpp:63:6:virtual void Adafruit_FlashTransport_QSPI::begin() 8
Adafruit_FlashTransport_SPI.cpp:28:1:Adafruit_FlashTransport_SPI::Adafruit_FlashTransport_SPI(uint8_t, SPIClass*) 8
Adafruit_FlashTransport_SPI.cpp:35:6:virtual void Adafruit_FlashTransport_SPI::begin() 8
Adafruit_SPIFlash.cpp:158:6:void Adafruit_SPIFlash::waitUntilReady() 8
Adafruit_SPIFlash.cpp:164:6:bool Adafruit_SPIFlash::writeEnable() 8
Adafruit_SPIFlash.cpp:191:6:bool Adafruit_SPIFlash::eraseChip() 8
FatFile.cpp:1017:6:bool FatFile::rmdir() 8
FatFile.cpp:82:8:dir_t* FatFile::cacheDirEntry(uint8_t) 8
FatFile.cpp:95:6:bool FatFile::close() 8
FatFile.h:573:8:bool FatFile::open(const char*, oflag_t) 8
FatFile.h:820:8:bool FatFile::seekEnd(int32_t) 8
FatFileLFN.cpp:28:9:static uint8_t FatFile::lfnChecksum(uint8_t*) 8
FatFilePrint.cpp:217:5:int FatFile::printField(uint16_t, char) 8
FatFilePrint.cpp:221:5:int FatFile::printField(int16_t, char) 8
FatFilePrint.cpp:230:5:int FatFile::printField(uint32_t, char) 8
FatFileSFN.cpp:28:6:bool FatFile::getSFN(char*) 8
FatVolume.h:310:8:5(BlockDriver*, uint32_t, const uint8_t*) 8
FatVolume.h:348:8:bool FatVolume::cacheSync() 8
FatVolume.h:348:8:bool FatVolume::cacheSync() 8
FatVolume.h:348:8:bool FatVolume::cacheSync() 8
FmtNumber.cpp:191:7:char* fmtDec(uint16_t, char*) 8
FmtNumber.cpp:370:7:char* fmtHex(uint32_t, char*) 8
IPAddress.cpp:100:6:bool IPAddress::operator==(const uint8_t*) const 8
MDNS.cpp:106:1:MDNS::MDNS(UDP&) 8
MDNS.cpp:127:1:MDNS::~MDNS() 8
MDNS.cpp:1453:10:uint8_t* MDNS::_findFirstDotFromRight(const uint8_t*) 8
MDNS.cpp:208:6:void MDNS::_cancelQuery(uint8_t) 8
Print.cpp:109:8:size_t Print::print(const Printable&) 8
Print.cpp:114:8:size_t Print::println() 8
Print.cpp:40:8:size_t Print::print(const __FlashStringHelper*) 8
Print.cpp:45:8:size_t Print::print(const String&) 8
Print.cpp:50:8:size_t Print::print(const char*) 8
Print.cpp:55:8:size_t Print::print(char) 8
Print.cpp:91:8:4(long unsigned int) 8
SEGGER_RTT.c:1063:10:SEGGER_RTT_PutCharSkipNoLock 8
SEGGER_RTT.c:1255:5:SEGGER_RTT_WaitKey 8
SEGGER_RTT.c:1278:5:SEGGER_RTT_HasKey 8
SEGGER_RTT.c:276:13:_DoInit 8
SEGGER_RTT.c:707:10:SEGGER_RTT_Read 8
SEGGER_RTT_printf.c:476:13:write_buffer 8
SERCOM.cpp:106:6:void SERCOM::initPads(SercomUartTXPad, SercomRXPad) 8
SPI.cpp:115:6:void SPIClass::notUsingInterrupt(int) 8
SPI.cpp:135:6:void SPIClass::beginTransaction(SPISettings) 8
SPI.cpp:79:6:void SPIClass::end() 8
SPI.cpp:95:6:void SPIClass::usingInterrupt(int) 8
SPI.h:50:3:SPISettings::SPISettings(uint32_t, BitOrder, uint8_t) 8
SdSpiCard.cpp:568:6:bool SdSpiCard::readStart(uint32_t) 8
SdSpiCard.cpp:610:6:void SdSpiCard::spiStop() 8
SdSpiCard.cpp:619:6:bool SdSpiCard::readStop() 8
SdSpiCard.cpp:750:6:bool SdSpiCard::writeStart(uint32_t) 8
StdioStream.cpp:237:8:size_t StdioStream::fwrite(const void*, size_t, size_t) 8
StdioStream.cpp:395:6:bool StdioStream::rewind() 8
StdioStream.cpp:406:5:int StdioStream::ungetc(int) 8
StdioStream.cpp:426:5:int StdioStream::fillGet() 8
StdioStream.h:272:7:int StdioStream::fputc(int) 8
Stream.cpp:31:5:int Stream::timedRead() 8
Stream.cpp:43:5:int Stream::timedPeek() 8
TinyGPS.cpp:103:6:void TinyGPS::stats(long unsigned int*, short unsigned int*, short unsigned int*) 8
TinyGPS.cpp:288:5:int TinyGPS::gpsstrcmp(const char*, const char*) 8
TinyGPS.cpp:29:1:TinyGPS::TinyGPS() 8
TinyGPS.cpp:394:7:float TinyGPS::f_altitude() 8
TinyGPS.cpp:399:7:float TinyGPS::f_course() 8
TinyGPS.cpp:404:7:float TinyGPS::f_speed_knots() 8
TinyGPS.cpp:409:7:float TinyGPS::f_speed_mph() 8
TinyGPS.cpp:415:7:float TinyGPS::f_speed_mps() 8
TinyGPS.cpp:421:7:float TinyGPS::f_speed_kmph() 8
Tone.cpp:180:6:void noTone(uint32_t) 8
Tone.cpp:191:6:void Tone_Handler() 8
U8g2lib.cpp:45:6:void u8g2_print_callback(const char*) 8
U8x8lib.cpp:1302:20:uint8_t u8x8_byte_arduino_hw_i2c(u8x8_t*, uint8_t, uint8_t, void*) 8
U8x8lib.cpp:1348:20:uint8_t u8x8_byte_arduino_2nd_hw_i2c(u8x8_t*, uint8_t, uint8_t, void*) 8
U8x8lib.cpp:709:13:void arduino_hw_spi_3w_flush() 8
Uart.cpp:129:5:virtual int Uart::available() 8
Uart.cpp:134:5:virtual int Uart::availableForWrite() 8
Uart.cpp:43:6:virtual void Uart::begin(long unsigned int) 8
Uart.cpp:77:6:virtual void Uart::end() 8
Uart.cpp:84:6:virtual void Uart::flush() 8
Uart.cpp:91:6:void Uart::IrqHandler() 8
WMath.cpp:33:13:long int random(long int) 8
WMath.cpp:43:13:long int random(long int, long int) 8
WMath.cpp:55:13:long int map(long int, long int, long int, long int, long int) 8
WString.cpp:124:1:String::~String() 8
WString.cpp:140:6:void String::invalidate() 8
WString.cpp:147:15:unsigned char String::reserve(unsigned int) 8
WString.cpp:216:10:String& String::operator=(const String&) 8
WString.cpp:227:10:String& String::operator=(String&&) 8
WString.cpp:233:10:String& String::operator=(StringSumHelper&&) 8
WString.cpp:355:19:StringSumHelper& operator+(const StringSumHelper&, const String&) 8
WString.cpp:369:19:StringSumHelper& operator+(const StringSumHelper&, char) 8
WString.cpp:36:1:String::String(const String&) 8
WString.cpp:376:19:StringSumHelper& operator+(const StringSumHelper&, unsigned char) 8
WString.cpp:383:19:StringSumHelper& operator+(const StringSumHelper&, int) 8
WString.cpp:390:19:StringSumHelper& operator+(const StringSumHelper&, unsigned int) 8
WString.cpp:397:19:StringSumHelper& operator+(const StringSumHelper&, long int) 8
WString.cpp:404:19:StringSumHelper& operator+(const StringSumHelper&, long unsigned int) 8
WString.cpp:411:19:StringSumHelper& operator+(const StringSumHelper&, float) 8
WString.cpp:418:19:StringSumHelper& operator+(const StringSumHelper&, double) 8
WString.cpp:425:19:StringSumHelper& operator+(const StringSumHelper&, const __FlashStringHelper*) 8
WString.cpp:42:1:String::String(const __FlashStringHelper*) 8
WString.cpp:446:15:unsigned char String::equals(const String&) const 8
WString.cpp:451:15:unsigned char String::equals(const char*) const 8
WString.cpp:458:15:unsigned char String::operator<(const String&) const 8
WString.cpp:463:15:unsigned char String::operator>(const String&) const 8
WString.cpp:468:15:unsigned char String::operator<=(const String&) const 8
WString.cpp:473:15:unsigned char String::operator>=(const String&) const 8
WString.cpp:497:15:unsigned char String::startsWith(const String&, unsigned int) const 8
WString.cpp:49:1:String::String(String&&) 8
WString.cpp:503:15:unsigned char String::endsWith(const String&) const 8
WString.cpp:54:1:String::String(StringSumHelper&&) 8
WString.cpp:561:5:int String::indexOf(char, unsigned int) const 8
WString.cpp:574:5:int String::indexOf(const String&, unsigned int) const 8
WString.cpp:705:6:void String::toLowerCase() 8
WString.cpp:713:6:void String::toUpperCase() 8
WString.cpp:743:7:float String::toFloat() const 8
WatchdogSAMD.cpp:196:5:int WatchdogSAMD::sleep(int) 8
WiFi.cpp:1009:9:uint8_t WiFiClass::status() 8
WiFi.cpp:647:10:uint32_t WiFiClass::provisioned() 8
WiFi.cpp:694:6:void WiFiClass::hostname(const char*) 8
WiFi.cpp:703:6:void WiFiClass::disconnect() 8
WiFi.cpp:800:10:uint8_t* WiFiClass::APClientMacAddress(uint8_t*) 8
WiFiClient.cpp:163:5:virtual int WiFiClient::peek() 8
WiFiClient.cpp:176:6:virtual void WiFiClient::stop() 8
WiFiMDNSResponder.cpp:116:6:void WiFiMDNSResponder::poll() 8
WiFiMDNSResponder.cpp:82:1:WiFiMDNSResponder::WiFiMDNSResponder() 8
WiFiMDNSResponder.cpp:87:1:WiFiMDNSResponder::~WiFiMDNSResponder() 8
WiFiSSLClient.cpp:22:1:WiFiSSLClient::WiFiSSLClient() 8
WiFiSSLClient.cpp:27:1:WiFiSSLClient::WiFiSSLClient(uint8_t) 8
WiFiSocket.cpp:144:7:sint8 WiFiSocketClass::setopt(SOCKET, uint8, uint8, const void*, uint16) 8
WiFiSocket.cpp:288:11:IPAddress WiFiSocketClass::remoteIP(SOCKET) 8
WiFiSocket.cpp:53:6:bool WifiCallbacksBusy(uint32_t) 8
WiFiSocket.cpp:70:1:virtual WiFiSocketClass::~WiFiSocketClass() 8
WiFiSocket.cpp:74:8:SOCKET WiFiSocketClass::create(uint16, uint8, uint8) 8
WiFiUdp.cpp:106:6:virtual void WiFiUDP::stop() 8
WiFiUdp.cpp:171:5:virtual int WiFiUDP::parsePacket() 8
WiFiUdp.cpp:223:5:virtual int WiFiUDP::peek() 8
WiFiUdp.h:81:15:virtual int WiFiUDP::read(char*, size_t) 8
Wire.cpp:154:8:virtual size_t TwoWire::write(uint8_t) 8
Wire.cpp:186:5:virtual int TwoWire::read() 8
Wire.cpp:305:3:cpp) 8
ads_1219.cpp:135:6:bool fk::Ads1219::start() 8
ads_1219.cpp:38:1:virtual fk::Ads1219::~Ads1219() 8
ads_1219.cpp:45:6:bool fk::Ads1219::set_voltage_reference(fk::Ads1219VoltageReference) 8
arduino.cpp:55:10:uint32_t osi_platform_delay(uint32_t) 8
arduino.cpp:66:9:int32_t sysTickHook() 8
atlas_api_reply.cpp:5:1:fk::AtlasApiReply::AtlasApiReply(fk::Pool&) 8
atlas_module.cpp:14:1:virtual fk::AtlasModule::~AtlasModule() 8
backup_worker.h:10:7:virtual fk::BackupWorker::~BackupWorker() 8
bad_blocks.cpp:21:1:virtual fk::BadBlocks::~BadBlocks() 8
blake2b.cpp:110:1:BLAKE2b::BLAKE2b() 8
blake2b.cpp:119:1:BLAKE2b::~BLAKE2b() 8
blake2b.cpp:119:1:virtual BLAKE2b::~BLAKE2b() 8
blake2b.cpp:268:6:void BLAKE2b::clear() 8
board.c:177:6:board_initialize 8
board.c:53:6:memory_initialize 8
board.cpp:114:20:virtual fk::TwoWireWrapper fk::AcquireBusI2cRadio::acquire() 8
board.cpp:121:20:virtual fk::TwoWireWrapper fk::AcquireBusI2cModule::acquire() 8
board.cpp:147:1:fk::EepromLock::EepromLock(fk::EepromLock&&) 8
board.cpp:150:1:fk::EepromLock::~EepromLock() 8
board.cpp:150:1:virtual fk::EepromLock::~EepromLock() 8
buttons.cpp:12:1:fk::Button::Button(const char*, uint8_t) 8
caching_memory.cpp:20:1:fk::CachingMemory::CachingMemory(fk::DataMemory*, fk::PageCache*) 8
caching_memory.cpp:23:6:virtual bool fk::CachingMemory::begin() 8
caching_memory.cpp:35:15:virtual fk::FlashGeometry fk::CachingMemory::geometry() const 8
circular_buffer.h:124:7:T fk::circular_buffer<T>::get() [with T = char] 8
clock.cpp:229:10:fk::DateTime fk::CoreClock::now() 8
clock.cpp:237:10:fk::DateTime fk::CoreClock::get_external() 8
clock.cpp:256:6:void fk::CoreClock::clear_timestamp_registers() 8
clock.cpp:353:10:uint32_t fk::clock_adjust_maybe(uint32_t) 8
clock.cpp:362:1:cpp) 8
clock.cpp:65:1:fk::CoreClock::CoreClock() 8
clock.cpp:71:6:bool fk::CoreClock::begin() 8
clock.h:13:7:fk::CoreClock::~CoreClock() 8
compare_banks_worker.h:7:7:virtual fk::CompareBanksWorker::~CompareBanksWorker() 8
configure.cpp:34:6:bool fk::ModuleConfigurer::configure(fk::ModulePosition, const uint8_t*, size_t) 8
configure_module_worker.h:8:7:virtual fk::ConfigureModuleWorker::~ConfigureModuleWorker() 8
connection.cpp:11:1:fk::Connection::~Connection() 8
connection.cpp:11:1:virtual fk::Connection::~Connection() 8
connection.cpp:15:6:virtual bool fk::Connection::service() 8
connection.cpp:62:9:int32_t fk::Connection::close() 8
contexts.cpp:16:15:fk::ModuleContext fk::ScanningContext::module(fk::ModulePosition, fk::Pool&) 8
contexts.cpp:24:1:fk::ModuleContext::ModuleContext(fk::ScanningContext&, fk::ModulePosition, fk::Pool&) 8
contexts.cpp:27:6:bool fk::ModuleContext::open() 8
contexts.cpp:35:6:bool fk::ModuleContext::power_cycle() 8
contexts.cpp:6:1:fk::ScanningContext::ScanningContext(fk::ModMux*, const fk::GpsState*, fk::TwoWireWrapper&, fk::Pool&) 8
contexts.cpp:9:1:fk::ScanningContext::ScanningContext(fk::ModMux*, const fk::GpsState*, fk::TwoWireWrapper&, fk::ModulePowerState, fk::Pool&) 8
cortex_handlers.c:465:6:Reset_Handler 8
cortex_handlers.c:502:6:SysTick_Handler 8
cortex_handlers.c:512:6:USB_0_Handler 8
cortex_handlers.c:517:6:USB_1_Handler 8
cortex_handlers.c:522:6:USB_2_Handler 8
cortex_handlers.c:527:6:USB_3_Handler 8
cpool.cpp:15:1:virtual fk::ConnectionPool::~ConnectionPool() 8
crc32.cpp:32:10:uint32_t phylum::crc32_checksum(const char*) 8
data_chain.h:41:13:phylum::data_chain::~data_chain() 8
data_chain.h:41:13:phylum::data_chain::~data_chain() 8
data_chain.h:41:13:phylum::data_chain::~data_chain() 8
data_chain.h:41:13:phylum::data_chain::~data_chain() 8
data_chain.h:41:13:virtual phylum::data_chain::~data_chain() 8
data_chain.h:41:13:virtual phylum::data_chain::~data_chain() 8
data_chain.h:41:13:virtual phylum::data_chain::~data_chain() 8
data_chain.h:41:13:virtual phylum::data_chain::~data_chain() 8
data_record.cpp:14:27:const fk_data_DataRecord& fk::DataRecord::record() 8
debug.cpp:21:6:void fk::task_handler_debug(void*) 8
debug_connection.cpp:11:1:fk::DebugServerConnection::~DebugServerConnection() 8
debug_connection.cpp:11:1:virtual fk::DebugServerConnection::~DebugServerConnection() 8
debug_udp.cpp:107:5:virtual int fk::DebugUDP::beginPacket(const char*, uint16_t) 8
debug_udp.cpp:112:5:virtual int fk::DebugUDP::endPacket() 8
debug_udp.cpp:153:5:virtual int fk::DebugUDP::available() 8
debug_udp.cpp:17:1:virtual fk::DebugUDP::~DebugUDP() 8
debug_udp.h:30:13:virtual uint8_t fk::DebugUDP::begin(uint16_t) 8
debug_udp.h:43:9:virtual int fk::DebugUDP::read(char*, size_t) 8
debug_udp.h:46:10:virtual void fk::DebugUDP::flush() 8
debug_udp.h:50:9:virtual int fk::DebugUDP::read() 8
debug_udp.h:54:9:virtual int fk::DebugUDP::peek() 8
debug_udp.h:57:15:virtual IPAddress fk::DebugUDP::remoteIP() 8
debug_udp.h:60:14:virtual uint16_t fk::DebugUDP::remotePort() 8
debug_udp.h:63:10:virtual void fk::DebugUDP::stop() 8
debugging.cpp:111:13:const char* fk::fk_debug_mode() 8
debugging.cpp:27:6:void __wrap_free(void*) 8
debugging.cpp:46:9:int32_t dbg_stack_highwater(uint32_t*, size_t) 8
debugging.cpp:56:6:void __cyg_profile_func_enter(void*, void*) 8
deep_sleep.cpp:55:6:bool fk::DeepSleep::once() 8
delimited_buffer.h:146:10:bool phylum::delimited_buffer::room_for() [with T = phylum::tree_node_t<long unsigned int, phylum::attribute_value_t<256u>, 15u>] 8
delimited_buffer.h:146:10:bool phylum::delimited_buffer::room_for() [with T = phylum::tree_node_t<long unsigned int, phylum::dirtree_tree_value_t<128u>, 4u>] 8
delimited_buffer.h:239:12:size_t phylum::delimited_buffer::size() const 8
delimited_buffer.h:244:12:size_t phylum::delimited_buffer::position() const 8
delimited_buffer.h:244:12:size_t phylum::delimited_buffer::position() const 8
delimited_buffer.h:264:12:size_t phylum::delimited_buffer::available() const 8
delimited_buffer.h:264:12:size_t phylum::delimited_buffer::available() const 8
delimited_buffer.h:274:10:void phylum::delimited_buffer::rewind() 8
delimited_buffer.h:28:12:size_t phylum::record_ptr::start_of_record() const 8
delimited_buffer.h:84:13:phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:virtual phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:virtual phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:virtual phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:virtual phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:virtual phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:virtual phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:virtual phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:virtual phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:virtual phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:virtual phylum::delimited_buffer::~delimited_buffer() 8
delimited_buffer.h:84:13:virtual phylum::delimited_buffer::~delimited_buffer() 8
dhara_map.cpp:171:9:virtual int32_t phylum::dhara_sector_map::clear() 8
dhara_map.cpp:22:1:phylum::dhara_sector_map::dhara_sector_map(phylum::working_buffers&, phylum::flash_memory&) 8
dhara_map.cpp:25:1:phylum::dhara_sector_map::~dhara_sector_map() 8
dhara_map.cpp:25:1:virtual phylum::dhara_sector_map::~dhara_sector_map() 8
diagnostics_module.cpp:35:1:virtual fk::DiagnosticsModule::~DiagnosticsModule() 8
directory_chain.h:20:13:phylum::directory_chain::~directory_chain() 8
directory_chain.h:20:13:virtual phylum::directory_chain::~directory_chain() 8
directory_tree.cpp:15:9:virtual int32_t phylum::directory_tree::format() 8
directory_tree.h:58:13:virtual phylum::directory_tree::~directory_tree() 8
display.cpp:49:13:virtual fk::MainViewController::~MainViewController() 8
display.cpp:81:10:virtual void fk::MainViewController::show_name() 8
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::MenuView(fk::ViewController*, fk::Pool&)::__lambda8] 8
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_confirmation_menu()::__lambda29] 8
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_confirmation_menu()::__lambda30] 8
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_info_menu()::__lambda10] 8
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_info_menu()::__lambda11] 8
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_info_menu()::__lambda9] 8
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_main_menu()::__lambda64] 8
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_module_menu()::__lambda25] 8
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_module_menu()::__lambda26] 8
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_schedules_menu()::__lambda70] 8
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_tools_menu()::__lambda35] 8
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_tools_menu()::__lambda37] 8
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_tools_menu()::__lambda44] 8
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_tools_menu()::__lambda46] 8
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_tools_menu()::__lambda50] 8
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_tools_menu()::__lambda51] 8
display_views.h:46:18:virtual void fk::DisplayView::external(fk::ViewController*) 8
display_views.h:46:18:virtual void fk::DisplayView::external(fk::ViewController*) 8
display_views.h:46:18:virtual void fk::DisplayView::external(fk::ViewController*) 8
display_views.h:46:18:virtual void fk::DisplayView::external(fk::ViewController*) 8
display_views.h:46:18:virtual void fk::DisplayView::external(fk::ViewController*) 8
display_views.h:46:18:virtual void fk::DisplayView::external(fk::ViewController*) 8
display_views.h:46:18:virtual void fk::DisplayView::external(fk::ViewController*) 8
display_views.h:46:18:virtual void fk::DisplayView::external(fk::ViewController*) 8
display_views.h:46:18:virtual void fk::DisplayView::external(fk::ViewController*) 8
display_views.h:50:18:virtual void fk::DisplayView::up(fk::ViewController*) 8
display_views.h:50:18:virtual void fk::DisplayView::up(fk::ViewController*) 8
display_views.h:50:18:virtual void fk::DisplayView::up(fk::ViewController*) 8
display_views.h:50:18:virtual void fk::DisplayView::up(fk::ViewController*) 8
display_views.h:50:18:virtual void fk::DisplayView::up(fk::ViewController*) 8
display_views.h:50:18:virtual void fk::DisplayView::up(fk::ViewController*) 8
display_views.h:54:18:virtual void fk::DisplayView::down(fk::ViewController*) 8
display_views.h:54:18:virtual void fk::DisplayView::down(fk::ViewController*) 8
display_views.h:54:18:virtual void fk::DisplayView::down(fk::ViewController*) 8
display_views.h:54:18:virtual void fk::DisplayView::down(fk::ViewController*) 8
display_views.h:54:18:virtual void fk::DisplayView::down(fk::ViewController*) 8
display_views.h:54:18:virtual void fk::DisplayView::down(fk::ViewController*) 8
display_views.h:58:18:virtual void fk::DisplayView::enter(fk::ViewController*) 8
display_views.h:58:18:virtual void fk::DisplayView::enter(fk::ViewController*) 8
display_views.h:58:18:virtual void fk::DisplayView::enter(fk::ViewController*) 8
display_views.h:58:18:virtual void fk::DisplayView::enter(fk::ViewController*) 8
display_views.h:58:18:virtual void fk::DisplayView::enter(fk::ViewController*) 8
display_views.h:58:18:virtual void fk::DisplayView::enter(fk::ViewController*) 8
distance_module.cpp:11:1:virtual fk::DistanceModule::~DistanceModule() 8
dns_message.cpp:176:9:int16_t fk::DNSReader::read_answers() 8
dns_message.cpp:180:9:int16_t fk::DNSReader::read_authorities() 8
dns_message.cpp:184:9:int16_t fk::DNSReader::read_additionals() 8
dns_message.cpp:24:1:fk::DNSReader::~DNSReader() 8
dns_message.cpp:24:1:virtual fk::DNSReader::~DNSReader() 8
dns_message.cpp:263:1:fk::DNSWriter::DNSWriter(fk::Pool*) 8
dns_message.cpp:328:17:fk::EncodedMessage* fk::DNSWriter::query_service_type(uint16_t, const char*) 8
download_firmware_worker.h:7:7:virtual fk::DownloadFirmwareWorker::~DownloadFirmwareWorker() 8
download_handler.cpp:13:1:fk::DownloadWorker::DownloadWorker(fk::HttpServerConnection*, uint8_t) 8
download_handler.h:21:7:virtual fk::DownloadWorker::~DownloadWorker() 8
driver_init.c:116:6:QUAD_SPI_0_init 8
driver_init.c:128:6:CALENDAR_0_init 8
driver_init.c:134:6:I2C_0_PORT_init 8
driver_init.c:166:6:I2C_0_init 8
driver_init.c:173:6:I2C_1_PORT_init 8
driver_init.c:205:6:I2C_1_init 8
driver_init.c:212:6:I2C_2_PORT_init 8
driver_init.c:244:6:I2C_2_init 8
driver_init.c:251:6:SPI_0_PORT_init 8
driver_init.c:300:6:SPI_0_init 8
driver_init.c:307:6:SPI_1_PORT_init 8
driver_init.c:356:6:SPI_1_init 8
driver_init.c:363:6:SPI_2_PORT_init 8
driver_init.c:412:6:SPI_2_init 8
driver_init.c:442:6:RAND_0_init 8
driver_init.c:453:6:WDT_0_init 8
driver_init.c:459:6:system_init 8
driver_init.c:87:6:HASH_ALGORITHM_0_init 8
driver_init.c:99:6:FLASH_0_init 8
dump_flash_memory_worker.h:8:7:virtual fk::DumpFlashMemoryWorker::~DumpFlashMemoryWorker() 8
eeprom.cpp:128:6:bool fk::ModuleEeprom::write_configuration(const uint8_t*, size_t) 8
eeprom.cpp:138:6:bool fk::ModuleEeprom::erase_configuration() 8
enable_module_power.cpp:20:6:bool fk::EnableModulePower::enabled_once() 8
enable_module_power.cpp:24:6:bool fk::EnableModulePower::always_enabled() 8
enable_module_power.cpp:28:6:bool fk::EnableModulePower::should_enable() 8
enable_module_power.cpp:7:1:fk::EnableModulePower::~EnableModulePower() 8
enable_module_power.cpp:7:1:virtual fk::EnableModulePower::~EnableModulePower() 8
export_data_worker.cpp:16:1:fk::ExportDataWorker::ExportDataWorker() 8
export_data_worker.h:11:7:fk::ExportDataWorker::~ExportDataWorker() 8
export_data_worker.h:11:7:fk::ExportDataWorker::~ExportDataWorker() 8
export_data_worker.h:11:7:virtual fk::ExportDataWorker::~ExportDataWorker() 8
export_data_worker.h:11:7:virtual fk::ExportDataWorker::~ExportDataWorker() 8
external.c:56:9:fkb_same_header 8
external.c:73:9:fkb_has_valid_signature 8
factory_wipe.cpp:12:1:fk::FactoryWipe::FactoryWipe(fk::Display*, fk::Buttons*, fk::Storage*) 8
factory_wipe.cpp:15:6:bool fk::FactoryWipe::wipe(fk::ProgressCallbacks*) 8
factory_wipe_worker.h:7:7:virtual fk::FactoryWipeWorker::~FactoryWipeWorker() 8
file.cpp:47:1:fk::File::~File() 8
file.cpp:47:1:virtual fk::File::~File() 8
file.cpp:71:15:fk::FlashGeometry fk::File::geometry() const 8
file.cpp:740:6:void fk::File::update() 8
file.cpp:747:13:bool fk::write_callback(pb_ostream_t*, const uint8_t*, size_t) 8
file.cpp:756:13:bool fk::read_callback(pb_istream_t*, uint8_t*, size_t) 8
file.cpp:769:14:pb_istream_t fk::pb_istream_from_file(fk::File*, size_t) 8
file.cpp:85:6:bool fk::File::beginning_of_record() 8
file_appender.cpp:10:1:phylum::file_appender::~file_appender() 8
file_appender.cpp:10:1:virtual phylum::file_appender::~file_appender() 8
file_appender.cpp:13:8:size_t phylum::file_appender::visited_sectors() 8
file_handler.h:18:7:virtual fk::DownloadFileWorker::~DownloadFileWorker() 8
file_ops_darwin.cpp:128:1:fk::darwin::FileReader::FileReader(fk::Storage&, fk::FileNumber, fk::Pool&) 8
file_ops_darwin.cpp:172:9:virtual int32_t fk::darwin::FileReader::get_file_size(size_t&) 8
file_ops_phylum.cpp:28:9:virtual int32_t fk::PhylumFlashMemory::erase(uint32_t, uint32_t) 8
file_ops_phylum.cpp:40:9:virtual int32_t fk::PhylumFlashMemory::copy_page(uint32_t, uint32_t, size_t) 8
file_reader.cpp:10:1:phylum::file_reader::~file_reader() 8
file_reader.cpp:10:1:virtual phylum::file_reader::~file_reader() 8
flash.c:14:9:bl_flash_initialize 8
flash.cpp:17:1:fk::DataMemoryFlash::~DataMemoryFlash() 8
flash.cpp:17:1:virtual fk::DataMemoryFlash::~DataMemoryFlash() 8
flash.cpp:25:1:fk::FlashWriter::FlashWriter(fk::FlashMemory*, uint32_t) 8
flash.cpp:28:1:virtual fk::FlashWriter::~FlashWriter() 8
flash.cpp:71:9:virtual int32_t fk::Flash::read(uint32_t, uint8_t*, size_t) 8
flash.cpp:78:9:virtual int32_t fk::Flash::write(uint32_t, const uint8_t*, size_t) 8
flash.h:37:13:virtual int32_t fk::DataMemoryFlash::erase(uint32_t, size_t) 8
format_sd_card.cpp:270:10:uint32_t fk::FormatSdCard::volume_serial_number() 8
free_sectors_chain.cpp:154:9:virtual int32_t phylum::free_sectors_chain::seek_end_of_buffer(phylum::page_lock&) 8
free_sectors_chain.cpp:8:1:phylum::free_sectors_chain::~free_sectors_chain() 8
free_sectors_chain.cpp:8:1:virtual phylum::free_sectors_chain::~free_sectors_chain() 8
fsck_worker.h:7:7:virtual fk::FsckWorker::~FsckWorker() 8
functional:1931:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = fk::Process::run(fk::Pool&)::__lambda1] 8
functional:2027:5:std::_Function_base::~_Function_base() 8
functional:2027:5:std::_Function_base::~_Function_base() 8
functional:2027:5:std::_Function_base::~_Function_base() 8
functional:2027:5:std::_Function_base::~_Function_base() 8
functional:2027:5:std::_Function_base::~_Function_base() 8
functional:2027:5:std::_Function_base::~_Function_base() 8
functional:2027:5:std::_Function_base::~_Function_base() 8
functional:2027:5:std::_Function_base::~_Function_base() 8
functional:2027:5:std::_Function_base::~_Function_base() 8
functional:2027:5:std::_Function_base::~_Function_base() 8
functional:2027:5:std::_Function_base::~_Function_base() 8
functional:2027:5:std::_Function_base::~_Function_base() 8
functional:2054:7:) [with _Res = nonstd::optional_lite::optional<bool>; _Functor = fk::Process::run(fk::Pool&)::__lambda1; _ArgTypes = {const fkb_header_t*}] 8
functional:2069:7:) [with _Functor = std::_Bind<std::_Mem_fn<void (phylum::working_buffers::*)(const unsigned char*)>(phylum::working_buffers*, std::_Placeholder<1>)>; _ArgTypes = {const unsigned char*}] 8
functional:2069:7:) [with _Functor = std::_Bind<std::_Mem_fn<void (phylum::working_buffers::*)(const unsigned char*)>(phylum::working_buffers*, std::_Placeholder<1>)>; _ArgTypes = {const unsigned char*}] 8
functional:2069:7:) [with _Functor = std::_Bind<std::_Mem_fn<void (phylum::working_buffers::*)(const unsigned char*)>(phylum::working_buffers*, std::_Placeholder<1>)>; _ArgTypes = {const unsigned char*}] 8
functional:2459:5:) const [with _Res = void; _ArgTypes = {const unsigned char*}] 8
functional:2459:5:) const [with _Res = void; _ArgTypes = {const unsigned char*}] 8
functional:2459:5:) const [with _Res = void; _ArgTypes = {const unsigned char*}] 8
functional:2459:5:) const [with _Res = void; _ArgTypes = {const unsigned char*}] 8
functional:2459:5:) const [with _Res = void; _ArgTypes = {const unsigned char*}] 8
functional:2459:5:) const [with _Res = void; _ArgTypes = {const unsigned char*}] 8
functional:2459:5:) const [with _Res = void; _ArgTypes = {const unsigned char*}] 8
functional:2459:5:) const [with _Res = void; _ArgTypes = {const unsigned char*}] 8
functional:2459:5:) const [with _Res = void; _ArgTypes = {const unsigned char*}] 8
functional:2459:5:) const [with _Res = void; _ArgTypes = {const unsigned char*}] 8
gs_progress_callbacks.cpp:6:1:fk::GlobalStateProgressCallbacks::~GlobalStateProgressCallbacks() 8
gs_progress_callbacks.cpp:6:1:virtual fk::GlobalStateProgressCallbacks::~GlobalStateProgressCallbacks() 8
hal_aes_sync.c:116:9:aes_sync_cbc_crypt 8
hal_aes_sync.c:262:9:aes_sync_cfb8_crypt 8
hal_aes_sync.c:356:9:aes_sync_gcm_crypt_and_tag 8
hal_aes_sync.c:400:9:aes_sync_gcm_start 8
hal_aes_sync.c:431:9:aes_sync_ccm_crypt_and_tag 8
hal_calendar.c:443:9:calendar_init 8
hal_calendar.c:466:9:calendar_deinit 8
hal_calendar.c:482:9:calendar_enable 8
hal_calendar.c:494:9:calendar_disable 8
hal_delay.c:61:6:delay_us 8
hal_delay.c:69:6:delay_ms 8
hal_flash.c:176:9:flash_register_callback 8
hal_flash.c:295:13:flash_ready 8
hal_flash.c:308:13:flash_error 8
hal_flash.c:52:9:flash_init 8
hal_flash.c:72:9:flash_deinit 8
hal_i2c_m_sync.c:111:9:i2c_m_sync_deinit 8
hal_i2c_m_sync.c:91:9:i2c_m_sync_init 8
hal_io.c:50:9:io_write 8
hal_io.c:59:9:io_read 8
hal_rand_sync.c:89:9:rand_sync_read8 8
hal_sleep.c:55:5:sleep 8
hal_spi_m_sync.c:61:9:spi_m_sync_init 8
hal_timer.c:109:9:timer_set_clock_cycles_per_tick 8
hal_timer.c:173:9:timer_get_clock_cycles_in_tick 8
hal_timer.c:57:9:timer_init 8
hal_timer.c:70:9:timer_deinit 8
hal_timer.c:95:9:timer_stop 8
hal_usart_sync.c:114:9:usart_sync_set_flow_control 8
hal_usart_sync.c:126:9:usart_sync_set_baud_rate 8
hal_usart_sync.c:137:9:usart_sync_set_data_order 8
hal_usart_sync.c:148:9:usart_sync_set_mode 8
hal_usart_sync.c:159:9:usart_sync_set_parity 8
hal_usart_sync.c:170:9:usart_sync_set_stopbits 8
hal_usart_sync.c:181:9:usart_sync_set_character_size 8
hal_usart_sync.c:192:9:usart_sync_flow_control_status 8
hal_usart_sync.c:204:9:usart_sync_is_tx_empty 8
hal_usart_sync.c:213:9:usart_sync_is_rx_not_empty 8
hal_usart_sync.c:49:9:usart_sync_init 8
hal_usart_sync.c:67:9:usart_sync_deinit 8
hal_usart_sync.c:81:9:usart_sync_enable 8
hal_usart_sync.c:92:9:usart_sync_disable 8
hal_usb_device.c:274:9:usb_d_init 8
hal_usb_device.c:417:10:usb_d_ep_get_req 8
home_view.cpp:139:6:virtual void fk::HomeView::enter(fk::ViewController*) 8
hpl_aes.c:212:9:_aes_sync_set_key 8
hpl_aes.c:625:9:_aes_sync_gcm_update 8
hpl_aes.c:634:9:_aes_sync_gcm_finish 8
hpl_cmcc.c:272:9:_cmcc_invalidate_all 8
hpl_cmcc.c:48:9:_cmcc_init 8
hpl_icm.c:181:9:_sha_sync_sha1_process 8
hpl_icm.c:204:9:_sha_sync_sha256_process 8
hpl_init.c:53:6:_init_chip 8
hpl_nvmctrl.c:141:6:_flash_read 8
hpl_nvmctrl.c:229:6:_flash_erase 8
hpl_nvmctrl.c:389:13:_nvm_interrupt_handler 8
hpl_rtc.c:116:9:_calendar_enable 8
hpl_rtc.c:128:9:_calendar_disable 8
hpl_rtc.c:140:9:_calendar_set_counter 8
hpl_rtc.c:152:10:_calendar_get_counter 8
hpl_rtc.c:162:9:_calendar_set_comp 8
hpl_rtc.c:174:10:_calendar_get_comp 8
hpl_rtc.c:397:6:RTC_Handler 8
hpl_sercom.c:1054:9:_i2c_m_async_disable 8
hpl_sercom.c:1108:16:_sercom_get_irq_num 8
hpl_sercom.c:1147:9:_i2c_m_async_deinit 8
hpl_sercom.c:1271:9:_i2c_m_async_send_stop 8
hpl_sercom.c:1316:9:_i2c_m_sync_deinit 8
hpl_sercom.c:1343:9:_i2c_m_sync_disable 8
hpl_sercom.c:1527:9:_i2c_m_sync_send_stop 8
hpl_sercom.c:1737:9:_i2c_s_sync_deinit 8
hpl_sercom.c:1747:9:_i2c_s_async_deinit 8
hpl_sercom.c:1758:9:_i2c_s_sync_enable 8
hpl_sercom.c:1768:9:_i2c_s_async_enable 8
hpl_sercom.c:1778:9:_i2c_s_sync_disable 8
hpl_sercom.c:1788:9:_i2c_s_async_disable 8
hpl_sercom.c:2140:16:_spi_sync_enable 8
hpl_sercom.c:2174:16:_spi_sync_disable 8
hpl_sercom.c:222:6:_usart_sync_deinit 8
hpl_sercom.c:230:6:_usart_async_deinit 8
hpl_sercom.c:2425:9:_spi_m_async_deinit 8
hpl_sercom.c:2433:9:_spi_s_async_deinit 8
hpl_sercom.c:2441:9:_spi_m_sync_deinit 8
hpl_sercom.c:2446:9:_spi_s_sync_deinit 8
hpl_sercom.c:923:15:_get_i2cm_index 8
hpl_systick.c:89:6:_delay_cycles 8
hpl_tc.c:225:10:_timer_get_period 8
hpl_tc.c:242:6:_timer_is_started 8
hpl_tc.c:267:6:_timer_set_irq 8
hpl_tc.c:293:6:TC0_Handler 8
hpl_usb.c:1249:13:_usb_d_dev_handle_stall 8
hpl_usb.c:1443:9:_usb_d_dev_init 8
hpl_usb.c:1481:6:_usb_d_dev_deinit 8
hpl_usb.c:1564:6:_usb_d_dev_send_remotewakeup 8
hpl_usb.c:1573:16:_usb_d_dev_get_speed 8
hpl_usb.c:1854:13:_usb_d_dev_trans_done 8
hpl_wdt.c:261:9:_wdt_disable 8
hpl_wdt.c:77:9:_wdt_init 8
hpl_wdt.c:99:9:_wdt_deinit 8
hri_sercom_d51.h:2970:20:hri_sercomusart_get_CTRLA_ENABLE_bit 8
http_connection.cpp:15:1:fk::HttpConnection::~HttpConnection() 8
http_connection.cpp:15:1:virtual fk::HttpConnection::~HttpConnection() 8
http_connection.cpp:78:6:bool fk::HttpConnection::read_response() 8
http_connection.cpp:90:6:void fk::HttpConnection::close() 8
http_parser.c:2189:1:http_should_keep_alive 8
http_parser.c:2242:1:http_errno_name 8
http_parser.c:2248:1:http_errno_description 8
http_parser.c:2546:1:http_parser_pause 8
http_parser.c:494:1:parse_url_char 8
http_reply.cpp:23:6:bool fk::HttpReply::include_success(uint32_t, uint32_t) 8
http_server_connection.cpp:14:1:fk::HttpServerConnection::HttpServerConnection(fk::Pool*, fk::NetworkConnection*, uint32_t, fk::HttpRouter*) 8
http_server_connection.cpp:17:1:fk::HttpServerConnection::~HttpServerConnection() 8
http_server_connection.cpp:17:1:virtual fk::HttpServerConnection::~HttpServerConnection() 8
ina219.cpp:98:6:bool fk::Ina219::begin(bool) 8
integer_chain.cpp:5:9:virtual int32_t phylum::integer_chain::seek_end_of_buffer(phylum::page_lock&) 8
integer_chain.h:12:13:phylum::integer_chain::~integer_chain() 8
integer_chain.h:12:13:virtual phylum::integer_chain::~integer_chain() 8
io.cpp:120:13:bool fk::write_callback(pb_ostream_t*, const uint8_t*, size_t) 8
io.cpp:17:1:fk::BufferedWriter::~BufferedWriter() 8
io.cpp:17:1:virtual fk::BufferedWriter::~BufferedWriter() 8
io.cpp:61:9:int32_t fk::BufferedWriter::flush() 8
io.cpp:79:1:virtual fk::BufferedReader::~BufferedReader() 8
io.h:97:7:fk::StackBufferedWriter<128u>::~StackBufferedWriter() 8
io.h:97:7:fk::StackBufferedWriter<128u>::~StackBufferedWriter() 8
io.h:97:7:fk::StackBufferedWriter<128u>::~StackBufferedWriter() 8
io.h:97:7:fk::StackBufferedWriter<128u>::~StackBufferedWriter() 8
io.h:97:7:virtual fk::StackBufferedWriter<128u>::~StackBufferedWriter() 8
io.h:97:7:virtual fk::StackBufferedWriter<128u>::~StackBufferedWriter() 8
io.h:97:7:virtual fk::StackBufferedWriter<128u>::~StackBufferedWriter() 8
io.h:97:7:virtual fk::StackBufferedWriter<128u>::~StackBufferedWriter() 8
ipc.h:41:18:virtual bool fk::IPC::launch_worker(fk::TaskWorker*) 8
istream.cpp:30:5:int istream::get() 8
istream.h:335:11:int16_t istream::getch(FatPos_t*) 8
journal.c:122:21:next_upage 8
journal.c:206:6:dhara_journal_init 8
journal.c:450:14:dhara_journal_capacity 8
journal.c:577:12:skip_block 8
leds.cpp:10:1:virtual fk::ModuleLeds::~ModuleLeds() 8
leds.cpp:12:6:bool fk::LedsController::begin() 8
linux_battery_gauge.cpp:12:14:virtual fk::PowerReading fk::LinuxBatteryGauge::get() 8
linux_buttons.cpp:5:1:fk::LinuxButtons::LinuxButtons() 8
linux_leds.cpp:22:6:virtual void fk::LinuxLeds::color(uint8_t, fk::Color, bool) 8
linux_leds.cpp:5:1:fk::LinuxLeds::LinuxLeds() 8
linux_leds.h:7:7:fk::LinuxLeds::~LinuxLeds() 8
linux_leds.h:7:7:virtual fk::LinuxLeds::~LinuxLeds() 8
linux_sd_card.cpp:44:13:virtual fk::SdCardFile* fk::LinuxSdCard::open(const char*, fk::OpenFlags, fk::Pool&) 8
loading.c:18:21:fkb_try_header 8
log_stream.cpp:47:1:LogStream::~LogStream() 8
log_stream.cpp:51:12:LogStream& LogStream::flush() 8
logging.cpp:337:6:void fk::fk_logs_clear() 8
logging.cpp:98:6:void alogs(LogLevels, const char*, const char*) 8
logging.h:55:13:fk::LogBufferLock::~LogBufferLock() 8
logging.h:55:13:fk::LogBufferLock::~LogBufferLock() 8
logging.h:55:13:virtual fk::LogBufferLock::~LogBufferLock() 8
logging.h:55:13:virtual fk::LogBufferLock::~LogBufferLock() 8
logging_arduino.cpp:28:8:size_t platform_write_fn(const LogMessage*, const char*) 8
logging_arduino.cpp:59:6:void alogging_platform_abort() 8
logs_handler.h:18:7:virtual fk::DownloadLogsWorker::~DownloadLogsWorker() 8
lora_packetizer.cpp:13:1:virtual fk::LoraPacketizer::~LoraPacketizer() 8
lora_ranging_worker.h:7:7:virtual fk::LoraRangingWorker::~LoraRangingWorker() 8
lora_view.cpp:40:6:virtual void fk::LoraView::hide() 8
lora_worker.h:7:7:virtual fk::LoraWorker::~LoraWorker() 8
lwcron.cpp:17:1:lwcron::DateTime::DateTime(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t) 8
lwcron.h:144:10:virtual void lwcron::PeriodicTask::accept(lwcron::TaskVisitor&) 8
lwcron.h:144:10:virtual void lwcron::PeriodicTask::accept(lwcron::TaskVisitor&) 8
lwcron.h:269:10:virtual void lwcron::CronTask::accept(lwcron::TaskVisitor&) 8
lwcron.h:269:10:virtual void lwcron::CronTask::accept(lwcron::TaskVisitor&) 8
m2m_hif.c:152:7:hif_chip_wake 8
m2m_hif.c:261:7:hif_init 8
m2m_hif.c:278:7:hif_deinit 8
m2m_hif.c:732:7:hif_register_cb 8
m2m_ota.c:130:16:m2m_ota_init 8
m2m_ssl.c:220:15:m2m_ssl_retrieve_hash 8
m2m_ssl.c:296:15:m2m_ssl_init 8
m2m_wifi.c:1059:7:m2m_wifi_get_mac_address 8
m2m_wifi.c:312:7:m2m_wifi_download_mode 8
m2m_wifi.c:327:14:m2m_validate_ap_parameters 8
m2m_wifi.c:521:8:m2m_wifi_deinit 8
m2m_wifi.c:893:7:m2m_wifi_req_client_ctrl 8
m2m_wifi.c:919:7:m2m_wifi_req_server_init 8
main.c:131:9:bl_firmware_upgrade_failed 8
main.c:229:6:cm_dummy_handler 8
main.c:236:6:cm_nmi 8
main.c:243:6:cm_hard_fault 8
main.c:24:16:work 8
main.c:250:6:cm_svc 8
main.c:257:6:cm_pendsv 8
main.c:25:10:launch 8
main.c:29:9:fkmodule 8
main.cpp:33:5:int main() 8
main.cpp:33:5:int main() 8
map.c:100:16:dhara_map_capacity 8
map.c:81:5:dhara_map_resume 8
mcp_2803.cpp:19:1:fk::Mcp2803::Mcp2803(fk::TwoWireWrapper&, uint8_t) 8
mcp_2803.cpp:22:1:virtual fk::Mcp2803::~Mcp2803() 8
mcp_2803.cpp:47:6:bool fk::Mcp2803::read_gpio(uint8_t&) 8
mdns.cpp:22:1:fk::MDNSDiscovery::~MDNSDiscovery() 8
mdns.cpp:22:1:virtual fk::MDNSDiscovery::~MDNSDiscovery() 8
mdns.cpp:64:6:bool fk::MDNSDiscovery::service(fk::Pool*) 8
memory.cpp:111:1:fk::TranslatingMemory::TranslatingMemory(fk::DataMemory*, int32_t) 8
memory.cpp:142:9:virtual int32_t fk::TranslatingMemory::flush() 8
memory.cpp:154:9:virtual int32_t fk::TranslatingMemory::execute(uint32_t*, uint32_t*) 8
memory.cpp:21:1:fk::BankedDataMemory::BankedDataMemory(fk::DataMemory**, size_t) 8
memory.cpp:226:1:cpp) 8
memory.h:101:21:virtual int32_t fk::DataMemory::copy_page(uint32_t, uint32_t, size_t) 8
memory.h:101:21:virtual int32_t fk::DataMemory::copy_page(uint32_t, uint32_t, size_t) 8
memory.h:101:21:virtual int32_t fk::DataMemory::copy_page(uint32_t, uint32_t, size_t) 8
memory.h:101:21:virtual int32_t fk::DataMemory::copy_page(uint32_t, uint32_t, size_t) 8
memory.h:101:21:virtual int32_t fk::DataMemory::copy_page(uint32_t, uint32_t, size_t) 8
memory.h:101:21:virtual int32_t fk::DataMemory::copy_page(uint32_t, uint32_t, size_t) 8
memory.h:101:21:virtual int32_t fk::DataMemory::copy_page(uint32_t, uint32_t, size_t) 8
memory.h:101:21:virtual int32_t fk::DataMemory::copy_page(uint32_t, uint32_t, size_t) 8
memory.h:101:21:virtual int32_t fk::DataMemory::copy_page(uint32_t, uint32_t, size_t) 8
memory.h:101:21:virtual int32_t fk::DataMemory::copy_page(uint32_t, uint32_t, size_t) 8
memory.h:101:21:virtual int32_t fk::DataMemory::copy_page(uint32_t, uint32_t, size_t) 8
menu_view.cpp:128:17:virtual const char* fk::ToggleWifiOption::label() const 8
menu_view.cpp:716:6:virtual void fk::MenuView::show() 8
menu_view.cpp:720:6:void fk::MenuView::show_for_module(uint8_t) 8
menu_view.cpp:749:6:virtual void fk::MenuView::up(fk::ViewController*) 8
menu_view.cpp:754:6:virtual void fk::MenuView::down(fk::ViewController*) 8
menu_view.cpp:759:6:virtual void fk::MenuView::enter(fk::ViewController*) 8
menu_view.cpp:764:6:void fk::MenuView::confirm(fk::MenuOption*) 8
menu_view.cpp:83:10:void fk::NetworkOption<T>::refresh(const fk::GlobalState*) [with T = fk::MenuView::create_network_menu()::__lambda57] 8
meta_record.cpp:48:27:const fk_data_DataRecord& fk::MetaRecord::record() 8
metal_battery_gauge.cpp:107:6:void fk::MetalBatteryGauge::irq() 8
metal_battery_gauge.cpp:16:13:void fk::irq_charge_pulse() 8
metal_board.cpp:101:6:void fk::Board::enable_everything() 8
metal_board.cpp:123:6:void fk::Board::disable_wifi() 8
metal_board.cpp:128:6:void fk::Board::enable_wifi() 8
metal_board.cpp:133:12:fk::EepromLock fk::Board::lock_eeprom() 8
metal_board.cpp:155:12:fk::SpiWrapper fk::Board::spi_flash() 8
metal_board.cpp:159:12:fk::SpiWrapper fk::Board::spi_sd() 8
metal_board.cpp:163:12:fk::SpiWrapper fk::Board::spi_radio() 8
metal_board.cpp:167:12:fk::SpiWrapper fk::Board::spi_module() 8
metal_board.cpp:171:16:fk::TwoWireWrapper fk::Board::i2c_core() 8
metal_board.cpp:175:16:fk::TwoWireWrapper fk::Board::i2c_radio() 8
metal_board.cpp:179:16:fk::TwoWireWrapper fk::Board::i2c_module() 8
metal_board.cpp:183:15:fk::SerialWrapper fk::Board::gps_serial() 8
metal_board.cpp:187:1:fk::SpiWrapper::SpiWrapper(const char*, void*) 8
metal_board.cpp:191:1:fk::SpiWrapper::~SpiWrapper() 8
metal_board.cpp:254:6:void fk::SpiWrapper::end() 8
metal_board.cpp:317:1:fk::TwoWireWrapper::TwoWireWrapper(const char*, void*) 8
metal_board.cpp:321:1:fk::TwoWireWrapper::~TwoWireWrapper() 8
metal_board.cpp:325:6:void fk::TwoWireWrapper::begin() 8
metal_board.cpp:367:13:void fk::i2c_end(TwoWire*) 8
metal_board.cpp:384:6:void fk::TwoWireWrapper::end() 8
metal_board.cpp:466:1:fk::SerialWrapper::SerialWrapper(const char*, void*) 8
metal_board.cpp:470:1:fk::SerialWrapper::~SerialWrapper() 8
metal_board.cpp:474:6:bool fk::SerialWrapper::begin(uint32_t) 8
metal_board.cpp:479:6:bool fk::SerialWrapper::end() 8
metal_board.cpp:484:9:int32_t fk::SerialWrapper::available() 8
metal_board.cpp:494:8:int8_t fk::SerialWrapper::read() 8
metal_buttons.cpp:14:13:void fk::irq_button_middle() 8
metal_buttons.cpp:19:13:void fk::irq_button_right() 8
metal_buttons.cpp:24:13:void fk::irq_button_external() 8
metal_buttons.cpp:29:1:fk::MetalButtons::MetalButtons() 8
metal_buttons.cpp:61:6:virtual bool fk::MetalButtons::get(uint8_t) const 8
metal_buttons.cpp:9:13:void fk::irq_button_left() 8
metal_ipc.cpp:202:6:virtual bool fk::MetalIPC::has_any_running_worker() 8
metal_ipc.cpp:227:6:virtual bool fk::MetalMutex::create() 8
metal_ipc.cpp:241:6:virtual bool fk::MetalMutex::release() 8
metal_ipc.cpp:249:6:virtual bool fk::MetalMutex::is_owner() 8
metal_ipc.cpp:253:6:virtual bool fk::MetalRwLock::create() 8
metal_ipc.cpp:279:6:virtual bool fk::MetalRwLock::release() 8
metal_ipc.cpp:34:6:virtual bool fk::MetalIPC::begin() 8
metal_leds.cpp:13:1:fk::MetalLeds::MetalLeds() 8
metal_leds.cpp:64:6:virtual void fk::MetalLeds::off() 8
metal_leds.cpp:70:6:virtual void fk::MetalLeds::on() 8
metal_leds.h:7:7:fk::MetalLeds::~MetalLeds() 8
metal_leds.h:7:7:virtual fk::MetalLeds::~MetalLeds() 8
metal_leds.h:7:7:virtual fk::MetalLeds::~MetalLeds() 8
metal_lora.cpp:12:1:fk::Rn2903LoraNetwork::Rn2903LoraNetwork() 8
metal_lora.cpp:149:6:virtual bool fk::Rn2903LoraNetwork::stop() 8
metal_lora.cpp:66:6:virtual bool fk::Rn2903LoraNetwork::join(const char*, const char*, const char*, uint32_t, uint32_t) 8
metal_memory.cpp:15:15:virtual fk::FlashGeometry fk::MetalDataMemory::geometry() const 8
metal_memory.cpp:8:1:fk::MetalDataMemory::MetalDataMemory(uint8_t) 8
metal_modmux.cpp:160:6:virtual bool fk::MetalModMux::enable_all_modules() 8
metal_modmux.cpp:168:6:virtual bool fk::MetalModMux::disable_all_modules() 8
metal_modmux.cpp:37:1:fk::MetalModMux::MetalModMux() 8
metal_network.cpp:102:1:fk::MetalNetworkConnection::~MetalNetworkConnection() 8
metal_network.cpp:102:1:virtual fk::MetalNetworkConnection::~MetalNetworkConnection() 8
metal_network.cpp:108:25:virtual fk::NetworkConnectionStatus fk::MetalNetworkConnection::status() 8
metal_network.cpp:115:6:virtual bool fk::MetalNetworkConnection::available() 8
metal_network.cpp:153:9:int32_t fk::WifiBufferedWriter::flush() 8
metal_network.cpp:189:6:virtual bool fk::MetalNetworkConnection::stop() 8
metal_network.cpp:288:15:virtual fk::NetworkStatus fk::MetalNetwork::status() 8
metal_network.cpp:31:11:virtual void* fk::StaticWiFiCallbacks::malloc(size_t) 8
metal_network.cpp:337:6:virtual bool fk::MetalNetwork::stop() 8
metal_network.cpp:364:6:virtual bool fk::MetalNetwork::synchronize_time() 8
metal_network.cpp:372:6:virtual bool fk::MetalNetwork::get_mac_address(uint8_t*) 8
metal_network.cpp:381:6:virtual bool fk::MetalNetwork::get_created_ap() 8
metal_network.cpp:407:1:fk::MetalNetworkListener::MetalNetworkListener(fk::Pool*, uint16_t) 8
metal_network.cpp:410:6:bool fk::MetalNetworkListener::begin() 8
metal_network.cpp:45:10:virtual void fk::StaticWiFiCallbacks::free(void*) 8
metal_network.cpp:84:13:const char* fk::get_wifi_status() 8
metal_network.cpp:90:1:fk::MetalNetworkConnection::MetalNetworkConnection() 8
metal_network.h:84:7:fk::MetalNetwork::~MetalNetwork() 8
metal_qspi.cpp:57:15:virtual fk::FlashGeometry fk::MetalQspiMemory::geometry() const 8
metal_qspi.cpp:64:9:virtual int32_t fk::MetalQspiMemory::read(uint32_t, uint8_t*, size_t, fk::MemoryReadFlags) 8
metal_qspi.cpp:72:9:virtual int32_t fk::MetalQspiMemory::write(uint32_t, const uint8_t*, size_t, fk::MemoryWriteFlags) 8
metal_sd_card.cpp:413:9:virtual int32_t fk::MetalSdCardFile::seek_beginning() 8
metal_sd_card.cpp:418:9:virtual int32_t fk::MetalSdCardFile::seek_end() 8
metal_sd_card.cpp:423:9:virtual int32_t fk::MetalSdCardFile::seek_from_end(int32_t) 8
metal_sd_card.cpp:432:6:virtual bool fk::MetalSdCardFile::close() 8
metal_sd_card.cpp:85:1:virtual fk::LogFile::~LogFile() 8
modmux.cpp:101:1:fk::Topology::Topology(uint8_t) 8
modmux.cpp:62:1:fk::ModulesLock::ModulesLock() 8
modmux.cpp:73:1:fk::ModulesLock::~ModulesLock() 8
modmux.cpp:73:1:virtual fk::ModulesLock::~ModulesLock() 8
module.cpp:57:6:void fk_module_initialize_atlas() 8
module.cpp:57:6:void fk_module_initialize_water() 8
module_factory.cpp:29:16:fk::ModuleFactory& fk::get_module_factory() 8
module_factory.cpp:36:1:fk::ModuleFactory::~ModuleFactory() 8
module_factory.cpp:36:1:virtual fk::ModuleFactory::~ModuleFactory() 8
module_readings.h:26:10:void fk::NModuleReadings<N>::set(int32_t, fk::ModuleReading) [with unsigned int N = 10u; int32_t = long int] 8
module_readings.h:26:10:void fk::NModuleReadings<N>::set(int32_t, fk::ModuleReading) [with unsigned int N = 12u; int32_t = long int] 8
module_readings.h:26:10:void fk::NModuleReadings<N>::set(int32_t, fk::ModuleReading) [with unsigned int N = 16u; int32_t = long int] 8
module_readings.h:26:10:void fk::NModuleReadings<N>::set(int32_t, fk::ModuleReading) [with unsigned int N = 1u; int32_t = long int] 8
module_readings.h:26:10:void fk::NModuleReadings<N>::set(int32_t, fk::ModuleReading) [with unsigned int N = 3u; int32_t = long int] 8
module_readings.h:26:10:void fk::NModuleReadings<N>::set(int32_t, fk::ModuleReading) [with unsigned int N = 4u; int32_t = long int] 8
module_readings.h:26:10:void fk::NModuleReadings<N>::set(int32_t, fk::ModuleReading) [with unsigned int N = 4u; int32_t = long int] 8
module_readings.h:36:21:fk::ModuleReadings* fk::NModuleReadings<N>::clone(fk::Pool&) const [with unsigned int N = 3u] 8
module_status_view.cpp:31:1:fk::ModuleStatusView::ModuleStatusView() 8
module_status_view.cpp:44:6:virtual void fk::ModuleStatusView::up(fk::ViewController*) 8
module_status_view.cpp:54:6:virtual void fk::ModuleStatusView::down(fk::ViewController*) 8
module_status_view.cpp:64:6:virtual void fk::ModuleStatusView::enter(fk::ViewController*) 8
modules.c:8:10:fk_module_header_valid 8
modules_bridge.h:42:13:virtual fk::Module::~Module() 8
modules_bridge.h:42:13:virtual fk::Module::~Module() 8
modules_bridge.h:42:13:virtual fk::Module::~Module() 8
modules_bridge.h:42:13:virtual fk::Module::~Module() 8
modules_bridge.h:42:13:virtual fk::Module::~Module() 8
modules_bridge.h:42:13:virtual fk::Module::~Module() 8
modules_bridge.h:42:13:virtual fk::Module::~Module() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
mutex.h:46:13:virtual fk::Lock::~Lock() 8
network.h:38:13:virtual fk::NetworkConnection::~NetworkConnection() 8
network_services.cpp:119:6:void fk::NetworkServices::stop() 8
network_services.cpp:24:1:fk::NetworkServices::~NetworkServices() 8
network_services.cpp:24:1:virtual fk::NetworkServices::~NetworkServices() 8
network_services.cpp:29:6:bool fk::NetworkServices::enabled() const 8
network_services.cpp:41:6:bool fk::NetworkServices::ready_to_serve() const 8
network_services.cpp:79:6:bool fk::NetworkServices::serve() 8
network_task.cpp:57:1:virtual fk::NetworkTask::~NetworkTask() 8
network_task.cpp:7:1:fk::NetworkTask::NetworkTask(fk::Network*, fk::NetworkServices&) 8
nm_bsp_arduino.c:121:7:nm_bsp_init 8
nm_bsp_arduino.c:140:7:nm_bsp_deinit 8
nm_bsp_arduino.c:155:6:nm_bsp_reset 8
nm_bsp_arduino.c:175:6:nm_bsp_sleep 8
nm_bsp_arduino.c:192:6:nm_bsp_register_isr 8
nm_bsp_arduino.c:207:6:nm_bsp_interrupt_ctrl 8
nm_bsp_arduino.c:66:13:chip_isr 8
nm_bus_wrapper_samd21.cpp:121:7:sint8 nm_bus_init(void*) 8
nm_bus_wrapper_samd21.cpp:178:7:sint8 nm_bus_deinit() 8
nm_common.c:43:6:m2m_memcpy 8
nmasic.c:247:6:restore_pmu_settings_after_global_reset 8
nmasic.c:259:6:nmi_update_pll 8
nmasic.c:270:6:nmi_set_sys_clk_src_to_xo 8
nmasic.c:381:7:chip_reset_and_cpu_halt 8
nmasic.c:396:7:chip_reset 8
nmdrv.c:246:7:nm_drv_init_download_mode 8
nmdrv.c:374:7:nm_drv_deinit 8
nmspi.c:1313:7:nm_spi_read_reg_with_ret 8
nmspi.c:1337:7:nm_spi_write_reg 8
oem_atlas.cpp:184:6:bool fk::OemAtlas::leds(bool) 8
oem_atlas.cpp:62:8:fk::Config fk::config(fk::AtlasSensorType) 8
oem_atlas.cpp:79:1:fk::OemAtlas::OemAtlas(fk::TwoWireWrapper&, uint8_t, fk::AtlasSensorType) 8
optional.hpp:1267:39:nonstd::optional_lite::optional<T>::value_type* nonstd::optional_lite::optional<T>::operator->() [with T = fk::Topology; nonstd::optional_lite::optional<T>::value_type = fk::Topology] 8
optional.hpp:1279:39:nonstd::optional_lite::optional<T>::value_type& nonstd::optional_lite::optional<T>::operator*() & [with T = bool; nonstd::optional_lite::optional<T>::value_type = bool] 8
optional.hpp:1279:39:nonstd::optional_lite::optional<T>::value_type& nonstd::optional_lite::optional<T>::operator*() & [with T = fk::ConstructedModule*; nonstd::optional_lite::optional<T>::value_type = fk::ConstructedModule*] 8
optional.hpp:1279:39:nonstd::optional_lite::optional<T>::value_type& nonstd::optional_lite::optional<T>::operator*() & [with T = float; nonstd::optional_lite::optional<T>::value_type = float] 8
os.c:1033:13:4 8
os.c:304:13:os_task_suspend 8
os.c:317:13:os_task_resume 8
os.c:330:10:os_task_is_stop 8
os.c:335:10:os_task_uptime 8
os.c:340:10:os_task_runtime 8
os.c:349:13:os_start 8
os.c:712:10:os_free_memory 8
os.c:742:10:osi_task_set_stacked_return 8
os.c:748:10:osi_task_get_stacked_return 8
os.c:827:6:osi_stack_check 8
os.c:942:13:3 8
paging_delimited_buffer.cpp:21:1:phylum::page_lock::page_lock(phylum::page_lock&&) 8
paging_delimited_buffer.cpp:26:1:phylum::page_lock::~page_lock() 8
paging_delimited_buffer.cpp:26:1:virtual phylum::page_lock::~page_lock() 8
paging_delimited_buffer.cpp:7:1:phylum::page_lock::page_lock(phylum::paging_delimited_buffer*, phylum::dhara_sector_t, bool, bool) 8
paging_delimited_buffer.h:48:7:phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:virtual phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:virtual phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:virtual phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:virtual phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:virtual phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:virtual phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:virtual phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:virtual phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:virtual phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:virtual phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
paging_delimited_buffer.h:48:7:virtual phylum::paging_delimited_buffer::~paging_delimited_buffer() 8
pb_common.c:122:13:advance_iterator 8
pb_common.c:188:6:pb_field_iter_next 8
pb_common.c:300:6:pb_default_field_callback 8
pb_decode.c:124:25:pb_readbyte 8
pb_decode.c:142:14:pb_istream_from_buffer 8
pb_decode.c:70:25:buf_read 8
pb_encode.c:52:25:buf_write 8
pb_encode.c:64:14:pb_ostream_from_buffer 8
pb_encode.c:769:25:pb_enc_varint 8
phyctx.h:20:13:virtual phylum::phyctx::~phyctx() 8
phyctx.h:20:13:virtual phylum::phyctx::~phyctx() 8
phyctx.h:20:13:virtual phylum::phyctx::~phyctx() 8
phyctx.h:20:13:virtual phylum::phyctx::~phyctx() 8
phylum.cpp:9:1:fk::standard_page_working_buffers::~standard_page_working_buffers() 8
phylum.cpp:9:1:virtual fk::standard_page_working_buffers::~standard_page_working_buffers() 8
platform.cpp:147:1:fk::fk_serial_number_t::fk_serial_number_t() 8
platform.cpp:194:6:void osi_hard_fault_report(uintptr_t*, uint32_t, cortex_hard_fault_t*) 8
platform.cpp:52:10:uint32_t fk::fk_uptime() 8
platform.h:41:5:fk::IntervalTimer::IntervalTimer() 8
poll_sensors_worker.cpp:6:1:fk::PollSensorsWorker::PollSensorsWorker() 8
poll_sensors_worker.h:7:7:virtual fk::PollSensorsWorker::~PollSensorsWorker() 8
pool.cpp:13:7:void* operator new(size_t, fk::Pool&) 8
pool.cpp:17:7:void* operator new [](size_t, fk::Pool&) 8
pool.cpp:212:13:virtual fk::InsidePool::~InsidePool() 8
pool.cpp:21:7:void* operator new(size_t, fk::Pool*) 8
pool.cpp:224:7:fk::Pool* fk::create_pool_inside(const char*) 8
pool.cpp:258:1:fk::StandardPool::~StandardPool() 8
pool.cpp:258:1:virtual fk::StandardPool::~StandardPool() 8
pool.cpp:25:7:void* operator new [](size_t, fk::Pool*) 8
pool.cpp:48:1:virtual fk::Pool::~Pool() 8
pool.h:151:12:virtual size_t fk::StandardPool::size() const 8
pool.h:155:12:virtual size_t fk::StandardPool::used() const 8
pool.h:155:12:virtual size_t fk::StandardPool::used() const 8
pool.h:63:19:virtual fk::Pool* fk::Pool::subpool(const char*, size_t) 8
pool.h:68:20:virtual size_t fk::Pool::allocated() const 8
pool.h:91:8:T* fk::Pool::malloc() [with T = _fk_app_HttpReply] 8
pool.h:91:8:T* fk::Pool::malloc() [with T = _fk_data_DataRecord] 8
pool.h:91:8:T* fk::Pool::malloc() [with T = _fk_data_SignedRecord] 8
pool.h:91:8:T* fk::Pool::malloc() [with T = fk::collection<fk::ConstructedModule>::item_t] 8
pool.h:91:8:T* fk::Pool::malloc() [with T = fk::pb_array_t] 8
pool.h:96:8:T* fk::Pool::malloc_with(T&&) [with T = fk::ModuleSensors] 8
pool.h:96:8:T* fk::Pool::malloc_with(T&&) [with T = fk::SensorMetadata] 8
pool.h:96:8:T* fk::Pool::malloc_with(T&&) [with T = fk::pb_data_t] 8
pool.h:96:8:T* fk::Pool::malloc_with(T&&) [with T = fk::pb_data_t] 8
pool_pointer.h:40:13:fk::WeakPoolWrapper<Wrapped, ConcreteWrapped, Args>::~WeakPoolWrapper() [with Wrapped = fk::NetworkListener; ConcreteWrapped = fk::MetalNetworkListener; Args = {short unsigned int&}] 8
pool_pointer.h:40:13:fk::WeakPoolWrapper<Wrapped, ConcreteWrapped, Args>::~WeakPoolWrapper() [with Wrapped = fk::NetworkListener; ConcreteWrapped = fk::MetalNetworkListener; Args = {short unsigned int&}] 8
pool_pointer.h:72:13:fk::StandardPoolWrapper<Wrapped, ConcreteWrapped, Args>::~StandardPoolWrapper() [with Wrapped = fk::NetworkConnection; ConcreteWrapped = fk::MetalNetworkConnection; Args = {WiFiClient&}] 8
pool_pointer.h:72:13:fk::StandardPoolWrapper<Wrapped, ConcreteWrapped, Args>::~StandardPoolWrapper() [with Wrapped = fk::NetworkConnection; ConcreteWrapped = fk::MetalNetworkConnection; Args = {WiFiClient&}] 8
printf.cpp:106:20:void _out_fct(char, void*, size_t, size_t) 8
printf.cpp:106:20:void _out_fct(char, void*, size_t, size_t) 8
process.h:7:7:virtual fk::Process::~Process() 8
progress_tracker.cpp:44:10:uint32_t fk::ProgressTracker::elapsed() const 8
progress_tracker.cpp:56:6:void fk::ProgressTracker::finished() 8
progress_tracker.cpp:7:1:fk::ProgressTracker::ProgressTracker(fk::ProgressCallbacks*, fk::Operation, const char*, const char*, uint32_t) 8
protobuf.cpp:110:6:bool fk::pb_decode_array(pb_istream_t*, const pb_field_t*, void**) 8
protobuf.cpp:145:12:fk::pb_data_t* fk::pb_data_allocate(fk::Pool*, size_t) 8
qrcode.c:227:13:bb_setBit 8
qspi.cpp:98:9:int32_t bl_qspi_initialize() 8
random.cpp:17:9:int32_t fk_random_initialize() 8
random.cpp:24:9:int32_t fk_random_fill_u32(uint32_t*, size_t) 8
random.cpp:29:9:int32_t fk_random_fill_u8(uint8_t*, size_t) 8
random_module.cpp:9:1:virtual fk::RandomModule::~RandomModule() 8
readings.cpp:12:1:fk::Readings::Readings(fk::ModMux*, fk::Pool&) 8
readings_view.cpp:61:6:virtual void fk::ReadingsView::enter(fk::ViewController*) 8
readings_worker.h:9:7:virtual fk::ReadingsWorker::~ReadingsWorker() 8
receive_firmware_handler.cpp:30:6:bool fk::ReceiveFirmwareWorker::write_error(const char*, fk::Pool&) 8
receive_firmware_handler.cpp:37:6:bool fk::ReceiveFirmwareWorker::write_success(fk::Pool&) 8
receive_firmware_handler.h:14:7:virtual fk::ReceiveFirmwareWorker::~ReceiveFirmwareWorker() 8
record_chain.cpp:55:9:virtual int32_t phylum::record_chain::seek_end_of_buffer(phylum::page_lock&) 8
record_chain.h:7:7:phylum::record_chain::~record_chain() 8
record_chain.h:7:7:phylum::record_chain::~record_chain() 8
record_chain.h:7:7:phylum::record_chain::~record_chain() 8
record_chain.h:7:7:phylum::record_chain::~record_chain() 8
record_chain.h:7:7:virtual phylum::record_chain::~record_chain() 8
record_chain.h:7:7:virtual phylum::record_chain::~record_chain() 8
record_chain.h:7:7:virtual phylum::record_chain::~record_chain() 8
record_chain.h:7:7:virtual phylum::record_chain::~record_chain() 8
records.cpp:290:6:void fk::fk_data_record_encoding_new(fk_data_DataRecord*) 8
records.cpp:565:6:void fk::fk_lora_record_encoding_new(fk_data_LoraRecord*) 8
refresh_modules_worker.h:7:7:virtual fk::RefreshModulesWorker::~RefreshModulesWorker() 8
registry.cpp:25:1:virtual fk::ModuleRegistry::~ModuleRegistry() 8
registry.cpp:40:23:const ModuleMetadata* fk::ModuleRegistry::resolve(const ModuleHeader&) 8
registry.cpp:73:10:uint32_t fk::fk_modules_builtin_clear() 8
req.cpp:161:9:int32_t fk::HttpRequest::on_headers_complete() 8
req.cpp:180:9:int32_t fk::HttpRequest::on_message_complete() 8
req.cpp:55:6:void fk::HttpRequest::begin() 8
req.cpp:82:9:int32_t fk::HttpRequest::on_message_begin() 8
rn2903.cpp:12:1:fk::Rn2903::Rn2903() 8
rn2903.cpp:404:15:static fk::LoraErrorCode fk::Rn2903::translate_error(const char*) 8
routing.cpp:30:6:bool fk::HttpRouter::add_route(fk::HttpRoute*) 8
samd21_host.c:465:6:UHD_Pipe_Write 8
samd21_host.c:479:6:UHD_Pipe_Send 8
samd21_host.c:61:6:UHD_Init 8
scan_modules_worker.h:7:7:virtual fk::ScanModulesWorker::~ScanModulesWorker() 8
scheduling.cpp:55:6:virtual bool fk::LoraTask::enabled() const 8
scheduling.cpp:5:1:fk::CurrentSchedules::CurrentSchedules() 8
scheduling.cpp:97:6:virtual bool fk::ServiceModulesTask::enabled() const 8
sector_chain.h:141:13:12(phylum::dhara_sector_t) 8
sector_chain.h:141:13:30() 8
sector_chain.h:141:13:7() 8
sector_chain.h:37:13:phylum::sector_chain::~sector_chain() 8
sector_chain.h:37:13:phylum::sector_chain::~sector_chain() 8
sector_chain.h:37:13:phylum::sector_chain::~sector_chain() 8
sector_chain.h:37:13:phylum::sector_chain::~sector_chain() 8
sector_chain.h:37:13:phylum::sector_chain::~sector_chain() 8
sector_chain.h:37:13:phylum::sector_chain::~sector_chain() 8
sector_chain.h:37:13:phylum::sector_chain::~sector_chain() 8
sector_chain.h:37:13:phylum::sector_chain::~sector_chain() 8
sector_chain.h:37:13:phylum::sector_chain::~sector_chain() 8
sector_chain.h:37:13:virtual phylum::sector_chain::~sector_chain() 8
sector_chain.h:37:13:virtual phylum::sector_chain::~sector_chain() 8
sector_chain.h:37:13:virtual phylum::sector_chain::~sector_chain() 8
sector_chain.h:37:13:virtual phylum::sector_chain::~sector_chain() 8
sector_chain.h:37:13:virtual phylum::sector_chain::~sector_chain() 8
sector_chain.h:37:13:virtual phylum::sector_chain::~sector_chain() 8
sector_chain.h:37:13:virtual phylum::sector_chain::~sector_chain() 8
sector_chain.h:37:13:virtual phylum::sector_chain::~sector_chain() 8
sector_chain.h:37:13:virtual phylum::sector_chain::~sector_chain() 8
sector_map.h:14:13:virtual phylum::sector_map::~sector_map() 8
self_check.cpp:32:1:fk::SelfCheck::SelfCheck(fk::Display*, fk::Network*, fk::ModMux*, fk::ModuleLeds*) 8
self_check_worker.cpp:14:6:virtual void fk::SelfCheckWorker::run(fk::Pool&) 8
self_check_worker.h:8:7:virtual fk::SelfCheckWorker::~SelfCheckWorker() 8
sequential_memory.cpp:73:9:int32_t fk::SequentialMemory::flush() 8
sequential_memory.cpp:81:1:fk::BufferedPageMemory::BufferedPageMemory(fk::BufferedPageMemory&&) 8
sequential_memory.cpp:84:1:virtual fk::BufferedPageMemory::~BufferedPageMemory() 8
sequential_memory.cpp:87:21:fk::BufferedPageMemory& fk::BufferedPageMemory::operator=(fk::BufferedPageMemory&&) 8
sequential_memory.cpp:95:6:virtual bool fk::BufferedPageMemory::begin() 8
sequential_memory.cpp:99:15:virtual fk::FlashGeometry fk::BufferedPageMemory::geometry() const 8
service.c:165:10:os_delay 8
service.c:183:10:os_pstr 8
service.c:193:10:os_panic 8
service.c:209:10:os_abort 8
service.c:248:12:os_queue_dequeue 8
service.c:47:10:svc_panic 8
service.c:63:10:svc_abort 8
service.c:94:24:svc_queue_enqueue 8
service_modules_worker.h:9:7:virtual fk::ServiceModulesWorker::~ServiceModulesWorker() 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 8
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 8
simple_ntp.cpp:20:1:fk::SimpleNTP::~SimpleNTP() 8
simple_ntp.cpp:20:1:virtual fk::SimpleNTP::~SimpleNTP() 8
simple_ntp.cpp:62:6:void fk::SimpleNTP::start() 8
simple_ntp.cpp:71:6:void fk::SimpleNTP::stop() 8
socket.c:488:6:socketDeinit 8
spi_flash.cpp:308:9:int32_t fk::SpiFlash::erase_block(uint32_t) 8
standard_page.h:25:13:fk::StandardPage::~StandardPage() 8
standard_page.h:25:13:virtual fk::StandardPage::~StandardPage() 8
startup_worker.h:10:7:virtual fk::StartupWorker::~StartupWorker() 8
state.cpp:100:6:void fk::GlobalState::update_meta_stream(const fk::File&) 8
state.cpp:137:6:void fk::GlobalState::released(uint32_t) const 8
state.cpp:96:6:void fk::GlobalState::update_data_stream(const fk::File&) 8
state.h:257:8:fk::Schedule::Schedule() 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = const fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
state_ref.h:24:13:fk::GlobalStateRef<T>::~GlobalStateRef() [with T = fk::GlobalState*] 8
statistics_memory.cpp:20:6:virtual bool fk::StatisticsMemory::begin() 8
statistics_memory.cpp:24:15:virtual fk::FlashGeometry fk::StatisticsMemory::geometry() const 8
statistics_memory.cpp:38:9:virtual int32_t fk::StatisticsMemory::copy_page(uint32_t, uint32_t, size_t) 8
statistics_memory.cpp:49:9:virtual int32_t fk::StatisticsMemory::flush() 8
statistics_memory.cpp:7:6:void fk::MemoryStatistics::add(fk::MemoryStatistics) 8
storage.cpp:100:1:virtual fk::Storage::~Storage() 8
storage.cpp:59:6:bool fk::BlockHeader::valid() const 8
storage.cpp:77:6:bool fk::RecordHeader::valid() 8
storage.cpp:809:6:bool fk::Storage::flush() 8
storage.cpp:85:6:bool fk::RecordTail::valid() 8
super_chain.h:7:7:phylum::super_chain::~super_chain() 8
super_chain.h:7:7:virtual phylum::super_chain::~super_chain() 8
syscalls_app.cpp:14:10:uint32_t svc_memory_free(void*) 8
syscalls_app.cpp:23:7:void* fkos_memory_alloc() 8
syscalls_app.cpp:32:6:void fkos_memory_free(void*) 8
sysexample.c:18:10:svc_example 8
sysexample.c:25:10:os_example 8
task_stack.h:51:13:logged_task::~logged_task() 8
task_stack.h:51:13:logged_task::~logged_task() 8
task_stack.h:51:13:logged_task::~logged_task() 8
task_stack.h:51:13:logged_task::~logged_task() 8
task_stack.h:51:13:logged_task::~logged_task() 8
task_stack.h:51:13:logged_task::~logged_task() 8
task_stack.h:51:13:logged_task::~logged_task() 8
task_stack.h:51:13:logged_task::~logged_task() 8
task_stack.h:51:13:logged_task::~logged_task() 8
task_stack.h:51:13:virtual logged_task::~logged_task() 8
task_stack.h:51:13:virtual logged_task::~logged_task() 8
task_stack.h:51:13:virtual logged_task::~logged_task() 8
task_stack.h:51:13:virtual logged_task::~logged_task() 8
task_stack.h:51:13:virtual logged_task::~logged_task() 8
task_stack.h:51:13:virtual logged_task::~logged_task() 8
task_stack.h:51:13:virtual logged_task::~logged_task() 8
task_stack.h:51:13:virtual logged_task::~logged_task() 8
task_stack.h:51:13:virtual logged_task::~logged_task() 8
tasks.cpp:26:6:bool fk::fk_can_start_task(os_task_t*) 8
tiny_printf.c:109:20:_out_fct 8
tree_sector.h:89:13:phylum::tree_sector<KEY, VALUE, Size>::~tree_sector() [with KEY = long unsigned int; VALUE = phylum::attribute_value_t<256u>; unsigned int Size = 15u] 8
tree_sector.h:89:13:phylum::tree_sector<KEY, VALUE, Size>::~tree_sector() [with KEY = long unsigned int; VALUE = phylum::dirtree_tree_value_t<128u>; unsigned int Size = 4u] 8
types.h:130:8:fk::RecordTail::RecordTail() 8
types.h:91:8:fk::BlockHeader::BlockHeader() 8
types.h:91:8:fk::BlockHeader::BlockHeader() 8
u8g2_buffer.c:100:6:u8g2_SetBufferCurrTileRow 8
u8g2_buffer.c:107:6:u8g2_FirstPage 8
u8g2_buffer.c:93:6:u8g2_SendBuffer 8
u8g2_cleardisplay.c:39:6:u8g2_ClearDisplay 8
u8g2_display.cpp:71:6:virtual void fk::U8g2Display::on() 8
u8g2_font.c:1071:6:u8g2_SetFont 8
u8g2_font.c:282:8:u8g2_font_decode_get_signed_bits 8
u8g2_font.c:731:9:u8g2_IsGlyph 8
u8g2_font.c:842:13:u8g2_DrawStr 8
u8g2_font.c:858:13:u8g2_DrawUTF8 8
u8g2_polygon.c:78:16:pge_Next 8
u8g2_setup.c:110:6:u8g2_SetDisplayRotation 8
u8g2_setup.c:231:6:u8g2_update_dimension_r1 8
u8g2_setup.c:276:6:u8g2_update_dimension_r3 8
u8g2_setup.c:307:6:u8g2_draw_l90_r0 8
u8g2_setup.c:46:6:u8g2_SetMaxClipWindow 8
u8g2_setup.c:56:6:u8g2_SetClipWindow 8
u8log.c:199:6:u8log_WriteChar 8
u8log.c:251:6:u8log_WriteDec8 8
u8log.c:257:6:u8log_WriteDec16 8
u8x8_8x8.c:168:13:u8x8_upscale_buf 8
u8x8_8x8.c:383:9:u8x8_DrawString 8
u8x8_8x8.c:389:9:u8x8_DrawUTF8 8
u8x8_8x8.c:424:9:u8x8_Draw2x2String 8
u8x8_8x8.c:430:9:u8x8_Draw2x2UTF8 8
u8x8_8x8.c:462:9:u8x8_Draw1x2String 8
u8x8_8x8.c:468:9:u8x8_Draw1x2UTF8 8
u8x8_byte.c:39:9:u8x8_byte_SetDC 8
u8x8_byte.c:477:13:i2c_read_scl_and_delay 8
u8x8_byte.c:535:13:i2c_write_bit 8
u8x8_byte.c:54:9:u8x8_byte_StartTransfer 8
u8x8_byte.c:59:9:u8x8_byte_EndTransfer 8
u8x8_cad.c:113:9:u8x8_cad_StartTransfer 8
u8x8_cad.c:118:9:u8x8_cad_EndTransfer 8
u8x8_cad.c:88:9:u8x8_cad_SendCmd 8
u8x8_cad.c:93:9:u8x8_cad_SendArg 8
u8x8_capture.c:45:9:u8x8_capture_get_pixel_1 8
u8x8_d_a2printer.c:165:9:u8x8_d_a2printer_384x240 8
u8x8_d_a2printer.c:54:10:get_delay_in_milliseconds 8
u8x8_d_il3820_296x128.c:240:13:u8x8_d_il3820_first_init 8
u8x8_d_il3820_296x128.c:373:9:u8x8_d_il3820_296x128 8
u8x8_d_il3820_296x128.c:511:9:u8x8_d_il3820_v2_296x128 8
u8x8_d_ld7032_60x32.c:233:9:u8x8_d_ld7032_60x32 8
u8x8_d_ls013b7dh03.c:148:9:u8x8_d_ls027b7dh01_400x240 8
u8x8_d_ls013b7dh03.c:184:9:u8x8_d_ls027b7dh01_m0_400x240 8
u8x8_d_ls013b7dh03.c:221:9:u8x8_d_ls013b7dh05_144x168 8
u8x8_d_ssd1306_128x32.c:204:9:u8x8_d_ssd1306_128x32_univision 8
u8x8_d_ssd1306_128x32.c:244:9:u8x8_d_ssd1306_128x32_winstar 8
u8x8_d_ssd1606_172x72.c:384:9:u8x8_d_ssd1606_172x72 8
u8x8_d_ssd1607_200x200.c:125:13:u8x8_d_ssd1607_200x200_first_init 8
u8x8_d_ssd1607_200x200.c:361:9:u8x8_d_ssd1607_200x200 8
u8x8_d_ssd1607_200x200.c:478:9:u8x8_d_ssd1607_v2_200x200 8
u8x8_d_ssd1607_200x200.c:576:9:u8x8_d_ssd1607_gd_200x200 8
u8x8_d_ssd1607_200x200.c:685:9:u8x8_d_ssd1607_ws_200x200 8
u8x8_d_st7920.c:206:9:u8x8_d_st7920_192x32 8
u8x8_d_st7920.c:219:9:u8x8_d_st7920_128x64 8
u8x8_d_stdio.c:73:9:u8x8_d_stdio 8
u8x8_d_stdio.c:96:6:u8x8_SetupStdio 8
u8x8_display.c:103:6:u8x8_SetPowerSave 8
u8x8_display.c:108:6:u8x8_SetFlipMode 8
u8x8_display.c:113:6:u8x8_SetContrast 8
u8x8_display.c:118:6:u8x8_RefreshDisplay 8
u8x8_display.c:93:6:u8x8_SetupMemory 8
u8x8_display.c:98:6:u8x8_InitDisplay 8
u8x8_gpio.c:40:6:u8x8_gpio_call 8
u8x8_selection_list.c:43:6:u8sl_Next 8
u8x8_setup.c:73:9:u8x8_d_null_cb 8
u8x8_string.c:93:6:u8x8_CopyStringLine 8
u8x8_u16toa.c:40:13:u8x8_u16toap 8
u8x8_u16toa.c:62:13:u8x8_u16toa 8
u8x8_u16toa.c:69:13:u8x8_utoa 8
u8x8_u8toa.c:40:13:u8x8_u8toap 8
u8x8_u8toa.c:61:13:u8x8_u8toa 8
udp_discovery.cpp:16:1:fk::UDPDiscovery::~UDPDiscovery() 8
udp_discovery.cpp:16:1:virtual fk::UDPDiscovery::~UDPDiscovery() 8
unknown.cpp:5:16:fk::Module* fk::fk_module_create_unknown(fk::Pool&) 8
unknown.h:7:7:virtual fk::UnknownModule::~UnknownModule() 8
upgrade_from_sd_worker.cpp:177:6:bool fk::UpgradeFirmwareFromSdWorker::has_file(const char*) 8
upgrade_from_sd_worker.cpp:82:6:void fk::UpgradeFirmwareFromSdWorker::log_other_firmware() 8
upgrade_from_sd_worker.h:25:7:virtual fk::UpgradeFirmwareFromSdWorker::~UpgradeFirmwareFromSdWorker() 8
upload_data_worker.cpp:22:1:fk::UploadDataWorker::UploadDataWorker(bool, bool) 8
upload_data_worker.h:8:7:virtual fk::UploadDataWorker::~UploadDataWorker() 8
uuid.c:6:9:fk_uuid_generate 8
watchdog.cpp:13:1:fk::EnableWatchdog::EnableWatchdog() 8
watchdog.cpp:17:1:fk::EnableWatchdog::~EnableWatchdog() 8
watchdog.cpp:17:1:virtual fk::EnableWatchdog::~EnableWatchdog() 8
watchdog.cpp:29:9:int32_t fk_wdt_initialize() 8
watchdog.cpp:35:9:int32_t fk_wdt_enable() 8
watchdog.cpp:43:9:int32_t fk_wdt_disable() 8
watchdog.cpp:48:9:int32_t fk_wdt_feed() 8
water_module.cpp:57:1:virtual fk::WaterModule::~WaterModule() 8
weather_module.cpp:44:1:virtual fk::WeatherModule::~WeatherModule() 8
wifi_toggle_worker.cpp:16:6:virtual void fk::WifiToggleWorker::run(fk::Pool&) 8
wifi_toggle_worker.h:7:7:virtual fk::WifiToggleWorker::~WifiToggleWorker() 8
wiring_analog.c:212:10:analogRead 8
wiring_analog.c:73:6:analogReadResolution 8
wiring_digital.c:25:6:pinMode 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::BackupWorker; ConcreteWrapped = fk::BackupWorker; Args = {}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::ConfigureModuleWorker; ConcreteWrapped = fk::ConfigureModuleWorker; Args = {fk::ModulePosition&, ModuleHeader&}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::ConfigureModuleWorker; ConcreteWrapped = fk::ConfigureModuleWorker; Args = {fk::ModulePosition&}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::DownloadFileWorker; ConcreteWrapped = fk::DownloadFileWorker; Args = {fk::HttpServerConnection*&}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::DownloadFirmwareWorker; ConcreteWrapped = fk::DownloadFirmwareWorker; Args = {}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::DownloadLogsWorker; ConcreteWrapped = fk::DownloadLogsWorker; Args = {fk::HttpServerConnection*&}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::DownloadWorker; ConcreteWrapped = fk::DownloadWorker; Args = {fk::HttpServerConnection*&, unsigned char&}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::DumpFlashMemoryWorker; ConcreteWrapped = fk::DumpFlashMemoryWorker; Args = {}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::FactoryWipeWorker; ConcreteWrapped = fk::FactoryWipeWorker; Args = {bool}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::FactoryWipeWorker; ConcreteWrapped = fk::FactoryWipeWorker; Args = {bool}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::FsckWorker; ConcreteWrapped = fk::FsckWorker; Args = {}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::LoraRangingWorker; ConcreteWrapped = fk::LoraRangingWorker; Args = {bool}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::LoraWorker; ConcreteWrapped = fk::LoraWorker; Args = {}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::PollSensorsWorker; ConcreteWrapped = fk::PollSensorsWorker; Args = {}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::ReadingsWorker; ConcreteWrapped = fk::ReadingsWorker; Args = {bool, bool, fk::ModulePowerState}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::ReadingsWorker; ConcreteWrapped = fk::ReadingsWorker; Args = {bool, bool, fk::ModulePowerState}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::ReceiveFirmwareWorker; ConcreteWrapped = fk::ReceiveFirmwareWorker; Args = {fk::HttpServerConnection*&}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::RefreshModulesWorker; ConcreteWrapped = fk::RefreshModulesWorker; Args = {}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::SelfCheckWorker; ConcreteWrapped = fk::SelfCheckWorker; Args = {fk::DisplaySelfCheckCallbacks&}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::ServiceModulesWorker; ConcreteWrapped = fk::ServiceModulesWorker; Args = {}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::UpgradeFirmwareFromSdWorker; ConcreteWrapped = fk::UpgradeFirmwareFromSdWorker; Args = {fk::SdCardFirmware&}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::UploadDataWorker; ConcreteWrapped = fk::UploadDataWorker; Args = {bool, bool}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::UploadDataWorker; ConcreteWrapped = fk::UploadDataWorker; Args = {}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::WifiToggleWorker; ConcreteWrapped = fk::WifiToggleWorker; Args = {fk::WifiToggleWorker::DesiredState}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::WifiToggleWorker; ConcreteWrapped = fk::WifiToggleWorker; Args = {}] 8
worker.h:113:21:fk::TaskDisplayInfo fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::display_info() const [with Wrapped = fk::WriteMemoryWorker; ConcreteWrapped = fk::WriteMemoryWorker; Args = {fk::HttpServerConnection*&}] 8
worker.h:20:13:virtual fk::TaskWorker::~TaskWorker() 8
worker.h:20:13:virtual fk::TaskWorker::~TaskWorker() 8
worker.h:20:13:virtual fk::TaskWorker::~TaskWorker() 8
worker.h:20:13:virtual fk::TaskWorker::~TaskWorker() 8
worker.h:20:13:virtual fk::TaskWorker::~TaskWorker() 8
worker.h:20:13:virtual fk::TaskWorker::~TaskWorker() 8
worker.h:20:13:virtual fk::TaskWorker::~TaskWorker() 8
worker.h:20:13:virtual fk::TaskWorker::~TaskWorker() 8
worker.h:20:13:virtual fk::TaskWorker::~TaskWorker() 8
worker.h:20:13:virtual fk::TaskWorker::~TaskWorker() 8
worker.h:20:13:virtual fk::TaskWorker::~TaskWorker() 8
worker.h:34:29:virtual fk::TaskDisplayInfo fk::TaskWorker::display_info() const 8
worker.h:34:29:virtual fk::TaskDisplayInfo fk::TaskWorker::display_info() const 8
worker.h:34:29:virtual fk::TaskDisplayInfo fk::TaskWorker::display_info() const 8
worker.h:34:29:virtual fk::TaskDisplayInfo fk::TaskWorker::display_info() const 8
worker.h:34:29:virtual fk::TaskDisplayInfo fk::TaskWorker::display_info() const 8
worker.h:34:29:virtual fk::TaskDisplayInfo fk::TaskWorker::display_info() const 8
worker.h:34:29:virtual fk::TaskDisplayInfo fk::TaskWorker::display_info() const 8
worker.h:34:29:virtual fk::TaskDisplayInfo fk::TaskWorker::display_info() const 8
worker.h:34:29:virtual fk::TaskDisplayInfo fk::TaskWorker::display_info() const 8
worker.h:34:29:virtual fk::TaskDisplayInfo fk::TaskWorker::display_info() const 8
worker.h:34:29:virtual fk::TaskDisplayInfo fk::TaskWorker::display_info() const 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:46:13:virtual fk::Worker::~Worker() 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:60:29:virtual fk::TaskDisplayInfo fk::Worker::display_info() const 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::BackupWorker; ConcreteWrapped = fk::BackupWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::BackupWorker; ConcreteWrapped = fk::BackupWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::ConfigureModuleWorker; ConcreteWrapped = fk::ConfigureModuleWorker; Args = {fk::ModulePosition&, ModuleHeader&}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::ConfigureModuleWorker; ConcreteWrapped = fk::ConfigureModuleWorker; Args = {fk::ModulePosition&, ModuleHeader&}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::ConfigureModuleWorker; ConcreteWrapped = fk::ConfigureModuleWorker; Args = {fk::ModulePosition&}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::ConfigureModuleWorker; ConcreteWrapped = fk::ConfigureModuleWorker; Args = {fk::ModulePosition&}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::DownloadFileWorker; ConcreteWrapped = fk::DownloadFileWorker; Args = {fk::HttpServerConnection*&}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::DownloadFileWorker; ConcreteWrapped = fk::DownloadFileWorker; Args = {fk::HttpServerConnection*&}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::DownloadFirmwareWorker; ConcreteWrapped = fk::DownloadFirmwareWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::DownloadFirmwareWorker; ConcreteWrapped = fk::DownloadFirmwareWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::DownloadLogsWorker; ConcreteWrapped = fk::DownloadLogsWorker; Args = {fk::HttpServerConnection*&}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::DownloadLogsWorker; ConcreteWrapped = fk::DownloadLogsWorker; Args = {fk::HttpServerConnection*&}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::DownloadWorker; ConcreteWrapped = fk::DownloadWorker; Args = {fk::HttpServerConnection*&, unsigned char&}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::DownloadWorker; ConcreteWrapped = fk::DownloadWorker; Args = {fk::HttpServerConnection*&, unsigned char&}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::DumpFlashMemoryWorker; ConcreteWrapped = fk::DumpFlashMemoryWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::DumpFlashMemoryWorker; ConcreteWrapped = fk::DumpFlashMemoryWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::ExportDataWorker; ConcreteWrapped = fk::ExportDataWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::ExportDataWorker; ConcreteWrapped = fk::ExportDataWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::FactoryWipeWorker; ConcreteWrapped = fk::FactoryWipeWorker; Args = {bool}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::FactoryWipeWorker; ConcreteWrapped = fk::FactoryWipeWorker; Args = {bool}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::FactoryWipeWorker; ConcreteWrapped = fk::FactoryWipeWorker; Args = {bool}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::FactoryWipeWorker; ConcreteWrapped = fk::FactoryWipeWorker; Args = {bool}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::FsckWorker; ConcreteWrapped = fk::FsckWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::FsckWorker; ConcreteWrapped = fk::FsckWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::LoraRangingWorker; ConcreteWrapped = fk::LoraRangingWorker; Args = {bool}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::LoraRangingWorker; ConcreteWrapped = fk::LoraRangingWorker; Args = {bool}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::LoraWorker; ConcreteWrapped = fk::LoraWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::LoraWorker; ConcreteWrapped = fk::LoraWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::PollSensorsWorker; ConcreteWrapped = fk::PollSensorsWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::PollSensorsWorker; ConcreteWrapped = fk::PollSensorsWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::ReadingsWorker; ConcreteWrapped = fk::ReadingsWorker; Args = {bool, bool, fk::ModulePowerState}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::ReadingsWorker; ConcreteWrapped = fk::ReadingsWorker; Args = {bool, bool, fk::ModulePowerState}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::ReadingsWorker; ConcreteWrapped = fk::ReadingsWorker; Args = {bool, bool, fk::ModulePowerState}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::ReadingsWorker; ConcreteWrapped = fk::ReadingsWorker; Args = {bool, bool, fk::ModulePowerState}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::ReceiveFirmwareWorker; ConcreteWrapped = fk::ReceiveFirmwareWorker; Args = {fk::HttpServerConnection*&}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::ReceiveFirmwareWorker; ConcreteWrapped = fk::ReceiveFirmwareWorker; Args = {fk::HttpServerConnection*&}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::RefreshModulesWorker; ConcreteWrapped = fk::RefreshModulesWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::RefreshModulesWorker; ConcreteWrapped = fk::RefreshModulesWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::SelfCheckWorker; ConcreteWrapped = fk::SelfCheckWorker; Args = {fk::DisplaySelfCheckCallbacks&}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::SelfCheckWorker; ConcreteWrapped = fk::SelfCheckWorker; Args = {fk::DisplaySelfCheckCallbacks&}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::ServiceModulesWorker; ConcreteWrapped = fk::ServiceModulesWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::ServiceModulesWorker; ConcreteWrapped = fk::ServiceModulesWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::StartupWorker; ConcreteWrapped = fk::StartupWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::StartupWorker; ConcreteWrapped = fk::StartupWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::UpgradeFirmwareFromSdWorker; ConcreteWrapped = fk::UpgradeFirmwareFromSdWorker; Args = {fk::SdCardFirmware&}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::UpgradeFirmwareFromSdWorker; ConcreteWrapped = fk::UpgradeFirmwareFromSdWorker; Args = {fk::SdCardFirmware&}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::UploadDataWorker; ConcreteWrapped = fk::UploadDataWorker; Args = {bool, bool}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::UploadDataWorker; ConcreteWrapped = fk::UploadDataWorker; Args = {bool, bool}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::UploadDataWorker; ConcreteWrapped = fk::UploadDataWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::UploadDataWorker; ConcreteWrapped = fk::UploadDataWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::WifiToggleWorker; ConcreteWrapped = fk::WifiToggleWorker; Args = {fk::WifiToggleWorker::DesiredState}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::WifiToggleWorker; ConcreteWrapped = fk::WifiToggleWorker; Args = {fk::WifiToggleWorker::DesiredState}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::WifiToggleWorker; ConcreteWrapped = fk::WifiToggleWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::WifiToggleWorker; ConcreteWrapped = fk::WifiToggleWorker; Args = {}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::WriteMemoryWorker; ConcreteWrapped = fk::WriteMemoryWorker; Args = {fk::HttpServerConnection*&}] 8
worker.h:80:13:fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::~PoolWorker() [with Wrapped = fk::WriteMemoryWorker; ConcreteWrapped = fk::WriteMemoryWorker; Args = {fk::HttpServerConnection*&}] 8
working_buffers.h:283:13:int32_t phylum::working_buffers::update_highwater() 8
working_buffers.h:283:13:int32_t phylum::working_buffers::update_highwater() 8
working_buffers.h:283:13:int32_t phylum::working_buffers::update_highwater() 8
working_buffers.h:48:13:virtual phylum::working_buffers::~working_buffers() 8
write_memory_handler.cpp:33:6:bool fk::WriteMemoryWorker::write_error(const char*, fk::Pool&) 8
write_memory_handler.cpp:40:6:bool fk::WriteMemoryWorker::write_success(fk::Pool&) 8
write_memory_handler.h:14:7:virtual fk::WriteMemoryWorker::~WriteMemoryWorker() 8
Adafruit_FlashTransport_QSPI_SAMD.cpp:53:1:Adafruit_FlashTransport_QSPI::Adafruit_FlashTransport_QSPI(int8_t, int8_t, int8_t, int8_t, int8_t, int8_t) 12
IPAddress.cpp:28:1:IPAddress::IPAddress(uint8_t, uint8_t, uint8_t, uint8_t) 12
SAMD21_USBDevice.cpp:18:6:void USBDevice_SAMD21G18x::calibrate() 12
SEGGER_RTT_printf.c:536:5:SEGGER_RTT_printf 12
SERCOM.cpp:253:6:void SERCOM::initSPIClock(SercomSpiClockMode, uint32_t) 12
SERCOM.cpp:563:6:bool SERCOM::startTransmissionWIRE(uint8_t, SercomWireReadWriteFlag) 12
SERCOM.cpp:740:6:void SERCOM::initClockNVIC() 12
WiFi.cpp:242:6:void ping_cb(uint32, uint32, uint8) 12
WiFiSocket.cpp:407:6:static void WiFiSocketClass::eventCallback(SOCKET, uint8, void*) 12
ads_1219.cpp:35:1:fk::Ads1219::Ads1219(fk::TwoWireWrapper&, uint8_t, fk::Ads1219ReadyChecker*) 12
atlas_protocol.cpp:14:26:fk_atlas_WireAtlasReply* fk::fk_atlas_reply_prepare_encoding(fk_atlas_WireAtlasReply*, fk::Pool*) 12
blake2b.cpp:166:6:void BLAKE2b::reset(uint8_t) 12
contexts.cpp:43:1:fk::ReadingsContext::ReadingsContext(fk::ScanningContext&, fk::ModulePosition, fk::ModuleReadingsCollection&, fk::ModulePowerState, fk::Pool&) 12
debug_udp.cpp:14:1:fk::DebugUDP::DebugUDP(UDP&, const char*) 12
dhara_map.cpp:284:5:int phylum::dhara_nand_erase(const dhara_nand*, phylum::dhara_block_t, dhara_error_t*) 12
file.cpp:250:17:fk::RecordReference fk::File::reference() const 12
file_ops_phylum.cpp:86:1:fk::phylum_ops::FileReader::FileReader(fk::Storage&, fk::FileNumber, fk::Pool&) 12
flash.c:26:9:bl_flash_read 12
flash.c:30:9:bl_flash_write 12
functional:2054:7:) [with _Res = long int; _Functor = phylum::super_chain::update(phylum::tree_ptr_t)::__lambda1; _ArgTypes = {phylum::super_block_t*}] 12
hal_ext_irq.c:90:9:ext_irq_register 12
hal_usb_device.c:117:15:_usb_d_find_ep 12
hpl_aes.c:102:20:0 12
hpl_aes.c:134:20:2 12
hpl_aes.c:93:20:__aes_sync_set_key 12
hpl_gpio_base.h:145:20:_gpio_set_pin_function 12
hpl_nvmctrl.c:550:16:_user_row_write_exec 12
hpl_qspi.c:142:9:_qspi_sync_serial_run_command 12
hpl_usb.c:1890:9:_usb_d_dev_ep_read_req 12
io.cpp:110:16:fk::BufferedReader fk::BufferedReader::beginning() const 12
io.cpp:14:1:fk::BufferedWriter::BufferedWriter(fk::Writer*, uint8_t*, size_t) 12
io.cpp:45:9:) 12
io.cpp:53:9:int32_t fk::BufferedWriter::write(char) 12
io.cpp:74:1:fk::BufferedReader::BufferedReader(fk::Reader*, uint8_t*, size_t, size_t) 12
journal.c:462:14:dhara_journal_size 12
logging.cpp:117:6:) 12
logging.cpp:124:6:) 12
logging.cpp:131:6:) 12
logging.cpp:138:6:void loginfofv(const char*, const char*, va_list) 12
lwcron.h:234:17:static bool lwcron::CronSpec::matches(uint8_t*, uint8_t*, size_t) 12
metal_network.cpp:145:9:) 12
nm_common.c:123:7:m2m_memcmp 12
nm_common.c:86:7:m2m_strncmp 12
os.c:169:10:os_task_highwater 12
ostream.cpp:44:7:char* ostream::fmtNum(uint32_t, char*, uint8_t) 12
paging_delimited_buffer.cpp:77:1:phylum::paging_delimited_buffer::paging_delimited_buffer(phylum::working_buffers&, phylum::sector_map&) 12
pb_encode.c:661:18:pb_encode_tag 12
platform.cpp:30:6:) 12
pool.cpp:237:1:fk::StandardPool::StandardPool(const char*, void*, size_t, size_t, bool) 12
readings_worker.cpp:16:1:fk::ReadingsWorker::ReadingsWorker(bool, bool, fk::ModulePowerState) 12
registry.cpp:78:10:uint32_t fk::fk_modules_builtin_register(const ModuleMetadata*) 12
rn2903.cpp:67:6:) 12
sector_chain.cpp:367:6:) 12
service.c:262:13:os_mutex_acquire 12
storage.cpp:801:6:void fk::Storage::restore(const fk::SavedState&) 12
tree_sector.h:135:10:) [with KEY = long unsigned int; VALUE = phylum::attribute_value_t<256u>; unsigned int Size = 15u] 12
tree_sector.h:135:10:) [with KEY = long unsigned int; VALUE = phylum::dirtree_tree_value_t<128u>; unsigned int Size = 4u] 12
u8g2_setup.c:119:6:u8g2_SendF 12
u8g2_setup.c:315:6:u8g2_draw_l90_mirrorr_r0 12
u8g2_setup.c:332:6:u8g2_draw_l90_r1 12
u8g2_setup.c:357:6:u8g2_draw_l90_r2 12
u8x8_cad.c:141:6:u8x8_SendF 12
u8x8_d_ssd1322.c:123:17:1 12
u8x8_d_stdio.c:45:6:bitmap_place_tile 12
Adafruit_FlashCache.cpp:44:6:bool Adafruit_FlashCache::sync(Adafruit_SPIFlash*) 16
Adafruit_FlashTransport_QSPI_SAMD.cpp:104:6:virtual bool Adafruit_FlashTransport_QSPI::writeCommand(uint8_t, const uint8_t*, uint32_t) 16
Adafruit_FlashTransport_QSPI_SAMD.cpp:112:6:virtual bool Adafruit_FlashTransport_QSPI::eraseCommand(uint8_t, uint32_t) 16
Adafruit_FlashTransport_QSPI_SAMD.cpp:88:6:virtual bool Adafruit_FlashTransport_QSPI::runCommand(uint8_t) 16
Adafruit_FlashTransport_QSPI_SAMD.cpp:96:6:virtual bool Adafruit_FlashTransport_QSPI::readCommand(uint8_t, uint8_t*, uint32_t) 16
Adafruit_FlashTransport_SPI.cpp:48:6:virtual bool Adafruit_FlashTransport_SPI::runCommand(uint8_t) 16
Adafruit_FlashTransport_SPI.cpp:95:6:virtual bool Adafruit_FlashTransport_SPI::eraseCommand(uint8_t, uint32_t) 16
Adafruit_SPIFlash.cpp:144:9:uint8_t Adafruit_SPIFlash::readStatus() 16
Adafruit_SPIFlash.cpp:151:9:uint8_t Adafruit_SPIFlash::readStatus2() 16
Adafruit_SPIFlash.cpp:169:6:bool Adafruit_SPIFlash::eraseSector(uint32_t) 16
Adafruit_SPIFlash.cpp:180:6:bool Adafruit_SPIFlash::eraseBlock(uint32_t) 16
Adafruit_SPIFlash.cpp:212:9:uint8_t Adafruit_SPIFlash::read8(uint32_t) 16
Adafruit_SPIFlash.cpp:218:10:uint16_t Adafruit_SPIFlash::read16(uint32_t) 16
Adafruit_SPIFlash.cpp:224:10:uint32_t Adafruit_SPIFlash::read32(uint32_t) 16
Adafruit_SPIFlash.cpp:260:6:virtual bool Adafruit_SPIFlash::readBlock(uint32_t, uint8_t*) 16
Adafruit_SPIFlash.cpp:272:6:virtual bool Adafruit_SPIFlash::writeBlock(uint32_t, const uint8_t*) 16
Adafruit_SPIFlash.cpp:38:1:Adafruit_SPIFlash::Adafruit_SPIFlash(Adafruit_FlashTransport*) 16
ArduinoFiles.h:95:10:virtual size_t PrintFile::write(uint8_t) 16
FatFile.cpp:1196:6:bool FatFile::sync() 16
FatFile.cpp:132:6:bool FatFile::createContiguous(FatFile*, const char*, uint32_t, uint32_t) 16
FatFile.cpp:164:6:bool FatFile::dirEntry(dir_t*) 16
FatFile.cpp:185:9:static uint8_t FatFile::dirName(const dir_t*, char*) 16
FatFile.cpp:568:6:bool FatFile::openCwd() 16
FatFile.cpp:690:6:bool FatFile::openRoot(FatVolume*) 16
FatFile.cpp:846:8:int8_t FatFile::readDir(dir_t*) 16
FatFileLFN.cpp:170:6:bool FatFile::openCluster(FatFile*) 16
FatFilePrint.cpp:168:6:static void FatFile::printFatTime(print_t*, uint16_t) 16
FatFilePrint.cpp:30:13:void print2u(print_t*, uint8_t) 16
FatVolume.cpp:28:10:cache_t* FatCache::read(uint32_t, uint8_t) 16
FatVolume.cpp:450:6:bool FatVolume::init(uint8_t) 16
FatVolume.cpp:51:6:bool FatCache::sync() 16
IPAddress.cpp:46:6:bool IPAddress::fromString(const char*) 16
MDNS.cpp:1150:5:int MDNS::setName(const char*) 16
MDNS.cpp:1171:5:int MDNS::addServiceRecord(const char*, uint16_t, MDNSServiceProtocol_t) 16
MDNS.cpp:1308:6:void MDNS::removeAllServiceRecords() 16
MDNS.cpp:1506:1:cpp) 16
Print.cpp:102:8:size_t Print::println(const __FlashStringHelper*) 16
Print.cpp:119:8:size_t Print::println(const String&) 16
Print.cpp:126:8:size_t Print::println(const char*) 16
Print.cpp:133:8:size_t Print::println(char) 16
Print.cpp:140:8:size_t Print::println(unsigned char, int) 16
Print.cpp:147:8:size_t Print::println(int, int) 16
Print.cpp:154:8:size_t Print::println(unsigned int, int) 16
Print.cpp:161:8:size_t Print::println(long int, int) 16
Print.cpp:168:8:size_t Print::println(long unsigned int, int) 16
Print.cpp:175:8:size_t Print::println(double, int) 16
Print.cpp:182:8:size_t Print::println(const Printable&) 16
Print.h:51:12:size_t Print::write(const char*) 16
Print.h:51:12:size_t Print::write(const char*) 16
SAMD21_USBDevice.cpp:11:6:void USBDevice_SAMD21G18x::reset() 16
SEGGER_RTT.c:1033:10:SEGGER_RTT_WriteString 16
SEGGER_RTT.c:1227:5:SEGGER_RTT_GetKey 16
SEGGER_RTT.c:1534:5:SEGGER_RTT_SetNameUpBuffer 16
SEGGER_RTT.c:1565:5:SEGGER_RTT_SetNameDownBuffer 16
SEGGER_RTT.c:1596:5:SEGGER_RTT_SetFlagsUpBuffer 16
SEGGER_RTT.c:1627:5:SEGGER_RTT_SetFlagsDownBuffer 16
SEGGER_RTT.c:462:13:0 16
SEGGER_RTT.c:925:10:SEGGER_RTT_WriteNoLock 16
SERCOM.cpp:307:6:void SERCOM::setDataOrderSPI(SercomDataOrder) 16
SERCOM.cpp:322:6:void SERCOM::setBaudrateSPI(uint8_t) 16
SERCOM.cpp:336:6:void SERCOM::setClockModeSPI(SercomSpiClockMode) 16
SERCOM.cpp:469:6:void SERCOM::initSlaveWIRE(uint8_t, bool) 16
SERCOM.cpp:499:6:void SERCOM::initMasterWIRE(uint32_t) 16
SERCOM.cpp:94:6:void SERCOM::initFrame(SercomUartCharSize, SercomDataOrder, SercomParityMode, SercomNumberStopBit) 16
SPI.cpp:213:10:uint16_t SPIClass::transfer16(uint16_t) 16
SPI.cpp:229:6:void SPIClass::transfer(void*, size_t) 16
SPI.cpp:31:1:SPIClass::SPIClass(SERCOM*, uint8_t, uint8_t, uint8_t, SercomSpiTXPad, SercomRXPad) 16
SPI.cpp:47:6:void SPIClass::begin() 16
SdSpiCard.cpp:423:6:bool SdSpiCard::isBusy() 16
SdSpiCard.cpp:441:6:bool SdSpiCard::isTimedOut(uint16_t, uint16_t) 16
SdSpiCard.cpp:452:6:virtual bool SdSpiCard::readBlock(uint32_t, uint8_t*) 16
SdSpiCard.cpp:532:6:bool SdSpiCard::readOCR(uint32_t*) 16
SdSpiCard.cpp:551:6:bool SdSpiCard::readRegister(uint8_t, void*) 16
SdSpiCard.cpp:585:6:bool SdSpiCard::readStatus(uint8_t*) 16
SdSpiCard.cpp:602:6:void SdSpiCard::spiStart() 16
SdSpiCard.cpp:633:6:bool SdSpiCard::waitNotBusy(uint16_t) 16
SdSpiCard.cpp:654:6:virtual bool SdSpiCard::writeBlock(uint32_t, const uint8_t*) 16
SdSpiCard.cpp:708:6:bool SdSpiCard::writeData(const uint8_t*) 16
SdSpiCard.cpp:766:6:bool SdSpiCard::writeStart(uint32_t, uint32_t) 16
SdSpiCard.cpp:788:6:bool SdSpiCard::writeStop() 16
SdSpiCard.h:261:11:uint8_t SdSpiCard::cardAcmd(uint8_t, uint32_t) 16
SdSpiCardEX.cpp:26:6:virtual bool SdSpiCardEX::readBlock(uint32_t, uint8_t*) 16
SdSpiCardEX.cpp:68:6:virtual bool SdSpiCardEX::writeBlock(uint32_t, const uint8_t*) 16
SdioCardEX.cpp:33:6:virtual bool SdioCardEX::readBlock(uint32_t, uint8_t*) 16
SdioCardEX.cpp:79:6:virtual bool SdioCardEX::writeBlock(uint32_t, const uint8_t*) 16
StdioStream.cpp:155:5:int StdioStream::fputs(const char*) 16
StdioStream.cpp:182:5:int StdioStream::fseek(int32_t, int) 16
StdioStream.cpp:280:5:int StdioStream::printDec(signed char) 16
StdioStream.cpp:28:5:int StdioStream::fclose() 16
StdioStream.cpp:290:5:int StdioStream::printDec(int16_t) 16
StdioStream.cpp:329:5:int StdioStream::printDec(int32_t) 16
StdioStream.cpp:368:5:int StdioStream::printHex(uint32_t) 16
StdioStream.cpp:435:6:bool StdioStream::fillBuf() 16
StdioStream.cpp:463:6:bool StdioStream::flushBuf() 16
StdioStream.cpp:47:5:int StdioStream::fflush() 16
StdioStream.cpp:487:5:int StdioStream::flushPut(uint8_t) 16
StdioStream.cpp:495:7:char* StdioStream::fmtSpace(uint8_t) 16
Stream.cpp:232:8:String Stream::readString() 16
Stream.cpp:244:8:String Stream::readStringUntil(char) 16
Stream.cpp:56:5:int Stream::peekNextDigit(LookaheadMode, bool) 16
Stream.cpp:93:7:bool Stream::find(char*) 16
TinyGPS.cpp:124:15:long unsigned int TinyGPS::parse_decimal() 16
TinyGPS.cpp:144:15:long unsigned int TinyGPS::parse_degrees() 16
TinyGPS.cpp:166:6:bool TinyGPS::term_complete() 16
TinyGPS.cpp:351:6:void TinyGPS::get_position(long int*, long int*, long unsigned int*) 16
TinyGPS.cpp:360:6:void TinyGPS::get_datetime(long unsigned int*, long unsigned int*, long unsigned int*) 16
TinyGPS.cpp:60:6:bool TinyGPS::encode(char) 16
U8g2lib.h:2381:7:constexpr U8G2_SH1106_128X64_NONAME_F_HW_I2C::U8G2_SH1106_128X64_NONAME_F_HW_I2C(const U8G2_SH1106_128X64_NONAME_F_HW_I2C&) 16
U8g2lib.h:298:12:virtual size_t U8G2::write(uint8_t) 16
U8x8lib.cpp:52:8:virtual size_t U8X8::write(uint8_t) 16
U8x8lib.cpp:76:20:uint8_t u8x8_gpio_and_delay_arduino(u8x8_t*, uint8_t, uint8_t, void*) 16
Uart.cpp:144:5:virtual int Uart::read() 16
Uart.cpp:158:8:virtual size_t Uart::write(uint8_t) 16
WString.cpp:157:15:unsigned char String::changeBuffer(unsigned int) 16
WString.cpp:172:10:String& String::copy(const char*, unsigned int) 16
WString.cpp:183:10:String& String::copy(const __FlashStringHelper*, unsigned int) 16
WString.cpp:195:6:void String::move(String&) 16
WString.cpp:240:10:String& String::operator=(const char*) 16
WString.cpp:248:10:String& String::operator=(const __FlashStringHelper*) 16
WString.cpp:265:15:unsigned char String::concat(const char*, unsigned int) 16
WString.cpp:276:15:unsigned char String::concat(const char*) 16
WString.cpp:282:15:unsigned char String::concat(char) 16
WString.cpp:290:15:unsigned char String::concat(unsigned char) 16
WString.cpp:30:1:String::String(const char*) 16
WString.cpp:339:15:unsigned char String::concat(const __FlashStringHelper*) 16
WString.cpp:362:19:StringSumHelper& operator+(const StringSumHelper&, const char*) 16
WString.cpp:539:6:void String::getBytes(unsigned char*, unsigned int, unsigned int) const 16
WString.cpp:61:1:String::String(char) 16
WString.cpp:695:6:void String::remove(unsigned int, unsigned int) 16
WatchdogSAMD.cpp:11:5:int WatchdogSAMD::enable(int, bool) 16
WiFi.cpp:1197:15:cpp) 16
WiFi.cpp:365:9:uint8_t WiFiClass::begin() 16
WiFi.cpp:479:9:uint8_t WiFiClass::beginAP(const char*, uint8_t) 16
WiFi.cpp:484:9:uint8_t WiFiClass::beginAP(const char*, uint8_t, const char*) 16
WiFi.cpp:510:9:uint8_t WiFiClass::beginAP(const char*, const char*, uint8_t) 16
WiFi.cpp:719:6:void WiFiClass::end() 16
WiFi.cpp:753:10:uint8_t* WiFiClass::macAddress(uint8_t*) 16
WiFi.cpp:810:10:uint8_t* WiFiClass::remoteMacAddress(uint8_t*) 16
WiFi.cpp:827:9:int32_t WiFiClass::RSSI() 16
WiFi.cpp:926:9:uint8_t WiFiClass::encryptionType() 16
WiFiClient.cpp:102:8:virtual size_t WiFiClient::write(uint8_t) 16
WiFiClient.cpp:107:8:virtual size_t WiFiClient::write(const uint8_t*, size_t) 16
WiFiClient.cpp:133:5:virtual int WiFiClient::read() 16
WiFiClient.cpp:217:11:virtual IPAddress WiFiClient::remoteIP() 16
WiFiClient.cpp:226:10:virtual uint16_t WiFiClient::remotePort() 16
WiFiClient.cpp:233:1:cpp) 16
WiFiClient.cpp:36:5:int WiFiClient::connectSSL(const char*, uint16_t, bool) 16
WiFiClient.cpp:46:5:virtual int WiFiClient::connect(const char*, uint16_t) 16
WiFiMDNSResponder.cpp:220:1:cpp) 16
WiFiSSLClient.cpp:32:5:virtual int WiFiSSLClient::connect(IPAddress, uint16_t) 16
WiFiSSLClient.cpp:40:1:cpp) 16
WiFiServer.cpp:111:8:virtual size_t WiFiServer::write(uint8_t) 16
WiFiServer.cpp:131:1:cpp) 16
WiFiSocket.cpp:179:7:uint8 WiFiSocketClass::connected(SOCKET) 16
WiFiSocket.cpp:186:7:uint8 WiFiSocketClass::listening(SOCKET) 16
WiFiSocket.cpp:193:7:uint8 WiFiSocketClass::bound(SOCKET) 16
WiFiSocket.cpp:200:5:int WiFiSocketClass::available(SOCKET) 16
WiFiSocket.cpp:211:5:int WiFiSocketClass::peek(SOCKET) 16
WiFiSocket.cpp:352:7:sint8 WiFiSocketClass::close(SOCKET) 16
WiFiSocket.cpp:389:8:SOCKET WiFiSocketClass::accepted(SOCKET) 16
WiFiSocket.cpp:539:27:cpp) 16
WiFiSocket.cpp:57:1:WiFiSocketClass::WiFiSocketClass() 16
WiFiUdp.cpp:153:8:virtual size_t WiFiUDP::write(uint8_t) 16
WiFiUdp.cpp:158:8:virtual size_t WiFiUDP::write(const uint8_t*, size_t) 16
WiFiUdp.cpp:189:5:virtual int WiFiUDP::read() 16
WiFiUdp.cpp:236:11:virtual IPAddress WiFiUDP::remoteIP() 16
WiFiUdp.cpp:245:10:virtual uint16_t WiFiUDP::remotePort() 16
WiFiUdp.cpp:252:1:cpp) 16
WiFiUdp.h:48:19:virtual uint8_t WiFiUDP::beginMulti(IPAddress, uint16_t) 16
Wire.cpp:119:9:uint8_t TwoWire::endTransmission(bool) 16
Wire.cpp:212:6:void TwoWire::onService() 16
Wire.cpp:37:6:void TwoWire::begin() 16
Wire.cpp:46:6:void TwoWire::begin(uint8_t, bool) 16
Wire.cpp:55:6:void TwoWire::setClock(uint32_t) 16
ads_1219.cpp:50:6:bool fk::Ads1219::read_single_ended(int32_t, int32_t&) 16
ads_1219.cpp:95:6:bool fk::Ads1219::read_dfferential(uint8_t, int32_t&) 16
aggregated_weather.cpp:118:14:fk::ModuleReturn fk::AggregatedWeather::service(fk::ModuleContext, fk::Pool&) 16
api_handler.cpp:435:1:cpp) 16
arduino.cpp:34:10:) 16
assert.cpp:9:6:void __cfy_assert(const char*, const char*, int) 16
atlas_api_reply.cpp:35:6:bool fk::AtlasApiReply::status_reply(const uint8_t*, size_t) 16
atlas_module.cpp:174:27:virtual const ModuleConfiguration fk::AtlasModule::get_configuration(fk::Pool&) 16
atlas_module.cpp:80:14:virtual fk::ModuleReturn fk::AtlasModule::service(fk::ModuleContext, fk::Pool&) 16
atlas_protocol.cpp:6:26:fk_atlas_WireAtlasQuery* fk::fk_atlas_query_prepare_decoding(fk_atlas_WireAtlasQuery*, fk::Pool*) 16
backup_worker.cpp:181:1:cpp) 16
bad_blocks.cpp:41:6:bool fk::BadBlocks::is_block_bad(uint32_t) const 16
battery_gauge.cpp:17:1:cpp) 16
board.cpp:28:9:int32_t fk::TwoWireWrapper::write_register_u8(uint8_t, uint8_t, uint8_t) 16
board.cpp:36:9:int32_t fk::TwoWireWrapper::write_u8(uint8_t, uint8_t) 16
board.cpp:75:9:int32_t fk::TwoWireWrapper::write_register_u16(uint8_t, uint8_t, uint16_t) 16
board.cpp:84:9:int32_t fk::TwoWireWrapper::write_register_u32(uint8_t, uint8_t, uint32_t) 16
buttons.cpp:75:1:cpp) 16
caching_memory.cpp:95:9:virtual int32_t fk::CachingMemory::flush() 16
clock.cpp:308:10:uint32_t fk::get_clock_now() 16
collections.h:93:10:void fk::collection<T>::add(T) [with T = fk::NetworkSettings] 16
configure.cpp:10:6:bool fk::ModuleConfigurer::erase(fk::ModulePosition) 16
configure_module_worker.cpp:20:1:fk::ConfigureModuleWorker::ConfigureModuleWorker(fk::ModulePosition, ModuleHeader) 16
connection.cpp:28:9:virtual int32_t fk::Connection::read(uint8_t*, size_t) 16
connection.cpp:40:9:virtual int32_t fk::Connection::write(const uint8_t*, size_t) 16
connection.cpp:7:1:fk::Connection::Connection(fk::Pool*, fk::NetworkConnection*, uint32_t) 16
contexts.cpp:20:17:fk::ReadingsContext fk::ScanningContext::readings(fk::ModulePosition, fk::ModuleReadingsCollection&, fk::Pool&) 16
cpool.cpp:112:6:void fk::ConnectionPool::update_statistics(fk::Connection*) 16
cpool.cpp:11:1:fk::ConnectionPool::ConnectionPool(fk::HttpRouter&) 16
cpool.cpp:143:1:cpp) 16
cpool.cpp:15:1:fk::ConnectionPool::~ConnectionPool() 16
crc.c:21:10:crc32_checksum 16
crc32.cpp:20:10:uint32_t phylum::crc32_checksum(uint32_t, const uint8_t*, size_t) 16
data_chain.cpp:41:9:int32_t phylum::data_chain::skip_bytes(phylum::file_size_t) 16
data_chain.cpp:96:9:virtual int32_t phylum::data_chain::seek_end_of_buffer(phylum::page_lock&) 16
data_record.cpp:6:21:fk_data_DataRecord& fk::DataRecord::for_decoding(fk::Pool&) 16
debug.cpp:35:1:cpp) 16
debug_connection.cpp:14:6:virtual bool fk::DebugServerConnection::service() 16
debug_connection.cpp:7:1:fk::DebugServerConnection::DebugServerConnection(fk::Pool*, fk::NetworkConnection*, uint32_t) 16
debug_udp.cpp:102:5:virtual int fk::DebugUDP::beginPacket(IPAddress, uint16_t) 16
debug_udp.cpp:143:8:virtual size_t fk::DebugUDP::write(uint8_t) 16
debug_udp.cpp:148:8:virtual size_t fk::DebugUDP::write(const uint8_t*, size_t) 16
debug_udp.cpp:177:1:cpp) 16
debug_udp.cpp:20:6:void fk::DebugUDP::pool(fk::Pool*) 16
debug_udp.cpp:29:6:void fk::DebugUDP::dns_pool(fk::Pool*) 16
debug_udp.h:33:13:virtual uint8_t fk::DebugUDP::beginMulticast(IPAddress, uint16_t) 16
debugging.cpp:146:6:virtual void fk::DebuggerOfLastResort::message(const char*) 16
default_routes.h:54:10:void fk::DefaultRoutes::add_routes(fk::HttpRouter&) 16
delay.c:64:6:delay 16
delimited_buffer.h:209:13:int32_t phylum::delimited_buffer::skip(size_t) 16
delimited_buffer.h:327:14:bool phylum::delimited_buffer::iterator::read() 16
delimited_buffer.h:327:14:bool phylum::delimited_buffer::iterator::read() 16
delimited_buffer.h:327:14:bool phylum::delimited_buffer::iterator::read() 16
delimited_buffer.h:327:14:bool phylum::delimited_buffer::iterator::read() 16
delimited_buffer.h:327:14:bool phylum::delimited_buffer::iterator::read() 16
delimited_buffer.h:327:14:bool phylum::delimited_buffer::iterator::read() 16
delimited_buffer.h:50:20:const TRecord* phylum::record_ptr::as() [with TRecord = phylum::data_chain_header_t] 16
delimited_buffer.h:50:20:const TRecord* phylum::record_ptr::as() [with TRecord = phylum::entry_t] 16
delimited_buffer.h:50:20:const TRecord* phylum::record_ptr::as() [with TRecord = phylum::entry_t] 16
delimited_buffer.h:50:20:const TRecord* phylum::record_ptr::as() [with TRecord = phylum::entry_t] 16
delimited_buffer.h:50:20:const TRecord* phylum::record_ptr::as() [with TRecord = phylum::file_data_t] 16
delimited_buffer.h:50:20:const TRecord* phylum::record_ptr::as() [with TRecord = phylum::file_entry_t] 16
delimited_buffer.h:50:20:const TRecord* phylum::record_ptr::as() [with TRecord = phylum::free_sectors_t] 16
delimited_buffer.h:50:20:const TRecord* phylum::record_ptr::as() [with TRecord = phylum::sector_chain_header_t] 16
dhara_map.cpp:177:9:virtual int32_t phylum::dhara_sector_map::sync() 16
dhara_map.cpp:190:5:int phylum::dhara_sector_map::dhara_erase(const dhara_nand*, phylum::dhara_block_t, dhara_error_t*) 16
dhara_map.cpp:207:5:int phylum::dhara_sector_map::dhara_prog(const dhara_nand*, phylum::dhara_page_t, const uint8_t*, dhara_error_t*) 16
dhara_map.cpp:233:5:int phylum::dhara_sector_map::dhara_read(const dhara_nand*, phylum::dhara_page_t, size_t, size_t, uint8_t*, dhara_error_t*) 16
dhara_map.cpp:247:5:int phylum::dhara_sector_map::dhara_copy(const dhara_nand*, phylum::dhara_page_t, phylum::dhara_page_t, dhara_error_t*) 16
diagnostics_module.cpp:38:14:virtual fk::ModuleReturn fk::DiagnosticsModule::initialize(fk::ModuleContext, fk::Pool&) 16
diagnostics_module.cpp:48:14:virtual fk::ModuleReturn fk::DiagnosticsModule::service(fk::ModuleContext, fk::Pool&) 16
directory_chain.cpp:130:9:virtual int32_t phylum::directory_chain::file_trees(phylum::file_id_t, phylum::tree_ptr_t, phylum::tree_ptr_t) 16
directory_chain.cpp:218:12:virtual phylum::found_file phylum::directory_chain::open() 16
directory_tree.cpp:122:12:virtual phylum::found_file phylum::directory_tree::open() 16
display.cpp:202:1:cpp) 16
display.cpp:24:10:fk::Display* fk::get_display() 16
display.cpp:54:10:11(fk::DisplayView**, fk::DisplayView&) 16
display.cpp:86:10:virtual void fk::MainViewController::show_build() 16
display.cpp:95:10:virtual void fk::MainViewController::show_module_menu(uint8_t) 16
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_tools_menu()::__lambda38] 16
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_tools_menu()::__lambda41] 16
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_tools_menu()::__lambda48] 16
display.h:164:10:void fk::SelectableLambdaOption<TSelect, TSelected>::refresh(const fk::GlobalState*) [with TSelect = fk::MenuView::create_network_menu()::__lambda52; TSelected = fk::MenuView::create_network_menu()::__lambda53] 16
display.h:164:10:void fk::SelectableLambdaOption<TSelect, TSelected>::refresh(const fk::GlobalState*) [with TSelect = fk::MenuView::create_network_menu()::__lambda54; TSelected = fk::MenuView::create_network_menu()::__lambda55] 16
display.h:164:10:void fk::SelectableLambdaOption<TSelect, TSelected>::refresh(const fk::GlobalState*) [with TSelect = fk::MenuView::create_tools_menu()::__lambda31; TSelected = fk::MenuView::create_tools_menu()::__lambda32] 16
display.h:164:10:void fk::SelectableLambdaOption<TSelect, TSelected>::refresh(const fk::GlobalState*) [with TSelect = fk::MenuView::create_tools_menu()::__lambda33; TSelected = fk::MenuView::create_tools_menu()::__lambda34] 16
display.h:180:10:void fk::MenuScreen::refresh(const fk::GlobalState*) 16
display_self_check_callbacks.cpp:28:6:void fk::DisplaySelfCheckCallbacks::append(const char*, fk::CheckStatus) 16
display_self_check_callbacks.cpp:43:6:void fk::DisplaySelfCheckCallbacks::append(const char*, fk::ModuleCheckStatus) 16
display_self_check_callbacks.cpp:5:1:fk::DisplaySelfCheckCallbacks::DisplaySelfCheckCallbacks() 16
display_self_check_callbacks.cpp:60:1:cpp) 16
display_self_check_callbacks.cpp:9:6:virtual void fk::DisplaySelfCheckCallbacks::update(fk::SelfCheckStatus) 16
distance_module.cpp:42:14:virtual fk::ModuleReturn fk::DistanceModule::service(fk::ModuleContext, fk::Pool&) 16
distance_module.cpp:8:1:fk::DistanceModule::DistanceModule(fk::Pool&) 16
dns_message.cpp:149:10:uint16_t fk::DNSReader::read_u16() 16
download_firmware_worker.cpp:129:1:cpp) 16
download_handler.cpp:153:1:cpp) 16
dump_flash_memory_worker.cpp:115:1:cpp) 16
eeprom.cpp:107:6:bool fk::ModuleEeprom::write_header(ModuleHeader&) 16
eeprom.cpp:156:6:bool fk::ModuleEeprom::erase_all() 16
enable_module_power.cpp:32:6:bool fk::EnableModulePower::enable() 16
export_data_worker.cpp:19:1:fk::ExportDataWorker::ExportDataWorker(fk::DataMemory*) 16
export_data_worker.cpp:214:1:cpp) 16
external.c:16:10:fkb_external_println 16
external.c:25:10:fkb_external_vprintf 16
external.c:62:9:fkb_bytes_to_hex 16
external.c:8:10:fkb_external_printf 16
factory_wipe.cpp:27:1:cpp) 16
factory_wipe_worker.cpp:59:1:cpp) 16
file.cpp:259:6:bool fk::File::seek_end() 16
file.cpp:264:6:bool fk::File::seek_beginning() 16
file.cpp:33:1:fk::File::File(fk::Storage*, fk::FileNumber, fk::Pool&) 16
file.cpp:38:1:fk::File::File(fk::File&&) 16
file.cpp:50:7:fk::File& fk::File::operator=(fk::File&&) 16
file.cpp:765:14:pb_ostream_t fk::pb_ostream_from_file(fk::File*) 16
file_appender.cpp:181:10:uint32_t phylum::file_appender::u32(uint8_t) 16
file_appender.cpp:20:19:phylum::data_chain_cursor phylum::file_appender::cursor() 16
file_handler.cpp:106:6:virtual bool fk::DownloadFileHandler::handle(fk::HttpServerConnection*, fk::Pool&) 16
file_handler.cpp:112:1:cpp) 16
file_reader.cpp:76:10:uint32_t phylum::file_reader::u32(uint8_t) 16
firmware_manager.cpp:13:6:bool fk::FirmwareManager::backup_bootloader(fk::Pool&) 16
flash.cpp:55:6:bool fk::Flash::initialize() 16
flash.cpp:85:9:virtual int32_t fk::Flash::erase(uint32_t, size_t) 16
free_sectors_chain.cpp:67:9:int32_t phylum::free_sectors_chain::add_chain(phylum::dhara_sector_t) 16
fsck_worker.cpp:22:1:cpp) 16
fstream.cpp:101:6:void FatStreamBase::putch(char) 16
fstream.cpp:111:6:void FatStreamBase::putstr(const char*) 16
fstream.cpp:169:6:void FatStreamBase::write(char) 16
functional:1931:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = phylum::data_chain::read(uint8_t*, size_t)::__lambda3] 16
functional:1931:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = phylum::data_chain::read_delimiter(uint32_t*)::__lambda2] 16
functional:1931:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = phylum::data_chain::write(const uint8_t*, size_t)::__lambda1] 16
functional:1931:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = phylum::data_chain::write_chain(std::function<long int(phylum::general_buffer<unsigned char>, bool&)>)::__lambda4::__lambda5] 16
functional:1931:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = phylum::data_chain::write_chain(std::function<long int(phylum::general_buffer<unsigned char>, bool&)>)::__lambda4] 16
functional:1931:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = phylum::file_appender::make_data_chain()::__lambda3] 16
functional:1931:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = phylum::file_reader::read(uint8_t*, size_t)::__lambda1] 16
functional:1931:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = phylum::integer_chain::read(uint32_t*, size_t)::__lambda2] 16
functional:1931:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = phylum::integer_chain::write(const uint32_t*, size_t)::__lambda1] 16
functional:1931:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = phylum::paging_delimited_buffer::flush(phylum::dhara_sector_t)::__lambda3] 16
functional:1931:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = phylum::paging_delimited_buffer::replace(phylum::dhara_sector_t, bool, bool)::__lambda1] 16
functional:1931:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = phylum::paging_delimited_buffer::replace(phylum::dhara_sector_t, bool, bool)::__lambda2] 16
functional:1931:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = phylum::sector_chain::grow_tail(phylum::page_lock&)::__lambda3] 16
functional:1931:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = phylum::sector_chain::prepare_sector(phylum::page_lock&, phylum::dhara_sector_t, bool)::__lambda1] 16
functional:1931:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = phylum::super_chain::update(phylum::tree_ptr_t)::__lambda1] 16
functional:1931:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = std::_Bind<std::_Mem_fn<void (phylum::working_buffers::*)(const unsigned char*)>(phylum::working_buffers*, std::_Placeholder<1>)>] 16
functional:1931:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = std::_Bind<std::_Mem_fn<void (phylum::working_buffers::*)(const unsigned char*)>(phylum::working_buffers*, std::_Placeholder<1>)>] 16
functional:1931:2:static bool std::_Function_base::_Base_manager<_Functor>::_M_manager(std::_Any_data&, const std::_Any_data&, std::_Manager_operation) [with _Functor = std::_Bind<std::_Mem_fn<void (phylum::working_buffers::*)(const unsigned char*)>(phylum::working_buffers*, std::_Placeholder<1>)>] 16
functional:2054:7:) [with _Res = long int; _Functor = phylum::sector_chain::grow_tail(phylum::page_lock&)::__lambda3; _ArgTypes = {phylum::sector_chain_header_t*}] 16
functional:2351:12:)>&) [with _Res = void; _ArgTypes = {const unsigned char*}] 16
functional:2351:12:)>&) [with _Res = void; _ArgTypes = {const unsigned char*}] 16
functional:2351:12:)>&) [with _Res = void; _ArgTypes = {const unsigned char*}] 16
functional:2351:12:)>&) [with _Res = void; _ArgTypes = {const unsigned char*}] 16
functional:2351:12:)>&) [with _Res = void; _ArgTypes = {const unsigned char*}] 16
functional:2351:12:)>&) [with _Res = void; _ArgTypes = {const unsigned char*}] 16
functional:2351:12:)>&) [with _Res = void; _ArgTypes = {const unsigned char*}] 16
functional:2351:12:)>&) [with _Res = void; _ArgTypes = {const unsigned char*}] 16
functional:2351:12:)>&) [with _Res = void; _ArgTypes = {const unsigned char*}] 16
functional:2351:12:)>&) [with _Res = void; _ArgTypes = {const unsigned char*}] 16
functional:2351:12:)>&) [with _Res = void; _ArgTypes = {const unsigned char*}] 16
functional:2459:5:) const [with _Res = long int; _ArgTypes = {long unsigned int, unsigned char*, unsigned int}] 16
gps.cpp:118:1:cpp) 16
hal_calendar.c:240:13:3 16
hal_calendar.c:357:16:calendar_add_new_alarm 16
hal_calendar.c:566:9:calendar_get_date_time 16
hal_ext_irq.c:165:13:process_ext_irq 16
hal_rand_sync.c:101:6:rand_sync_read_buf8 16
hal_sha_sync.c:251:9:sha_sync_sha1_compute 16
hal_sha_sync.c:266:9:sha_sync_sha256_compute 16
hal_sha_sync.c:82:9:sha_sync_sha1_start 16
hal_timer.c:81:9:timer_start 16
hal_usb_device.c:196:13:usb_d_cb_trans_more 16
hal_usb_device.c:379:6:usb_d_ep_deinit 16
hal_usb_device.c:390:9:usb_d_ep_enable 16
hal_usb_device.c:406:6:usb_d_ep_disable 16
hal_usb_device.c:486:6:usb_d_ep_abort 16
hal_usb_device.c:551:9:usb_d_ep_halt 16
hal_usb_device.c:562:6:usb_d_ep_register_callback 16
hpl_aes.c:615:9:_aes_sync_gcm_start 16
hpl_cmcc.c:105:9:_cmcc_enable_data_cache 16
hpl_cmcc.c:129:9:_cmcc_enable_inst_cache 16
hpl_cmcc.c:153:9:_cmcc_enable_clock_gating 16
hpl_cmcc.c:177:9:_cmcc_configure_cache_size 16
hpl_cmcc.c:201:9:_cmcc_lock_way 16
hpl_cmcc.c:224:9:_cmcc_unlock_way 16
hpl_cmcc.c:248:9:_cmcc_invalidate_by_line 16
hpl_cmcc.c:77:9:_cmcc_configure 16
hpl_eic.c:179:9:_ext_irq_deinit 16
hpl_eic.c:98:9:_ext_irq_init 16
hpl_nvmctrl.c:353:13:_flash_program 16
hpl_nvmctrl.c:481:9:_user_area_read 16
hpl_nvmctrl.c:513:10:_user_area_read_bits 16
hpl_pac.c:107:9:_periph_get_lock_state 16
hpl_ramecc.c:71:6:RAMECC_Handler 16
hpl_rtc.c:100:9:_calendar_deinit 16
hpl_rtc.c:209:9:_tamper_enable_debounce_asynchronous 16
hpl_rtc.c:234:9:_tamper_disable_debounce_asynchronous 16
hpl_rtc.c:259:9:_tamper_enable_debounce_majority 16
hpl_rtc.c:285:9:_tamper_disable_debounce_majority 16
hpl_rtc.c:45:9:_calendar_init 16
hpl_sercom.c:1118:9:_i2c_m_async_init 16
hpl_sercom.c:1536:23:_i2c_m_enable_implementation 16
hpl_sercom.c:1692:9:_i2c_s_sync_init 16
hpl_sercom.c:1710:9:_i2c_s_async_init 16
hpl_sercom.c:1927:16:_i2c_s_init 16
hpl_sercom.c:197:9:_usart_async_init 16
hpl_sercom.c:2157:16:_spi_async_enable 16
hpl_sercom.c:2190:16:_spi_async_disable 16
hpl_sercom.c:2210:16:_spi_set_mode 16
hpl_sercom.c:2252:16:_spi_set_char_size 16
hpl_sercom.c:2276:16:_spi_set_data_order 16
hpl_sercom.c:2395:9:_spi_m_async_init 16
hpl_sercom.c:601:16:_usart_init 16
hpl_tc.c:182:6:_timer_deinit 16
hpl_usb.c:1211:13:_usb_d_dev_handle_setup 16
hpl_usb.c:1432:13:_usb_d_dev_reset_epts 16
hpl_usb.c:1756:6:_usb_d_dev_ep_disable 16
hpl_usb.c:1828:9:_usb_d_dev_ep_stall 16
hpl_usb.c:1983:6:_usb_d_dev_ep_abort 16
hpl_usb.c:1994:9:_usb_d_dev_ep_get_status 16
http_connection.cpp:64:6:bool fk::HttpConnection::read_headers() 16
http_parser.c:2225:1:http_parser_init 16
http_reply.cpp:18:1:fk::HttpReply::HttpReply(fk::Pool&, const fk::GlobalState*) 16
http_server_connection.cpp:118:9:int32_t fk::HttpServerConnection::write(const fk_app_HttpReply*) 16
http_server_connection.cpp:43:9:virtual int32_t fk::HttpServerConnection::read(uint8_t*, size_t) 16
idle.cpp:9:6:void fk::task_handler_idle(void*) 16
ina219.cpp:67:13:bool fk::ina219_write(fk::TwoWireWrapper&, uint8_t, uint8_t, uint16_t) 16
io.cpp:114:16:fk::BufferedReader fk::BufferedReader::remaining() const 16
io.cpp:125:13:bool fk::read_callback(pb_istream_t*, uint8_t*, size_t) 16
io.cpp:134:14:pb_ostream_t fk::pb_ostream_from_writable(fk::Writer*) 16
io.cpp:139:14:pb_istream_t fk::pb_istream_from_readable(fk::Reader*) 16
io.cpp:147:6:void fk::Buffer::write(char) 16
io.h:102:14:fk::StackBufferedWriter<Size>::StackBufferedWriter(fk::Writer*) [with unsigned int Size = 128u] 16
io.h:22:13:int32_t fk::Writer::write_u16(uint16_t) 16
io.h:32:13:uint8_t fk::Reader::read_u8() 16
ipc.cpp:17:1:cpp) 16
istream.cpp:117:6:void istream::getChar(char*) 16
istream.cpp:348:10:istream& istream::ignore(ios_base::streamsize, int) 16
istream.cpp:380:9:int16_t istream::readSkip() 16
istream.cpp:389:6:void istream::skipWhite() 16
istream.cpp:42:10:istream& istream::get(char&) 16
journal.c:513:14:dhara_journal_peek 16
journal.c:545:6:dhara_journal_dequeue 16
journal.c:847:14:dhara_journal_next_recoverable 16
leds.cpp:23:1:cpp) 16
linux_battery_gauge.cpp:28:1:cpp) 16
linux_buttons.cpp:20:1:cpp) 16
linux_leds.cpp:35:1:cpp) 16
linux_sd_card.cpp:80:1:cpp) 16
linux_sd_card.h:41:1:h) 16
linux_sd_card.h:41:1:h) 16
linux_sd_card.h:41:1:h) 16
linux_sd_card.h:41:1:h) 16
loading.c:26:10:fkb_verify_exec_state 16
log_buffer.h:26:14:void fk::log_buffer::appender::append(char) 16
logging.cpp:103:6:) 16
logging.cpp:130:6:void fk::fk_logs_saved_free() 16
logging.cpp:200:6:bool fk::fk_logging_initialize() 16
logging.cpp:285:6:) 16
logging.cpp:35:13:void fk::write_logs_buffer(char, void*) 16
logging.cpp:368:6:) 16
logging.cpp:77:6:void valogf(LogLevels, const char*, const char*, va_list) 16
logging.cpp:98:6:void fk::fk_logs_saved_write(bool) 16
logs_handler.cpp:100:6:virtual bool fk::DownloadLogsHandler::handle(fk::HttpServerConnection*, fk::Pool&) 16
logs_handler.cpp:106:1:cpp) 16
lora_packetizer.cpp:53:10:void fk::LoraRecord::clear() 16
lora_packetizer.cpp:69:12:2(uint8_t, uint8_t) const 16
lwcron.cpp:100:10:virtual uint32_t lwcron::PeriodicTask::getNextTime(lwcron::DateTime, uint32_t) 16
lwcron.cpp:141:10:static lwcron::CronSpec lwcron::CronSpec::everyFiveMinutes() 16
lwcron.cpp:151:10:static lwcron::CronSpec lwcron::CronSpec::everyTwentyMinutes() 16
lwcron.cpp:161:6:void lwcron::CronSpec::set(lwcron::TimeOfDay) 16
lwcron.cpp:65:10:uint32_t lwcron::DateTime::unix_time() 16
lwcron.h:193:5:lwcron::CronSpec::CronSpec() 16
lwcron.h:193:5:lwcron::CronSpec::CronSpec() 16
lwcron.h:217:17:bool lwcron::CronSpec::operator==(const lwcron::CronSpec&) const 16
m2m_hif.c:97:14:hif_set_rx_done 16
m2m_ota.c:355:15:m2m_ota_get_firmware_version 16
m2m_periph.c:120:7:m2m_periph_gpio_set_dir 16
m2m_periph.c:125:7:m2m_periph_gpio_set_val 16
m2m_periph.c:130:7:m2m_periph_gpio_get_val 16
m2m_wifi.c:1035:7:m2m_wifi_get_otp_mac_address 16
m2m_wifi.c:1195:7:m2m_wifi_get_firmware_version 16
m2m_wifi.c:546:7:m2m_wifi_connect 16
main.c:127:9:bl_button_pressed 16
main.c:32:9:bl_upgrade_firmware_necessary 16
main.cpp:164:1:cpp) 16
map.c:182:5:dhara_map_find 16
map.c:308:12:auto_gc 16
map.c:71:6:dhara_map_init 16
math_helper.c:164:10:arm_compare_fixed_q15 16
math_helper.c:192:10:arm_compare_fixed_q31 16
math_helper.c:62:7:arm_snr_f32 16
mdns.cpp:102:1:cpp) 16
mdns.cpp:19:1:fk::MDNSDiscovery::MDNSDiscovery() 16
mdns.cpp:90:6:void fk::MDNSDiscovery::stop() 16
mdns_pool_allocator.h:18:11:virtual void* fk::MDNSPoolAllocator::malloc(size_t) 16
memory.cpp:100:9:virtual int32_t fk::BankedDataMemory::flush() 16
memory.cpp:124:15:virtual fk::FlashGeometry fk::TranslatingMemory::geometry() const 16
memory.cpp:137:21:fk::StandardPageMemInfo fk::fk_standard_page_meminfo() 16
memory.cpp:138:9:virtual int32_t fk::TranslatingMemory::erase(uint32_t, size_t) 16
memory.cpp:146:9:virtual int32_t fk::TranslatingMemory::copy_page(uint32_t, uint32_t, size_t) 16
memory.cpp:162:6:void fk::fk_memory_garble(void*, size_t) 16
memory.cpp:66:15:virtual fk::FlashGeometry fk::BankedDataMemory::geometry() const 16
memory.h:58:10:6(const uint32_t*, uint32_t) 16
memory.h:58:10:8(const uint32_t*, uint32_t) 16
menu_view.cpp:122:10:virtual void fk::ToggleWifiOption::on_selected() 16
menu_view.cpp:151:1:fk::MenuView::MenuView(fk::ViewController*, fk::Pool&) 16
menu_view.cpp:203:6:void fk::MenuView::create_module_bays_menu() 16
menu_view.cpp:705:6:void fk::MenuView::create_schedules_menu() 16
menu_view.cpp:853:13:static fk::MenuOption* fk::MenuView::selected(fk::MenuScreen&) 16
menu_view.cpp:887:1:cpp) 16
meta_record.cpp:40:21:fk_data_DataRecord& fk::MetaRecord::for_decoding(fk::Pool&) 16
metal_battery_gauge.cpp:117:1:cpp) 16
metal_board.cpp:146:6:void fk::Board::signal_eeprom(uint8_t) 16
metal_board.cpp:201:6:bool fk::SpiWrapper::simple_command(uint8_t) 16
metal_board.cpp:205:6:bool fk::SpiWrapper::complex_command(uint8_t*, uint32_t) 16
metal_board.cpp:209:6:bool fk::SpiWrapper::read_command(uint8_t, uint8_t*, uint32_t) 16
metal_board.cpp:213:6:bool fk::SpiWrapper::write_command(uint8_t, uint8_t*, uint32_t) 16
metal_board.cpp:394:13:bool fk::i2c_recover(uint8_t, uint8_t) 16
metal_board.cpp:437:9:int32_t fk::TwoWireWrapper::recover() 16
metal_board.cpp:84:6:void fk::Board::disable_everything() 16
metal_buttons.cpp:75:1:cpp) 16
metal_gps.cpp:125:1:cpp) 16
metal_ipc.cpp:183:6:virtual bool fk::MetalIPC::has_running_worker(fk::WorkerCategory) 16
metal_ipc.cpp:219:6:virtual void fk::MetalIPC::verify() 16
metal_ipc.cpp:231:6:virtual fk::Lock fk::MetalMutex::acquire(uint32_t) 16
metal_ipc.cpp:257:6:virtual fk::Lock fk::MetalRwLock::acquire_read(uint32_t) 16
metal_ipc.cpp:268:6:virtual fk::Lock fk::MetalRwLock::acquire_write(uint32_t) 16
metal_ipc.cpp:287:1:cpp) 16
metal_ipc.cpp:47:6:virtual bool fk::MetalIPC::enqueue_activity(fk::Activity*) 16
metal_ipc.cpp:52:6:virtual bool fk::MetalIPC::dequeue_activity(fk::Activity**) 16
metal_ipc.cpp:61:6:virtual bool fk::MetalIPC::enqueue_button(fk::Button*) 16
metal_ipc.cpp:66:6:virtual bool fk::MetalIPC::dequeue_button(fk::Button**) 16
metal_ipc.cpp:75:6:virtual bool fk::MetalIPC::enqueue_topology(fk::Activity*) 16
metal_ipc.cpp:80:6:virtual bool fk::MetalIPC::dequeue_topology(fk::Activity**, uint32_t) 16
metal_ipc.cpp:89:6:bool fk::MetalIPC::can_launch(fk::WorkerCategory) 16
metal_leds.cpp:136:1:cpp) 16
metal_leds.cpp:23:6:virtual bool fk::MetalLeds::begin() 16
metal_leds.h:30:1:h) 16
metal_lora.cpp:86:6:virtual bool fk::Rn2903LoraNetwork::power(bool) 16
metal_memory.cpp:42:1:cpp) 16
metal_modmux.cpp:223:6:virtual bool fk::MetalModMux::power_cycle(fk::ModulePosition) 16
metal_modmux.cpp:318:6:void fk::MetalModMux::irq() 16
metal_modmux.cpp:373:1:cpp) 16
metal_network.cpp:137:9:virtual int32_t fk::MetalNetworkConnection::write(const char*) 16
metal_network.cpp:174:9:virtual int32_t fk::MetalNetworkConnection::vwritef(const char*, va_list) 16
metal_network.cpp:185:10:virtual uint32_t fk::MetalNetworkConnection::remote_address() 16
metal_network.cpp:302:31:virtual fk::PoolPointer<fk::NetworkListener>* fk::MetalNetwork::listen(uint16_t) 16
metal_network.cpp:312:6:virtual void fk::MetalNetwork::service(fk::Pool*) 16
metal_network.cpp:428:1:cpp) 16
metal_network.cpp:93:1:fk::MetalNetworkConnection::MetalNetworkConnection(fk::Pool*, WiFiClient) 16
metal_qspi.cpp:45:9:virtual int32_t fk::MetalQspiMemory::execute(uint32_t*, uint32_t*) 16
metal_qspi.cpp:94:1:cpp) 16
metal_sd_card.cpp:92:6:virtual void fk::MetalSdCard::name(const char*) 16
modmux.cpp:141:1:cpp) 16
modmux.cpp:64:1:fk::ModulesLock::ModulesLock(const fk::ModulesLock&) 16
modmux.cpp:67:1:fk::ModulesLock::ModulesLock(fk::Lock, fk::EepromLock, uint32_t) 16
modmux.cpp:70:1:fk::ModulesLock::ModulesLock(fk::ModulesLock&&) 16
module.cpp:7:16:fk::Module* fk_module_create_atlas(fk::Pool&) 16
module.cpp:7:16:fk::Module* fk_module_create_diagnostics(fk::Pool&) 16
module.cpp:7:16:fk::Module* fk_module_create_distance(fk::Pool&) 16
module.cpp:7:16:fk::Module* fk_module_create_random(fk::Pool&) 16
module.cpp:7:16:fk::Module* fk_module_create_water(fk::Pool&) 16
module.cpp:7:16:fk::Module* fk_module_create_weather(fk::Pool&) 16
module_factory.cpp:185:6:void fk::ModuleFactory::clear() 16
module_factory.cpp:33:1:fk::ModuleFactory::ModuleFactory() 16
module_handler.cpp:85:1:cpp) 16
module_readings.h:32:19:fk::ModuleReading fk::NModuleReadings<N>::get(int32_t) const [with unsigned int N = 10u; int32_t = long int] 16
module_readings.h:32:19:fk::ModuleReading fk::NModuleReadings<N>::get(int32_t) const [with unsigned int N = 12u; int32_t = long int] 16
module_readings.h:32:19:fk::ModuleReading fk::NModuleReadings<N>::get(int32_t) const [with unsigned int N = 16u; int32_t = long int] 16
module_readings.h:32:19:fk::ModuleReading fk::NModuleReadings<N>::get(int32_t) const [with unsigned int N = 1u; int32_t = long int] 16
module_readings.h:32:19:fk::ModuleReading fk::NModuleReadings<N>::get(int32_t) const [with unsigned int N = 3u; int32_t = long int] 16
module_readings.h:32:19:fk::ModuleReading fk::NModuleReadings<N>::get(int32_t) const [with unsigned int N = 4u; int32_t = long int] 16
module_readings.h:32:19:fk::ModuleReading fk::NModuleReadings<N>::get(int32_t) const [with unsigned int N = 4u; int32_t = long int] 16
module_readings.h:36:21:fk::ModuleReadings* fk::NModuleReadings<N>::clone(fk::Pool&) const [with unsigned int N = 10u] 16
module_readings.h:36:21:fk::ModuleReadings* fk::NModuleReadings<N>::clone(fk::Pool&) const [with unsigned int N = 12u] 16
module_readings.h:36:21:fk::ModuleReadings* fk::NModuleReadings<N>::clone(fk::Pool&) const [with unsigned int N = 16u] 16
module_readings.h:36:21:fk::ModuleReadings* fk::NModuleReadings<N>::clone(fk::Pool&) const [with unsigned int N = 1u] 16
module_readings.h:36:21:fk::ModuleReadings* fk::NModuleReadings<N>::clone(fk::Pool&) const [with unsigned int N = 4u] 16
module_readings.h:36:21:fk::ModuleReadings* fk::NModuleReadings<N>::clone(fk::Pool&) const [with unsigned int N = 4u] 16
mutex.c:82:13:osi_mutex_release 16
network.cpp:199:1:cpp) 16
network_services.cpp:101:6:void fk::NetworkServices::tick(fk::Pool*) 16
network_services.cpp:21:1:fk::NetworkServices::NetworkServices(fk::Network*) 16
network_task.cpp:124:1:cpp) 16
nmasic.c:109:6:chip_idle 16
nmasic.c:120:7:enable_interrupts 16
nmasic.c:237:8:nmi_get_rfrevid 16
nmasic.c:282:7:chip_sleep 16
nmasic.c:404:7:wait_for_bootrom 16
nmasic.c:511:7:chip_deinit 16
nmasic.c:69:7:chip_apply_conf 16
nmdrv.c:289:7:nm_drv_init 16
nmspi.c:1202:7:nm_spi_reset 16
nmspi.c:1292:8:nm_spi_read_reg 16
oem_atlas.cpp:82:6:bool fk::OemAtlas::find() 16
os.c:101:11:initialize_stack 16
os.c:422:13:osi_dispatch_or_queue 16
os.c:437:13:osi_dispatch 16
os.c:870:13:task_finished 16
os.c:904:13:5 16
ostream.cpp:181:6:void ostream::putPgm(const char*) 16
ostream.cpp:191:6:void ostream::putStr(const char*) 16
ostream.cpp:31:6:void ostream::do_fill(unsigned int) 16
ostream.cpp:67:6:void ostream::putChar(char) 16
paging_delimited_buffer.cpp:167:9:int32_t phylum::paging_delimited_buffer::release(phylum::dhara_sector_t) 16
paging_delimited_buffer.cpp:56:9:int32_t phylum::page_lock::flush(phylum::dhara_sector_t) 16
pb_common.c:156:6:pb_field_iter_begin 16
pb_common.c:166:6:pb_field_iter_begin_extension 16
pb_common.c:195:6:pb_field_iter_find 16
pb_common.c:246:6:pb_field_iter_find_extension 16
pb_decode.c:1327:6:pb_decode_bool 16
pb_decode.c:1351:6:pb_decode_fixed32 16
pb_decode.c:305:18:pb_skip_field 16
pb_decode.c:374:18:pb_close_string_substream 16
pb_encode.c:359:25:encode_basic_field 16
pb_encode.c:633:18:pb_encode_fixed32 16
pb_encode.c:702:18:pb_encode_string 16
platform.cpp:204:6:void osi_assert(const char*, const char*, int) 16
platform.h:60:10:bool fk::IntervalTimer::expired(uint32_t) 16
platform.h:60:10:bool fk::IntervalTimer::expired(uint32_t) 16
platform.h:60:10:bool fk::IntervalTimer::expired(uint32_t) 16
poll_sensors_worker.cpp:9:6:virtual void fk::PollSensorsWorker::run(fk::Pool&) 16
pool.cpp:112:7:void* fk::Pool::copy(const void*, size_t) 16
pool.cpp:118:7:char* fk::Pool::strdup(const char*) 16
pool.cpp:156:17:fk::EncodedMessage* fk::Pool::copy(const EncodedMessage*) 16
pool.cpp:163:17:fk::EncodedMessage* fk::Pool::wrap(uint8_t*, size_t) 16
pool.cpp:167:17:fk::EncodedMessage* fk::Pool::wrap_copy(uint8_t*, size_t) 16
pool.cpp:231:1:fk::StandardPool::StandardPool(const char*) 16
pool.cpp:323:6:virtual void fk::StandardPool::clear() 16
pool.cpp:33:1:fk::Pool::Pool(const char*, size_t, void*, size_t) 16
pool.cpp:345:6:virtual void fk::StandardPool::log_info(int32_t) 16
pool.cpp:84:7:virtual void* fk::Pool::malloc(size_t) 16
pool.h:147:12:virtual size_t fk::StandardPool::allocated() const 16
pool.h:96:8:T* fk::Pool::malloc_with(T&&) [with T = fk::pb_array_t] 16
pool.h:96:8:T* fk::Pool::malloc_with(T&&) [with T = fk::pb_array_t] 16
pool.h:96:8:T* fk::Pool::malloc_with(T&&) [with T = fk::pb_array_t] 16
pool_pointer.h:94:16:) [with Wrapped = fk::LoraRangingWorker; Wrapee = fk::TaskWorker; ConcreteWrapped = fk::PoolWorker<fk::LoraRangingWorker, fk::LoraRangingWorker, bool>; ConcreteWrapee = fk::PoolWorker<fk::LoraRangingWorker, fk::LoraRangingWorker, bool>; Args = {bool}] 16
pool_pointer.h:94:16:) [with Wrapped = fk::WifiToggleWorker; Wrapee = fk::TaskWorker; ConcreteWrapped = fk::PoolWorker<fk::WifiToggleWorker, fk::WifiToggleWorker>; ConcreteWrapee = fk::PoolWorker<fk::WifiToggleWorker, fk::WifiToggleWorker>; Args = {}] 16
process.cpp:18:15:) 16
process.cpp:84:9:int32_t fk::fk_module_run(const fkb_header_t*, fk::Pool&) 16
protobuf.cpp:120:6:bool fk::pb_encode_data(pb_ostream_t*, const pb_field_t*, void* const*) 16
protobuf.cpp:215:12:fk::pb_data_t* fk::pb_data_create(const void*, size_t, fk::Pool&) 16
protobuf.cpp:8:6:bool fk::pb_encode_string(pb_ostream_t*, const pb_field_t*, void* const*) 16
pulse.c:28:10:pulseIn 16
qrcode.c:283:13:setFunctionModule 16
qspi.cpp:88:9:int32_t bl_qspi_read_memory(uint32_t, uint8_t*, uint32_t) 16
queue.c:17:13:blocked_enq 16
queue.c:23:19:blocked_deq 16
random.cpp:34:9:int32_t fk_random_i32(int32_t, int32_t) 16
random.cpp:65:1:cpp) 16
random_module.cpp:12:14:virtual fk::ModuleReturn fk::RandomModule::initialize(fk::ModuleContext, fk::Pool&) 16
random_module.cpp:22:14:virtual fk::ModuleReturn fk::RandomModule::service(fk::ModuleContext, fk::Pool&) 16
readings_taker.cpp:19:1:fk::ReadingsTaker::ReadingsTaker(fk::Storage&, fk::ModMux*, bool, fk::Pool&) 16
readings_taker.cpp:78:1:cpp) 16
readings_worker.cpp:180:1:cpp) 16
readings_worker.cpp:20:6:virtual void fk::ReadingsWorker::run(fk::Pool&) 16
receive_firmware_handler.cpp:140:6:virtual bool fk::ReceiveFirmwareHandler::handle(fk::HttpServerConnection*, fk::Pool&) 16
receive_firmware_handler.cpp:146:1:cpp) 16
record_chain.cpp:84:9:int32_t phylum::record_chain::grow_if_necessary(phylum::page_lock&, size_t) 16
refresh_modules_worker.cpp:9:6:virtual void fk::RefreshModulesWorker::run(fk::Pool&) 16
req.cpp:103:9:int32_t fk::HttpRequest::on_header_field(const char*, size_t) 16
req.cpp:112:14:char* fk::trim(char*) 16
req.cpp:188:9:int32_t fk::HttpRequest::read_buffered_body(uint8_t*, size_t) 16
req.cpp:207:1:cpp) 16
req.cpp:51:1:fk::HttpRequest::HttpRequest(fk::Pool*) 16
rn2903.cpp:56:6:bool fk::Rn2903::read_line_sync(const char**, uint32_t, bool) 16
routing.cpp:15:14:fk::HttpHandler* fk::HttpRouter::route(const char*) 16
routing.cpp:7:6:virtual bool fk::HttpRoute::matches(const char*) const 16
rwlock.c:21:13:blocked_enq 16
rwlock.c:38:13:osi_rwlock_acquire_read 16
rwlock.c:85:13:osi_rwlock_release 16
samd21_host.c:435:10:UHD_Pipe_Read 16
sc16is740.cpp:189:9:virtual int32_t fk::Sc16is740::read(uint8_t*, size_t) 16
sc16is740.cpp:79:9:int32_t fk::Sc16is740::available_for_read() 16
sc16is740.cpp:87:9:int32_t fk::Sc16is740::available_for_write() 16
scheduling.cpp:17:6:bool fk::CurrentSchedules::equals(const fk::CurrentSchedules&) const 16
scheduling.cpp:47:6:virtual void fk::LoraTask::run() 16
scheduling.cpp:73:6:virtual void fk::SynchronizeTimeTask::run() 16
sector_chain.cpp:299:9:int32_t phylum::sector_chain::write_header_if_at_start(phylum::page_lock&) 16
sector_chain.cpp:81:9:int32_t phylum::sector_chain::back_to_head(phylum::page_lock&) 16
sector_chain.h:128:10:void phylum::sector_chain::tail(phylum::dhara_sector_t) 16
self_check.cpp:17:6:bool fk::single_check(const char*, T) [with T = fk::SelfCheck::battery_gauge()::__lambda2] 16
self_check.cpp:17:6:bool fk::single_check(const char*, T) [with T = fk::SelfCheck::qspi_memory()::__lambda4] 16
self_check.cpp:17:6:bool fk::single_check(const char*, T) [with T = fk::SelfCheck::rtc()::__lambda0] 16
self_check.cpp:17:6:bool fk::single_check(const char*, T) [with T = fk::SelfCheck::solar_gauge()::__lambda3] 16
self_check.cpp:25:3:V fk::single_noncritical_check(const char*, T) [with V = bool; T = fk::SelfCheck::lora()::__lambda12] 16
self_check.cpp:25:3:V fk::single_noncritical_check(const char*, T) [with V = bool; T = fk::SelfCheck::sd_card_open()::__lambda7] 16
self_check.cpp:305:6:bool fk::SelfCheck::backplane_shift() 16
self_check.cpp:314:6:bool fk::SelfCheck::backplane_mux() 16
self_check.cpp:323:6:bool fk::SelfCheck::backplane_leds() 16
self_check.cpp:393:1:cpp) 16
self_check_view.h:16:10:virtual void fk::SelfCheckView::show() 16
self_check_worker.cpp:20:6:bool fk::SelfCheckWorker::stop_network() 16
self_check_worker.cpp:48:1:cpp) 16
semaphore.c:65:13:osi_semaphore_release 16
service.c:102:24:svc_queue_dequeue 16
service.c:176:10:os_block 16
service.c:19:10:svc_delay 16
service.c:216:10:os_printf 16
service.c:230:13:os_queue_create 16
service.c:240:12:os_queue_enqueue 16
service.c:252:13:os_mutex_create 16
service.c:284:13:os_rwlock_create 16
service.c:298:13:os_rwlock_acquire_write 16
service_modules_worker.cpp:27:1:cpp) 16
signals.c:19:13:osi_signal 16
simple_buffer.h:103:12:size_t phylum::general_buffer<PointerType>::skip(size_t) [with PointerType = const unsigned char; size_t = unsigned int] 16
simple_buffer.h:197:10:void phylum::general_buffer<PointerType>::clear(uint8_t) [with PointerType = unsigned char; uint8_t = unsigned char] 16
simple_buffer.h:211:18:PointerType* phylum::general_buffer<PointerType>::take(size_t) [with PointerType = unsigned char; size_t = unsigned int] 16
simple_buffer.h:39:14:phylum::general_buffer<PointerType>::general_buffer(PointerType*, size_t, size_t) [with PointerType = const unsigned char; size_t = unsigned int] 16
simple_buffer.h:39:14:phylum::general_buffer<PointerType>::general_buffer(PointerType*, size_t, size_t) [with PointerType = const unsigned char; size_t = unsigned int] 16
simple_buffer.h:39:14:phylum::general_buffer<PointerType>::general_buffer(PointerType*, size_t, size_t) [with PointerType = const unsigned char; size_t = unsigned int] 16
simple_buffer.h:39:14:phylum::general_buffer<PointerType>::general_buffer(PointerType*, size_t, size_t) [with PointerType = const unsigned char; size_t = unsigned int] 16
simple_buffer.h:39:14:phylum::general_buffer<PointerType>::general_buffer(PointerType*, size_t, size_t) [with PointerType = const unsigned char; size_t = unsigned int] 16
simple_buffer.h:39:14:phylum::general_buffer<PointerType>::general_buffer(PointerType*, size_t, size_t) [with PointerType = const unsigned char; size_t = unsigned int] 16
simple_buffer.h:39:14:phylum::general_buffer<PointerType>::general_buffer(PointerType*, size_t, size_t) [with PointerType = const unsigned char; size_t = unsigned int] 16
simple_buffer.h:39:14:phylum::general_buffer<PointerType>::general_buffer(PointerType*, size_t, size_t) [with PointerType = const unsigned char; size_t = unsigned int] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = const unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 16
simple_buffer.h:44:13:phylum::general_buffer<PointerType>::~general_buffer() [with PointerType = unsigned char] 16
simple_buffer.h:74:10:void phylum::general_buffer<PointerType>::ptr(PointerType*, size_t) [with PointerType = unsigned char; size_t = unsigned int] 16
simple_buffer.h:84:18:PointerType* phylum::general_buffer<PointerType>::cursor(size_t) const [with PointerType = const unsigned char; size_t = unsigned int] 16
simple_buffer.h:84:18:PointerType* phylum::general_buffer<PointerType>::cursor(size_t) const [with PointerType = const unsigned char; size_t = unsigned int] 16
simple_buffer.h:84:18:PointerType* phylum::general_buffer<PointerType>::cursor(size_t) const [with PointerType = const unsigned char; size_t = unsigned int] 16
simple_buffer.h:84:18:PointerType* phylum::general_buffer<PointerType>::cursor(size_t) const [with PointerType = const unsigned char; size_t = unsigned int] 16
simple_buffer.h:84:18:PointerType* phylum::general_buffer<PointerType>::cursor(size_t) const [with PointerType = unsigned char; size_t = unsigned int] 16
simple_ntp.cpp:104:1:cpp) 16
socket.c:460:6:socketInit 16
spi_flash.c:598:7:spi_flash_read 16
spi_flash.cpp:178:6:bool fk::SpiFlash::reset() 16
spi_flash.cpp:539:6:void fk::SpiFlash::ecc_check() 16
spi_flash.cpp:548:6:bool fk::SpiFlash::enable_writes() 16
spi_flash.cpp:555:6:bool fk::SpiFlash::disable_writes() 16
spi_flash.cpp:578:9:uint8_t fk::SpiFlash::read_status() 16
spi_flash.cpp:654:6:bool fk::SpiFlash::simple_command(uint8_t) 16
spi_flash.cpp:658:6:bool fk::SpiFlash::complex_command(uint8_t*, uint32_t) 16
spi_flash.cpp:662:6:bool fk::SpiFlash::read_command(uint8_t, uint8_t*, uint32_t) 16
spi_flash.cpp:666:6:bool fk::SpiFlash::write_command(uint8_t, uint8_t*, uint32_t) 16
spi_flash.cpp:82:1:fk::SpiFlash::SpiFlash(uint8_t) 16
spi_flash.cpp:85:15:fk::FlashGeometry fk::SpiFlash::geometry() const 16
startup_worker.cpp:575:1:cpp) 16
state.cpp:144:6:void fk::GlobalState::released(uint32_t) 16
state.cpp:167:11:fk::GpsState* fk::GpsState::clone(fk::Pool&) const 16
state.h:106:5:fk::WifiNetworkInfo::WifiNetworkInfo() 16
state.h:129:22:fk::WifiNetworkInfo& fk::WifiNetworkInfo::operator=(const fk::WifiNetworkInfo&) 16
status_logging.cpp:90:1:cpp) 16
storage.cpp:100:1:fk::Storage::~Storage() 16
storage.cpp:106:6:bool fk::Storage::begin() 16
storage.cpp:124:6:bool fk::Storage::clear() 16
storage.cpp:155:6:bool fk::Storage::valid_block_header(fk::BlockHeader&) const 16
storage.cpp:791:12:fk::SavedState fk::Storage::save() const 16
task_stack.cpp:6:1:task_stack::task_stack(size_t) 16
task_stack.h:44:5:logged_task::logged_task(const char*) 16
task_stack.h:44:5:logged_task::logged_task(const char*) 16
task_stack.h:44:5:logged_task::logged_task(const char*) 16
task_stack.h:44:5:logged_task::logged_task(const char*) 16
task_stack.h:44:5:logged_task::logged_task(const char*) 16
task_stack.h:44:5:logged_task::logged_task(const char*) 16
task_stack.h:44:5:logged_task::logged_task(const char*) 16
tasks.cpp:31:6:bool fk::fk_start_task_if_necessary(os_task_t*) 16
tasks.cpp:46:6:bool fk::fk_task_stop_requested() 16
u8g2_buffer.c:116:9:u8g2_NextPage 16
u8g2_display.cpp:107:13:void fk::draw_centered(T, uint16_t, const char*) [with T = U8G2_SH1106_128X64_NONAME_F_HW_I2C; uint16_t = short unsigned int] 16
u8g2_display.cpp:164:13:void fk::draw_battery(U8G2_SH1106_128X64_NONAME_F_HW_I2C&, float) 16
u8g2_display.cpp:53:1:fk::U8g2Display::U8g2Display() 16
u8g2_display.cpp:57:6:virtual bool fk::U8g2Display::begin() 16
u8g2_display.cpp:83:6:virtual void fk::U8g2Display::company_logo() 16
u8g2_display.cpp:90:6:virtual void fk::U8g2Display::fk_logo() 16
u8g2_font.c:1089:16:u8g2_is_all_valid 16
u8g2_font.c:1157:13:u8g2_GetGlyphHorizontalProperties 16
u8g2_font.c:131:6:u8g2_read_font_info 16
u8g2_font.c:170:8:u8g2_GetFontSize 16
u8g2_font.c:237:9:u8g2_font_decode_get_unsigned_bits 16
u8g2_font.c:485:13:u8g2_font_setup_decode 16
u8g2_font.c:627:16:u8g2_font_get_glyph_data 16
u8g2_font.c:740:8:u8g2_GetGlyphWidth 16
u8g2_font.c:973:6:u8g2_UpdateRefHeight 16
u8g2_hvline.c:203:6:u8g2_DrawHLine 16
u8g2_hvline.c:212:6:u8g2_DrawVLine 16
u8g2_intersection.c:166:9:u8g2_IsIntersection 16
u8g2_kerning.c:78:9:u8g2_GetKerningByTable 16
u8g2_ll_hvline.c:244:6:u8g2_ll_hvline_horizontal_right_lsb 16
u8g2_setup.c:138:13:u8g2_update_dimension_common 16
u8g2_setup.c:402:6:u8g2_draw_l90_r3 16
u8g2_setup.c:71:6:u8g2_SetupBuffer 16
u8log.c:138:6:u8log_write_char 16
u8log.c:213:6:u8log_WriteString 16
u8log.c:232:6:u8log_WriteHex8 16
u8log.c:238:6:u8log_WriteHex16 16
u8log.c:244:6:u8log_WriteHex32 16
u8log_u8g2.c:85:6:u8log_u8g2_cb 16
u8log_u8x8.c:63:6:u8log_u8x8_cb 16
u8x8_8x8.c:476:9:u8x8_GetUTF8Len 16
u8x8_byte.c:331:6:u8x8_byte_set_ks0108_cs 16
u8x8_byte.c:44:9:u8x8_byte_SendBytes 16
u8x8_byte.c:49:9:u8x8_byte_SendByte 16
u8x8_byte.c:560:13:i2c_write_byte 16
u8x8_cad.c:108:9:u8x8_cad_SendData 16
u8x8_cad.c:197:9:u8x8_cad_empty 16
u8x8_capture.c:111:6:u8x8_capture_write_xbm_pre 16
u8x8_capture.c:75:6:u8x8_capture_write_pbm_pre 16
u8x8_d_lc7981.c:232:9:u8x8_d_lc7981_160x80 16
u8x8_d_lc7981.c:304:9:u8x8_d_lc7981_160x160 16
u8x8_d_lc7981.c:376:9:u8x8_d_lc7981_240x128 16
u8x8_d_lc7981.c:449:9:u8x8_d_lc7981_240x64 16
u8x8_d_ld7032_60x32.c:281:9:u8x8_d_ld7032_60x32_alt 16
u8x8_d_max7219.c:195:9:u8x8_d_max7219_32x8 16
u8x8_d_max7219.c:250:9:u8x8_d_max7219_16x16 16
u8x8_d_max7219.c:297:9:u8x8_d_max7219_8x8 16
u8x8_d_max7219.c:438:9:u8x8_d_max7219_64x8 16
u8x8_d_s1d15e06.c:211:9:u8x8_d_s1d15e06_160100 16
u8x8_d_sed1330.c:232:9:u8x8_d_sed1330_240x128 16
u8x8_d_sed1330.c:250:9:u8x8_d_ra8835_nhd_240x128 16
u8x8_d_sed1330.c:336:9:u8x8_d_ra8835_320x240 16
u8x8_d_sh1107.c:214:9:u8x8_d_sh1107_64x128 16
u8x8_d_sh1107.c:298:9:u8x8_d_sh1107_seeed_96x96 16
u8x8_d_sh1107.c:380:9:u8x8_d_sh1107_128x128 16
u8x8_d_sh1107.c:428:9:u8x8_d_sh1107_pimoroni_128x128 16
u8x8_d_sh1107.c:482:9:u8x8_d_sh1107_seeed_128x128 16
u8x8_d_sh1122.c:258:9:u8x8_d_sh1122_256x64 16
u8x8_d_ssd1305.c:194:9:u8x8_d_ssd1305_128x32_noname 16
u8x8_d_ssd1305.c:257:9:u8x8_d_ssd1305_128x32_adafruit 16
u8x8_d_ssd1305.c:358:9:u8x8_d_ssd1305_128x64_adafruit 16
u8x8_d_ssd1305.c:419:9:u8x8_d_ssd1305_128x64_raystar 16
u8x8_d_ssd1306_128x64_noname.c:312:9:u8x8_d_ssd1306_128x64_noname 16
u8x8_d_ssd1306_128x64_noname.c:333:9:u8x8_d_ssd1306_128x64_vcomh0 16
u8x8_d_ssd1306_128x64_noname.c:354:9:u8x8_d_ssd1306_128x64_alt0 16
u8x8_d_ssd1306_128x64_noname.c:400:9:u8x8_d_sh1106_128x64_noname 16
u8x8_d_ssd1306_128x64_noname.c:424:9:u8x8_d_sh1106_128x64_vcomh0 16
u8x8_d_ssd1306_128x64_noname.c:445:9:u8x8_d_sh1106_128x64_winstar 16
u8x8_d_ssd1306_64x32.c:198:9:u8x8_d_ssd1306_64x32_noname 16
u8x8_d_ssd1306_64x32.c:244:9:u8x8_d_ssd1306_64x32_1f 16
u8x8_d_ssd1309.c:195:9:u8x8_d_ssd1309_128x64_noname2 16
u8x8_d_ssd1309.c:257:9:u8x8_d_ssd1309_128x64_noname0 16
u8x8_d_ssd1318.c:277:9:u8x8_d_ssd1318_128x96 16
u8x8_d_ssd1318.c:298:9:u8x8_d_ssd1318_128x96_xcp 16
u8x8_d_ssd1320.c:262:9:u8x8_d_ssd1320_160x32 16
u8x8_d_ssd1320.c:463:9:u8x8_d_ssd1320_160x132 16
u8x8_d_ssd1322.c:303:9:u8x8_d_ssd1322_nhd_256x64 16
u8x8_d_ssd1322.c:504:9:u8x8_d_ssd1322_nhd_128x64 16
u8x8_d_ssd1325.c:292:9:u8x8_d_ssd1325_nhd_128x64 16
u8x8_d_ssd1325.c:404:9:u8x8_d_ssd0323_os128064 16
u8x8_d_ssd1327.c:305:9:u8x8_d_ssd1327_ws_96x64 16
u8x8_d_ssd1327.c:428:9:u8x8_d_ssd1327_seeed_96x96 16
u8x8_d_ssd1327.c:549:9:u8x8_d_ssd1327_ea_w128128 16
u8x8_d_ssd1327.c:689:9:u8x8_d_ssd1327_midas_128x128 16
u8x8_d_ssd1327.c:775:9:u8x8_d_ssd1327_ws_128x128 16
u8x8_d_ssd1327.c:920:9:u8x8_d_ssd1327_visionox_128x96 16
u8x8_d_st75256.c:334:9:u8x8_d_st75256_jlx256128 16
u8x8_d_st75256.c:469:9:u8x8_d_st75256_wo256x128 16
u8x8_d_st75256.c:603:9:u8x8_d_st75256_jlx25664 16
u8x8_d_st7528.c:292:9:u8x8_d_st7528_nhd_c160100 16
u8x8_d_st7528.c:445:9:u8x8_d_st7528_erc16064 16
u8x8_d_st7565.c:1084:9:u8x8_d_st7565_erc12864_alt 16
u8x8_d_st7565.c:1155:9:u8x8_d_nt7534_tg12864r 16
u8x8_d_st7565.c:1249:9:u8x8_d_st7565_ea_dogm132 16
u8x8_d_st7565.c:212:9:u8x8_d_st7565_ea_dogm128 16
u8x8_d_st7565.c:279:9:u8x8_d_st7565_lm6063 16
u8x8_d_st7565.c:403:9:u8x8_d_st7565_64128n 16
u8x8_d_st7565.c:468:9:u8x8_d_st7565_zolen_128x64 16
u8x8_d_st7565.c:560:9:u8x8_d_st7565_nhd_c12832 16
u8x8_d_st7565.c:650:9:u8x8_d_st7565_nhd_c12864 16
u8x8_d_st7565.c:749:9:u8x8_d_st7565_lm6059 16
u8x8_d_st7565.c:804:9:u8x8_d_st7565_ks0713 16
u8x8_d_st7565.c:896:9:u8x8_d_st7565_lx12864 16
u8x8_d_st7565.c:988:9:u8x8_d_st7565_erc12864 16
u8x8_d_st7567.c:525:9:u8x8_d_st7567_enh_dg128064 16
u8x8_d_st7567.c:550:9:u8x8_d_st7567_enh_dg128064i 16
u8x8_d_t6963.c:189:9:u8x8_d_t6963_240x128 16
u8x8_d_t6963.c:274:9:u8x8_d_t6963_240x64 16
u8x8_d_t6963.c:360:9:u8x8_d_t6963_256x64 16
u8x8_d_t6963.c:443:9:u8x8_d_t6963_128x64 16
u8x8_d_t6963.c:525:9:u8x8_d_t6963_160x80 16
u8x8_d_t6963.c:544:9:u8x8_d_t6963_128x64_alt 16
u8x8_d_uc1604.c:218:9:u8x8_d_uc1604_jlx19264 16
u8x8_d_uc1608.c:206:9:u8x8_d_uc1608_erc24064 16
u8x8_d_uc1608.c:288:9:u8x8_d_uc1608_240x128 16
u8x8_d_uc1608.c:371:9:u8x8_d_uc1608_erc240120 16
u8x8_d_uc1608.c:473:9:u8x8_d_uc1608_dem240064 16
u8x8_d_uc1611.c:198:9:u8x8_d_uc1611_ea_dogm240 16
u8x8_d_uc1611.c:291:9:u8x8_d_uc1611_ea_dogxl240 16
u8x8_d_uc1611.c:595:9:u8x8_d_uc1611_cg160160 16
u8x8_d_uc1617.c:304:9:u8x8_d_uc1617_jlx128128 16
u8x8_d_uc1638.c:200:9:u8x8_d_uc1638_160x128 16
u8x8_display.c:141:6:u8x8_ClearDisplay 16
u8x8_display.c:147:6:u8x8_FillDisplay 16
u8x8_display.c:64:6:u8x8_d_helper_display_init 16
u8x8_display.c:82:9:u8x8_DrawTile 16
udp_discovery.cpp:100:1:cpp) 16
udp_discovery.cpp:13:1:fk::UDPDiscovery::UDPDiscovery() 16
udp_discovery.cpp:36:6:void fk::UDPDiscovery::stop() 16
udp_discovery.cpp:52:6:bool fk::UDPDiscovery::service(fk::Pool*) 16
unknown.cpp:18:14:virtual fk::ModuleReturn fk::UnknownModule::initialize(fk::ModuleContext, fk::Pool&) 16
unknown.cpp:22:14:virtual fk::ModuleReturn fk::UnknownModule::api(fk::ModuleContext, fk::HttpServerConnection*, fk::Pool&) 16
unknown.cpp:26:14:virtual fk::ModuleReturn fk::UnknownModule::service(fk::ModuleContext, fk::Pool&) 16
upgrade_from_sd_worker.cpp:31:1:fk::UpgradeFirmwareFromSdWorker::UpgradeFirmwareFromSdWorker(fk::SdCardFirmware&) 16
url_parser.h:34:5:fk::UrlParser::UrlParser(char*) 16
url_parser.h:34:5:fk::UrlParser::UrlParser(char*) 16
variant.cpp:219:1:cpp) 16
watchdog.cpp:75:1:cpp) 16
water_module.cpp:135:14:virtual fk::ModuleReturn fk::WaterModule::service(fk::ModuleContext, fk::Pool&) 16
water_module.cpp:198:6:bool fk::WaterModule::excite(fk::Mcp2803&, uint32_t) 16
weather_types.h:25:5:fk::WindDirection::WindDirection(uint32_t) 16
wifi_toggle_worker.cpp:61:1:cpp) 16
wiring.c:65:6:init 16
wiring_digital.c:74:6:digitalWrite 16
wiring_private.c:23:5:pinPeripheral 16
worker.cpp:34:1:cpp) 16
working_buffers.h:339:10:void phylum::working_buffers::free(const uint8_t*) 16
working_buffers.h:339:10:void phylum::working_buffers::free(const uint8_t*) 16
working_buffers.h:339:10:void phylum::working_buffers::free(const uint8_t*) 16
working_buffers.h:339:10:void phylum::working_buffers::free(const uint8_t*) 16
write_memory_handler.cpp:146:6:virtual bool fk::WriteMemoryHandler::handle(fk::HttpServerConnection*, fk::Pool&) 16
write_memory_handler.cpp:152:1:cpp) 16
WInterrupts.c:209:6:detachInterrupt 20
connection.cpp:51:9:) 20
delay.c:39:15:micros 20
hal_timer.c:195:13:timer_add_timer_task 20
hpl_aes.c:118:20:1 20
log_stream.cpp:19:12:) 20
lwcron.cpp:21:1:lwcron::DateTime::DateTime(uint32_t) 20
pb_common.c:8:13:load_descriptor_values 20
printf.cpp:663:5:) 20
printf.cpp:663:5:) 20
qrcode.c:213:13:bb_appendBits 20
tiny_printf.c:666:5:tiny_sprintf 20
u8g2_kerning.c:47:9:u8g2_GetKerning 20
u8g2_ll_hvline.c:72:6:u8g2_ll_hvline_vertical_top_lsb 20
u8g2_polygon.c:338:6:u8g2_DrawTriangle 20
u8x8_8x8.c:62:13:u8x8_get_glyph_data 20
weather_types.h:55:24:static fk::WindReading fk::WindReading::get_average(fk::WindReading*, size_t) 20
Adafruit_FlashTransport_QSPI_SAMD.cpp:121:6:virtual bool Adafruit_FlashTransport_QSPI::readMemory(uint32_t, uint8_t*, uint32_t) 24
Adafruit_FlashTransport_QSPI_SAMD.cpp:132:6:virtual bool Adafruit_FlashTransport_QSPI::writeMemory(uint32_t, const uint8_t*, uint32_t) 24
Adafruit_FlashTransport_QSPI_SAMD.cpp:161:13:bool _run_instruction(uint8_t, uint32_t, uint32_t, uint8_t*, uint32_t) 24
Adafruit_FlashTransport_SPI.cpp:113:6:virtual bool Adafruit_FlashTransport_SPI::readMemory(uint32_t, uint8_t*, uint32_t) 24
Adafruit_FlashTransport_SPI.cpp:136:6:virtual bool Adafruit_FlashTransport_SPI::writeMemory(uint32_t, const uint8_t*, uint32_t) 24
Adafruit_FlashTransport_SPI.cpp:61:6:virtual bool Adafruit_FlashTransport_SPI::readCommand(uint8_t, uint8_t*, uint32_t) 24
Adafruit_FlashTransport_SPI.cpp:78:6:virtual bool Adafruit_FlashTransport_SPI::writeCommand(uint8_t, const uint8_t*, uint32_t) 24
Adafruit_SPIFlash.cpp:202:10:uint32_t Adafruit_SPIFlash::readBuffer(uint32_t, uint8_t*, uint32_t) 24
Adafruit_SPIFlash.cpp:278:6:virtual bool Adafruit_SPIFlash::readBlocks(uint32_t, uint8_t*, size_t) 24
Adafruit_SPIFlash.cpp:284:6:virtual bool Adafruit_SPIFlash::writeBlocks(uint32_t, const uint8_t*, size_t) 24
FatFile.cpp:1134:6:bool FatFile::seekSet(uint32_t) 24
FatFile.cpp:1318:6:bool FatFile::truncate(uint32_t) 24
FatFile.cpp:208:10:uint32_t FatFile::dirSize() 24
FatFile.cpp:41:6:bool FatFile::addDirCluster() 24
FatFile.cpp:488:6:bool FatFile::openCachedEntry(FatFile*, uint16_t, oflag_t, uint8_t) 24
FatFile.cpp:723:5:int FatFile::peek() 24
FatFile.cpp:875:8:dir_t* FatFile::readDirCache(bool) 24
FatFileLFN.cpp:633:6:bool FatFile::lfnUniqueSfn(fname_t*) 24
FatFilePrint.cpp:258:8:size_t FatFile::printFileSize(print_t*) 24
FatFilePrint.cpp:49:13:void printHex(print_t*, uint8_t, uint16_t) 24
FatFileSFN.cpp:53:8:size_t FatFile::printSFN(print_t*) 24
FatVolume.cpp:285:6:bool FatVolume::fatPut(uint32_t, uint32_t) 24
FatVolume.cpp:359:6:bool FatVolume::freeChain(uint32_t) 24
IPAddress.cpp:105:8:virtual size_t IPAddress::printTo(Print&) const 24
MDNS.cpp:1290:6:void MDNS::removeServiceRecord(uint16_t, MDNSServiceProtocol_t, int, int) 24
MDNS.cpp:140:5:int MDNS::begin(const IPAddress&, const char*) 24
MDNS.cpp:1460:5:int MDNS::_matchStringPart(const uint8_t**, int*, const uint8_t*, int) 24
MDNS.cpp:219:5:int MDNS::resolveName(const char*, long unsigned int) 24
MDNS.cpp:256:5:int MDNS::startDiscoveringService(const char*, MDNSServiceProtocol_t, long unsigned int) 24
Print.cpp:30:8:virtual size_t Print::write(const uint8_t*, size_t) 24
Print.cpp:75:8:size_t Print::print(long int, int) 24
SEGGER_RTT.c:1110:10:SEGGER_RTT_PutCharSkip 24
SEGGER_RTT.c:1166:10:SEGGER_RTT_PutChar 24
SEGGER_RTT.c:1669:5:SEGGER_RTT_SetTerminal 24
SEGGER_RTT.c:398:13:_WriteNoCheck 24
SEGGER_RTT.c:746:6:SEGGER_RTT_WriteWithOverwriteNoLock 24
SEGGER_RTT.c:996:10:SEGGER_RTT_Write 24
SERCOM.cpp:227:6:void SERCOM::initSPI(SercomSpiTXPad, SercomRXPad, SercomSpiCharSize, SercomDataOrder) 24
SERCOM.cpp:58:6:void SERCOM::initUART(SercomUartMode, SercomUartSampleRate, uint32_t) 24
SPI.cpp:69:6:void SPIClass::config(SPISettings) 24
SdSpiCard.cpp:370:10:uint32_t SdSpiCard::cardCapacity() 24
SdSpiCard.cpp:418:6:bool SdSpiCard::eraseSingleBlockEnable() 24
SdSpiCard.cpp:473:6:bool SdSpiCard::readBlocks(uint32_t, uint8_t*, size_t) 24
SdSpiCard.cpp:489:6:bool SdSpiCard::readData(uint8_t*, size_t) 24
SdSpiCard.cpp:692:6:bool SdSpiCard::writeBlocks(uint32_t, const uint8_t*, size_t) 24
SdSpiCard.cpp:727:6:bool SdSpiCard::writeData(uint8_t, const uint8_t*) 24
SdSpiCardEX.cpp:44:6:bool SdSpiCardEX::readBlocks(uint32_t, uint8_t*, size_t) 24
SdSpiCardEX.cpp:86:6:bool SdSpiCardEX::writeBlocks(uint32_t, const uint8_t*, size_t) 24
SdioCardEX.cpp:101:6:bool SdioCardEX::writeBlocks(uint32_t, const uint8_t*, size_t) 24
SdioCardEX.cpp:55:6:bool SdioCardEX::readBlocks(uint32_t, uint8_t*, size_t) 24
StdioStream.cpp:241:5:int StdioStream::write(const void*, size_t) 24
StdioStream.cpp:261:8:size_t StdioStream::print(const __FlashStringHelper*) 24
StdioStream.cpp:306:5:int StdioStream::printDec(uint16_t) 24
StdioStream.cpp:97:6:bool StdioStream::fopen(const char*, const char*) 24
Stream.cpp:130:6:long int Stream::parseInt(LookaheadMode, char) 24
Stream.cpp:202:8:size_t Stream::readBytes(char*, size_t) 24
Stream.cpp:219:8:size_t Stream::readBytesUntil(char, char*, size_t) 24
U8g2lib.h:336:12:virtual size_t U8G2::write(const uint8_t*, size_t) 24
U8x8lib.cpp:862:20:uint8_t u8x8_byte_arduino_hw_spi(u8x8_t*, uint8_t, uint8_t, void*) 24
U8x8lib.cpp:982:20:uint8_t u8x8_byte_arduino_2nd_hw_spi(u8x8_t*, uint8_t, uint8_t, void*) 24
U8x8lib.h:295:12:virtual size_t U8X8::write(const uint8_t*, size_t) 24
WInterrupts.c:253:6:InterruptHandler 24
WString.cpp:297:15:unsigned char String::concat(int) 24
WString.cpp:304:15:unsigned char String::concat(unsigned int) 24
WString.cpp:311:15:unsigned char String::concat(long int) 24
WString.cpp:318:15:unsigned char String::concat(long unsigned int) 24
WString.cpp:478:15:unsigned char String::equalsIgnoreCase(const String&) const 24
WString.cpp:587:5:int String::lastIndexOf(char, unsigned int) const 24
WString.cpp:603:5:int String::lastIndexOf(const String&, unsigned int) const 24
WString.cpp:616:8:String String::substring(unsigned int, unsigned int) const 24
WString.cpp:70:1:String::String(unsigned char, unsigned char) 24
WString.cpp:721:6:void String::trim() 24
WiFi.cpp:1020:5:int WiFiClass::hostByName(const char*, IPAddress&) 24
WiFi.cpp:1108:5:int WiFiClass::ping(IPAddress, uint8_t) 24
WiFi.cpp:659:6:void WiFiClass::config(IPAddress) 24
WiFi.cpp:855:8:int8_t WiFiClass::scanNetworks() 24
WiFi.cpp:878:7:char* WiFiClass::SSID(uint8_t) 24
WiFi.cpp:901:9:int32_t WiFiClass::RSSI(uint8_t) 24
WiFi.cpp:940:9:uint8_t WiFiClass::encryptionType(uint8_t) 24
WiFi.cpp:962:10:uint8_t* WiFiClass::BSSID(uint8_t, uint8_t*) 24
WiFi.cpp:987:9:uint8_t WiFiClass::channel(uint8_t) 24
WiFiClient.cpp:144:5:virtual int WiFiClient::read(uint8_t*, size_t) 24
WiFiClient.cpp:41:5:int WiFiClient::connectSSL(IPAddress, uint16_t, bool) 24
WiFiClient.cpp:51:5:virtual int WiFiClient::connect(IPAddress, uint16_t) 24
WiFiServer.cpp:77:12:WiFiClient WiFiServer::available(uint8_t*, bool) 24
WiFiSocket.cpp:119:7:sint8 WiFiSocketClass::listen(SOCKET, uint8) 24
WiFiSocket.cpp:298:8:size_t WiFiSocketClass::write(SOCKET, const uint8_t*, size_t) 24
WiFiSocket.cpp:412:6:void WiFiSocketClass::handleEvent(SOCKET, uint8, void*) 24
WiFiSocket.cpp:511:5:int WiFiSocketClass::fillRecvBuffer(SOCKET) 24
WiFiSocket.cpp:86:7:sint8 WiFiSocketClass::bind(SOCKET, sockaddr*, uint8) 24
WiFiUdp.cpp:200:5:virtual int WiFiUDP::read(unsigned char*, size_t) 24
WiFiUdp.cpp:77:9:virtual uint8_t WiFiUDP::beginMulticast(IPAddress, uint16_t) 24
Wire.cpp:167:8:virtual size_t TwoWire::write(const uint8_t*, size_t) 24
Wire.cpp:65:9:uint8_t TwoWire::requestFrom(uint8_t, size_t, bool) 24
atlas_api.cpp:54:6:bool fk::AtlasApi::send_reply(fk::HttpServerConnection*, fk::Pool&, fk::AtlasApiReply&) 24
atlas_module.cpp:260:17:nonstd::optional_lite::optional<float> fk::AtlasModule::get_temperature(fk::ReadingsContext) 24
atlas_module.cpp:271:17:nonstd::optional_lite::optional<float> fk::AtlasModule::get_salinity(fk::ReadingsContext) 24
bad_blocks.cpp:29:6:void fk::BadBlocks::mark_block_as_bad(uint32_t) 24
blake2b.cpp:197:6:void BLAKE2b::reset(const void*, size_t, uint8_t) 24
blake2b.cpp:274:6:void BLAKE2b::resetHMAC(const void*, size_t) 24
blake2b.cpp:381:6:void BLAKE2b::formatHMACKey(void*, const void*, size_t, uint8_t) 24
build_view.h:20:10:virtual void fk::BuildView::tick(fk::ViewController*, fk::Pool&) 24
buttons.cpp:15:6:void fk::Button::changed(bool) 24
clock.cpp:145:6:bool fk::CoreClock::adjust_internal(fk::DateTime) 24
clock.cpp:86:6:bool fk::CoreClock::configure() 24
collections.h:107:10:) [with Args = {fk::FoundModule}; T = fk::FoundModule] 24
collections.h:107:10:) [with Args = {fk::ModuleMetaAndReadings&}; T = fk::ModuleMetaAndReadings] 24
configure.cpp:21:6:bool fk::ModuleConfigurer::provision(fk::ModulePosition, ModuleHeader) 24
cpool.cpp:131:6:void fk::ConnectionPool::free_connection(uint16_t) 24
data_chain.cpp:21:9:int32_t phylum::data_chain::seek_sector(phylum::dhara_sector_t, phylum::file_size_t, phylum::file_size_t) 24
data_chain.cpp:67:9:int32_t phylum::data_chain::skip_records(phylum::record_number_t) 24
debug_udp.cpp:128:5:virtual int fk::DebugUDP::read(unsigned char*, size_t) 24
debug_udp.cpp:157:8:size_t fk::DebugUDP::append(const uint8_t*, size_t) 24
debug_udp.cpp:34:5:virtual int fk::DebugUDP::parsePacket() 24
debugging.cpp:21:7:void* __wrap_malloc(size_t) 24
deep_sleep.cpp:15:17:uint32_t fk::deep_sleep() 24
delimited_buffer.h:105:21:) [with T = phylum::sector_chain_header_t; Args = {phylum::entry_type}; phylum::sector_offset_t = short unsigned int] 24
delimited_buffer.h:125:24:phylum::delimited_buffer::appended_record<T> phylum::delimited_buffer::reserve() [with T = phylum::tree_node_t<long unsigned int, phylum::attribute_value_t<256u>, 15u>] 24
delimited_buffer.h:125:24:phylum::delimited_buffer::appended_record<T> phylum::delimited_buffer::reserve() [with T = phylum::tree_node_t<long unsigned int, phylum::dirtree_tree_value_t<128u>, 4u>] 24
device_name.cpp:13:13:const char* fk::fk_device_name_generate(fk::Pool&) 24
dhara_map.cpp:121:9:virtual int32_t phylum::dhara_sector_map::find(phylum::dhara_sector_t, phylum::dhara_page_t*) 24
dhara_map.cpp:136:9:virtual int32_t phylum::dhara_sector_map::trim(phylum::dhara_sector_t) 24
dhara_map.cpp:297:5:int phylum::dhara_nand_prog(const dhara_nand*, phylum::dhara_page_t, const uint8_t*, dhara_error_t*) 24
dhara_map.cpp:322:5:int phylum::dhara_nand_copy(const dhara_nand*, phylum::dhara_page_t, phylum::dhara_page_t, dhara_error_t*) 24
diagnostics_module.cpp:42:14:virtual fk::ModuleReturn fk::DiagnosticsModule::api(fk::ModuleContext, fk::HttpServerConnection*, fk::Pool&) 24
directory_chain.cpp:11:9:virtual int32_t phylum::directory_chain::format() 24
directory_chain.cpp:5:9:virtual int32_t phylum::directory_chain::mount() 24
directory_tree.cpp:127:9:virtual int32_t phylum::directory_tree::file_data(phylum::file_id_t, phylum::file_size_t, const uint8_t*, size_t) 24
directory_tree.cpp:146:9:virtual int32_t phylum::directory_tree::file_chain(phylum::file_id_t, phylum::head_tail_t) 24
directory_tree.cpp:211:9:virtual int32_t phylum::directory_tree::file_trees(phylum::file_id_t, phylum::tree_ptr_t, phylum::tree_ptr_t) 24
display.cpp:119:10:virtual void fk::MainViewController::on_external() 24
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_module_bays_menu()::__lambda12] 24
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_module_menu()::__lambda28] 24
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_network_menu()::__lambda59] 24
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_network_menu()::__lambda61] 24
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_network_menu()::__lambda62] 24
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_network_menu()::__lambda63] 24
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_tools_menu()::__lambda39] 24
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_tools_menu()::__lambda42] 24
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_tools_menu()::__lambda43] 24
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_tools_menu()::__lambda45] 24
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_tools_menu()::__lambda47] 24
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_tools_menu()::__lambda49] 24
distance_module.cpp:36:14:virtual fk::ModuleReturn fk::DistanceModule::api(fk::ModuleContext, fk::HttpServerConnection*, fk::Pool&) 24
dns_message.cpp:18:1:fk::DNSReader::DNSReader(fk::Pool*, uint8_t*, size_t) 24
dns_message.cpp:309:9:int32_t fk::DNSWriter::write_question(const char*, uint16_t, uint16_t) 24
dns_message.cpp:339:9:int32_t fk::DNSWriter::write_answer_ptr(const char*, const char*) 24
dns_message.cpp:373:9:int32_t fk::DNSWriter::write_answer_srv(const char*, const char*, uint16_t) 24
dns_message.cpp:411:17:fk::EncodedMessage* fk::DNSWriter::answer_service_type(uint16_t, const char*, const char*) 24
download_handler.cpp:147:6:virtual bool fk::DownloadHandler::handle(fk::HttpServerConnection*, fk::Pool&) 24
eeprom.cpp:118:6:bool fk::ModuleEeprom::read_configuration(uint8_t*, size_t&, size_t) 24
eeprom.cpp:148:6:bool fk::ModuleEeprom::read_data(uint32_t, void*, size_t) 24
export_data_worker.cpp:117:6:bool fk::ExportDataWorker::lookup_meta(uint32_t, fk::FileReader*, fk::Pool&) 24
factory_wipe_worker.cpp:35:6:bool fk::FactoryWipeWorker::initialize_memory_if_necessary() 24
file.cpp:874:6:void fk::File::walk(fk::BlockNumber, fk::BlockNumber, fk::Pool&) 24
file_appender.cpp:194:6:void phylum::file_appender::u32(uint8_t, uint32_t) 24
file_appender.cpp:210:9:int32_t phylum::file_appender::close() 24
file_appender.cpp:31:13:phylum::file_size_t phylum::file_appender::position() 24
file_ops_darwin.cpp:131:43:virtual tl::expected<fk::FileReader::SizeInfo, fk::Error> fk::darwin::FileReader::get_size(fk::BlockNumber, fk::BlockNumber, fk::Pool&) 24
file_ops_darwin.cpp:18:31:virtual tl::expected<long unsigned int, fk::Error> fk::darwin::MetaOps::write_state(fk::GlobalState*, fk::Pool&) 24
file_ops_phylum.cpp:32:9:virtual int32_t fk::PhylumFlashMemory::write(uint32_t, const uint8_t*, size_t) 24
file_ops_phylum.cpp:36:9:virtual int32_t fk::PhylumFlashMemory::read(uint32_t, uint8_t*, size_t) 24
flash.c:34:9:bl_flash_erase 24
flash.h:29:13:virtual int32_t fk::DataMemoryFlash::read(uint32_t, uint8_t*, size_t) 24
flash.h:33:13:virtual int32_t fk::DataMemoryFlash::write(uint32_t, const uint8_t*, size_t) 24
format_sd_card.cpp:228:6:bool fk::FormatSdCard::write_mbr() 24
format_sd_card.cpp:274:6:bool fk::FormatSdCard::clear_fat_directory(uint32_t, uint32_t) 24
format_sd_card.cpp:40:6:bool fk::FormatSdCard::erase() 24
free_sectors_chain.cpp:5:1:phylum::free_sectors_chain::free_sectors_chain(phylum::phyctx, phylum::head_tail_t) 24
free_sectors_chain.cpp:71:9:int32_t phylum::free_sectors_chain::add_tree(phylum::tree_ptr_t) 24
fstream.cpp:28:9:int16_t FatStreamBase::getch() 24
fstream.cpp:52:6:void FatStreamBase::open(const char*, ios_base::openmode) 24
functional:2054:7:) [with _Res = long int; _Functor = phylum::data_chain::write_chain(std::function<long int(phylum::general_buffer<unsigned char>, bool&)>)::__lambda4::__lambda5; _ArgTypes = {phylum::data_chain_header_t*}] 24
functional:2054:7:) [with _Res = long int; _Functor = phylum::paging_delimited_buffer::flush(phylum::dhara_sector_t)::__lambda3; _ArgTypes = {long unsigned int, unsigned char*, unsigned int}] 24
functional:2054:7:) [with _Res = long int; _Functor = phylum::paging_delimited_buffer::replace(phylum::dhara_sector_t, bool, bool)::__lambda1; _ArgTypes = {long unsigned int, unsigned char*, unsigned int}] 24
functional:2054:7:) [with _Res = long int; _Functor = phylum::paging_delimited_buffer::replace(phylum::dhara_sector_t, bool, bool)::__lambda2; _ArgTypes = {long unsigned int, unsigned char*, unsigned int}] 24
functional:2284:7:)>&&) [with _Res = void; _ArgTypes = {const unsigned char*}] 24
functional:2284:7:)>&&) [with _Res = void; _ArgTypes = {const unsigned char*}] 24
functional:2284:7:)>&&) [with _Res = void; _ArgTypes = {const unsigned char*}] 24
functional:2284:7:)>&&) [with _Res = void; _ArgTypes = {const unsigned char*}] 24
functional:2284:7:)>&&) [with _Res = void; _ArgTypes = {const unsigned char*}] 24
functional:2284:7:)>&&) [with _Res = void; _ArgTypes = {const unsigned char*}] 24
functional:2284:7:)>&&) [with _Res = void; _ArgTypes = {const unsigned char*}] 24
functional:2284:7:)>&&) [with _Res = void; _ArgTypes = {const unsigned char*}] 24
functional:2284:7:)>&&) [with _Res = void; _ArgTypes = {const unsigned char*}] 24
functional:2284:7:)>&&) [with _Res = void; _ArgTypes = {const unsigned char*}] 24
functional:2284:7:)>&&) [with _Res = void; _ArgTypes = {const unsigned char*}] 24
graceful_shutdown.cpp:9:6:bool fk::fk_graceful_shutdown() 24
hal_aes_sync.c:126:20:aes_sync_cfb_crypt_first_unaligned_data 24
hal_calendar.c:127:16:1 24
hal_calendar.c:518:9:calendar_set_time 24
hal_calendar.c:542:9:calendar_set_date 24
hal_flash.c:104:9:flash_write 24
hal_flash.c:128:9:flash_append 24
hal_flash.c:201:9:flash_lock 24
hal_flash.c:223:9:flash_unlock 24
hal_flash.c:84:9:flash_read 24
hal_i2c_m_sync.c:45:16:i2c_m_sync_read 24
hal_i2c_m_sync.c:68:16:i2c_m_sync_write 24
hal_rand_sync.c:110:6:rand_sync_read_buf32 24
hal_rand_sync.c:73:17:_rand_sync_read_data 24
hal_sha_sync.c:96:9:sha_sync_sha256_start 24
hal_spi_m_sync.c:133:16:_spi_m_sync_io_read 24
hal_spi_m_sync.c:161:16:_spi_m_sync_io_write 24
hal_spi_m_sync.c:175:9:spi_m_sync_transfer 24
hal_timer.c:147:9:timer_remove_task 24
hal_timer.c:227:13:timer_process_counted 24
hal_usart_sync.c:236:16:usart_sync_write 24
hal_usart_sync.c:263:16:usart_sync_read 24
hal_usb_device.c:168:13:usb_d_cb_trans_setup 24
hpl_aes.c:152:20:__aes_sync_update_cfb_iv 24
hpl_aes.c:223:9:_aes_sync_ecb_crypt 24
hpl_pac.c:55:9:_periph_lock 24
hpl_pac.c:81:9:_periph_unlock 24
hpl_sercom.c:1204:9:_i2c_m_async_transfer 24
hpl_sercom.c:1560:16:_i2c_m_sync_init_impl 24
hpl_sercom.c:1990:16:_i2c_s_set_address 24
hpl_sercom.c:2354:9:_spi_m_sync_init 24
hpl_sercom.c:239:10:_usart_sync_calculate_baud_rate 24
hpl_sercom.c:248:10:_usart_async_calculate_baud_rate 24
hpl_sercom.c:677:13:_usart_set_baud_rate 24
hpl_sercom.c:697:13:_usart_set_data_order 24
hpl_sercom.c:717:13:_usart_set_mode 24
hpl_sercom.c:737:13:_usart_set_parity 24
hpl_sercom.c:764:13:_usart_set_stop_bits 24
hpl_sercom.c:784:13:_usart_set_character_size 24
hpl_sercom.c:946:23:_sercom_i2c_sync_analyse_flags 24
hpl_usb.c:1408:13:_usb_d_dev_handler 24
hpl_usb.c:1664:6:_usb_d_dev_ep_deinit 24
hpl_usb.c:1869:13:_usb_d_dev_trans_stop 24
hpl_wdt.c:116:9:_wdt_set_timeout_period 24
http_connection.cpp:19:9:virtual int32_t fk::HttpConnection::write(const uint8_t*, size_t) 24
http_connection.cpp:31:9:virtual int32_t fk::HttpConnection::read(uint8_t*, size_t) 24
ina219.cpp:80:13:bool fk::ina219_read(fk::TwoWireWrapper&, uint8_t, uint8_t, uint16_t&) 24
io.cpp:21:9:virtual int32_t fk::BufferedWriter::write(const uint8_t*, size_t) 24
io.cpp:82:9:virtual int32_t fk::BufferedReader::read(uint8_t*, size_t) 24
istream.cpp:364:5:int istream::peek() 24
journal.c:299:12:cp_free 24
journal.c:596:12:prepare_head 24
journal.c:754:12:push_meta 24
line_reader.h:23:10:bool fk::LineReader<N>::read_line_sync(const char**, uint32_t) [with unsigned int N = 256u; uint32_t = long unsigned int] 24
line_reader.h:23:10:bool fk::LineReader<N>::read_line_sync(const char**, uint32_t) [with unsigned int N = 256u; uint32_t = long unsigned int] 24
log_stream.cpp:5:12:LogStream& LogStream::print(const char*) 24
logging.cpp:15:6:) 24
logging.cpp:22:6:) 24
logging.cpp:232:6:bool fk::fk_logging_dump_buffer() 24
logging.cpp:29:6:) 24
logging.cpp:36:6:) 24
logging.cpp:63:6:void fk::fk_logs_saved_capture() 24
logging.cpp:63:6:void log_raw(const LogMessage*, const char*, va_list) 24
logging.cpp:8:6:) 24
lora_packetizer.cpp:112:21:fk::EncodedMessage* fk::LoraRecord::encode(fk::Pool&) 24
lwcron.cpp:122:10:static lwcron::CronSpec lwcron::CronSpec::specific(uint8_t, uint8_t, uint8_t) 24
lwcron.cpp:194:10:virtual uint32_t lwcron::CronTask::getNextTime(lwcron::DateTime, uint32_t) 24
lwcron.cpp:253:24:lwcron::Scheduler::TaskAndTime lwcron::Scheduler::nextTask() 24
m2m_hif.c:676:7:hif_receive 24
m2m_ota.c:162:16:m2m_ota_notif_set_url 24
m2m_ota.c:184:16:m2m_ota_notif_check_for_update 24
m2m_ota.c:204:15:m2m_ota_notif_sched 24
m2m_ota.c:228:15:m2m_ota_start_update 24
m2m_ota.c:252:15:m2m_ota_start_update_crt 24
m2m_ota.c:271:15:m2m_ota_rollback 24
m2m_ota.c:287:15:m2m_ota_rollback_crt 24
m2m_ota.c:304:15:m2m_ota_abort 24
m2m_ota.c:322:15:m2m_ota_switch_firmware 24
m2m_ota.c:338:15:m2m_ota_switch_crt 24
m2m_ssl.c:126:15:m2m_ssl_handshake_rsp 24
m2m_ssl.c:144:15:m2m_ssl_send_certs_to_winc 24
m2m_wifi.c:1002:7:m2m_wifi_req_curr_rssi 24
m2m_wifi.c:1294:7:m2m_wifi_stop_provision_mode 24
m2m_wifi.c:1299:7:m2m_wifi_get_connection_info 24
m2m_wifi.c:1319:7:m2m_wifi_get_sytem_time 24
m2m_wifi.c:1324:7:m2m_wifi_enable_sntp 24
m2m_wifi.c:454:7:m2m_wifi_send_crl 24
m2m_wifi.c:541:7:m2m_wifi_default_connect 24
m2m_wifi.c:671:7:m2m_wifi_disconnect 24
m2m_wifi.c:683:7:m2m_wifi_set_static_ip 24
m2m_wifi.c:719:7:m2m_wifi_enable_dhcp 24
m2m_wifi.c:729:7:m2m_wifi_set_lsn_int 24
m2m_wifi.c:734:7:m2m_wifi_set_cust_InfoElement 24
m2m_wifi.c:748:7:m2m_wifi_set_scan_options 24
m2m_wifi.c:876:7:m2m_wifi_wps_disable 24
m2m_wifi.c:950:7:m2m_wifi_p2p_disconnect 24
m2m_wifi.c:956:7:m2m_wifi_enable_ap 24
m2m_wifi.c:980:7:m2m_wifi_set_gains 24
m2m_wifi.c:989:7:m2m_wifi_disable_ap 24
map.c:270:12:try_recover 24
map.c:394:5:dhara_map_copy_sector 24
map.c:468:5:dhara_map_trim 24
map.c:486:5:dhara_map_sync 24
map.c:508:5:dhara_map_gc 24
math_helper.c:138:6:arm_float_to_q12_20 24
math_helper.c:290:6:arm_apply_guard_bits 24
math_helper.c:329:6:arm_float_to_q14 24
math_helper.c:358:6:arm_float_to_q30 24
math_helper.c:384:6:arm_float_to_q29 24
math_helper.c:411:6:arm_float_to_q28 24
memory.cpp:130:9:virtual int32_t fk::TranslatingMemory::read(uint32_t, uint8_t*, size_t, fk::MemoryReadFlags) 24
memory.cpp:134:9:virtual int32_t fk::TranslatingMemory::write(uint32_t, const uint8_t*, size_t, fk::MemoryWriteFlags) 24
memory.cpp:154:6:void fk::fk_standard_page_log() 24
memory.cpp:22:6:void fk::fk_standard_page_initialize() 24
memory.cpp:95:6:void fk::fk_standard_page_free(void*) 24
menu_view.cpp:41:13:fk::MenuScreen* fk::new_menu_screen(fk::Pool*, const char*, fk::MenuOption* (&&)[N]) [with unsigned int N = 2u] 24
menu_view.cpp:41:13:fk::MenuScreen* fk::new_menu_screen(fk::Pool*, const char*, fk::MenuOption* (&&)[N]) [with unsigned int N = 3u] 24
menu_view.cpp:41:13:fk::MenuScreen* fk::new_menu_screen(fk::Pool*, const char*, fk::MenuOption* (&&)[N]) [with unsigned int N = 4u] 24
menu_view.cpp:726:6:virtual void fk::MenuView::tick(fk::ViewController*, fk::Pool&) 24
menu_view.cpp:783:6:static void fk::MenuView::focus_up(fk::MenuScreen&) 24
menu_view.cpp:814:6:static void fk::MenuView::focus_down(fk::MenuScreen&) 24
menu_view.cpp:836:6:static void fk::MenuView::refresh_visible(fk::MenuScreen&, int8_t) 24
menu_view.cpp:864:13:fk::MenuScreen* fk::MenuView::goto_menu(fk::MenuScreen*) 24
message_view.h:14:10:virtual void fk::MessageView::tick(fk::ViewController*, fk::Pool&) 24
metal_board.cpp:335:9:int32_t fk::TwoWireWrapper::read(uint8_t, void*, int32_t) 24
metal_board.cpp:351:9:int32_t fk::TwoWireWrapper::write(uint8_t, const void*, int32_t) 24
metal_board.cpp:52:6:bool fk::Board::initialize() 24
metal_leds.cpp:105:6:virtual void fk::MetalLeds::on(uint8_t) 24
metal_leds.cpp:116:6:virtual bool fk::MetalLeds::refresh() 24
metal_leds.cpp:94:6:virtual void fk::MetalLeds::off(uint8_t) 24
metal_lora.cpp:109:6:virtual bool fk::Rn2903LoraNetwork::begin() 24
metal_lora.cpp:155:6:virtual bool fk::Rn2903LoraNetwork::send_bytes(uint8_t, const uint8_t*, size_t, bool) 24
metal_lora.cpp:15:6:bool fk::Rn2903LoraNetwork::query_status() 24
metal_lora.cpp:165:6:bool fk::Rn2903LoraNetwork::update_uplink_counter() 24
metal_modmux.cpp:130:6:bool fk::MetalModMux::update_gpio(uint8_t) 24
metal_modmux.cpp:176:6:virtual bool fk::MetalModMux::enable_module(fk::ModulePosition, fk::ModulePower) 24
metal_modmux.cpp:191:6:virtual bool fk::MetalModMux::disable_module(fk::ModulePosition) 24
metal_modmux.cpp:204:6:virtual bool fk::MetalModMux::disable_modules(fk::ModulePower) 24
metal_network.cpp:386:13:virtual fk::NetworkScan fk::MetalNetwork::scan(fk::Pool&) 24
metal_sd_card.cpp:32:1:fk::MetalSdCard::MetalSdCard() 24
metal_sd_card.cpp:366:13:virtual fk::SdCardFile* fk::MetalSdCard::open(const char*, fk::OpenFlags, fk::Pool&) 24
modmux.cpp:16:20:nonstd::optional_lite::optional<fk::Topology> fk::ModMux::get_topology() 24
modmux.cpp:85:6:virtual void fk::TopologyChange::consumed() 24
module_factory.cpp:64:6:bool fk::ModuleFactory::changes(fk::FoundModuleCollection&, fk::ConstructedModulesCollection&) 24
mutex.c:51:13:osi_mutex_acquire 24
name_view.h:11:10:virtual void fk::NameView::tick(fk::ViewController*, fk::Pool&) 24
network.cpp:18:1:cpp) 24
nm_common.c:100:9:m2m_strstr 24
nmasic.c:147:7:cpu_start 24
nmasic.c:316:7:chip_wake 24
nmasic.c:366:7:cpu_halt 24
nmasic.c:475:7:wait_for_firmware_start 24
nmasic.c:537:7:set_gpio_dir 24
nmasic.c:556:7:set_gpio_val 24
nmasic.c:576:7:get_gpio_val 24
nmasic.c:590:7:pullup_ctrl 24
nmbus.c:221:7:nm_read_block 24
nmbus.c:274:7:nm_write_block 24
nmdrv.c:111:7:nm_get_firmware_full_info 24
nmdrv.c:177:7:nm_get_ota_firmware_info 24
nmdrv.c:65:7:nm_get_firmware_info 24
nmspi.c:108:14:nmi_spi_write 24
nmspi.c:1217:7:nm_spi_init 24
nmspi.c:342:14:spi_cmd_rsp 24
nmspi.c:99:14:nmi_spi_read 24
oem_atlas.cpp:158:6:bool fk::OemAtlas::compensate(uint8_t, float) 24
os.c:188:13:os_task_initialize_options 24
os.c:264:13:os_task_start_options 24
paging_delimited_buffer.cpp:34:9:int32_t phylum::page_lock::replace(phylum::dhara_sector_t, bool) 24
paging_delimited_buffer.cpp:68:9:int32_t phylum::page_lock::dirty(bool) 24
paging_delimited_buffer.cpp:80:11:phylum::page_lock phylum::paging_delimited_buffer::reading(phylum::dhara_sector_t) 24
paging_delimited_buffer.cpp:86:11:phylum::page_lock phylum::paging_delimited_buffer::writing(phylum::dhara_sector_t) 24
paging_delimited_buffer.cpp:92:11:phylum::page_lock phylum::paging_delimited_buffer::overwrite(phylum::dhara_sector_t) 24
pb_decode.c:1337:6:pb_decode_svarint 24
pb_decode.c:288:18:pb_decode_tag 24
pb_decode.c:359:18:pb_make_string_substream 24
pb_encode.c:533:18:pb_encode_ex 24
pb_encode.c:604:18:pb_encode_varint 24
pb_encode.c:81:18:pb_write 24
platform.cpp:176:6:void osi_panic(os_panic_kind_t) 24
pool.cpp:129:7:char* fk::Pool::strndup(const char*, size_t) 24
pool.cpp:234:1:fk::StandardPool::StandardPool(const char*, size_t, fk::Pool*) 24
pool.cpp:240:7:virtual fk::Pool* fk::StandardPool::subpool(const char*, size_t) 24
pool.cpp:355:7:fk::Pool* fk::create_standard_pool_inside(const char*) 24
pool_pointer.h:94:16:) [with Wrapped = fk::UploadDataWorker; Wrapee = fk::TaskWorker; ConcreteWrapped = fk::PoolWorker<fk::UploadDataWorker, fk::UploadDataWorker, bool, bool>; ConcreteWrapee = fk::PoolWorker<fk::UploadDataWorker, fk::UploadDataWorker, bool, bool>; Args = {bool, bool}] 24
printf.cpp:683:5:int alogging_vsnprintf(char*, size_t, const char*, va_list) 24
printf.cpp:683:5:int os_vsnprintf(char*, size_t, const char*, va_list) 24
printf.cpp:689:5:int os_vfctprintf(void (*)(char, void*), void*, const char*, va_list) 24
protobuf.cpp:152:6:bool fk::pb_decode_data(pb_istream_t*, const pb_field_t*, void**) 24
protobuf.cpp:25:6:bool fk::pb_decode_string(pb_istream_t*, const pb_field_t*, void**) 24
protobuf.cpp:46:6:bool fk::pb_encode_array(pb_ostream_t*, const pb_field_t*, void* const*) 24
protobuf.cpp:88:6:bool fk::pb_encode_uint32_array(pb_ostream_t*, const pb_field_t*, void* const*) 24
queue.c:141:13:osi_queue_dequeue 24
queue.c:49:12:osi_queue_enqueue_isr 24
random_module.cpp:16:14:virtual fk::ModuleReturn fk::RandomModule::api(fk::ModuleContext, fk::HttpServerConnection*, fk::Pool&) 24
record_chain.cpp:33:9:int32_t phylum::record_chain::create_chain(phylum::page_lock&) 24
registry.cpp:28:6:void fk::ModuleRegistry::initialize() 24
req.cpp:169:9:int32_t fk::HttpRequest::on_data(const char*, size_t) 24
req.cpp:70:9:int32_t fk::HttpRequest::parse(const char*, size_t) 24
rn2903.cpp:277:6:bool fk::Rn2903::join(const char*, const char*, int32_t, uint32_t) 24
rn2903.cpp:307:6:bool fk::Rn2903::join(const char*, const char*, const char*, uint32_t, uint32_t) 24
rn2903.cpp:332:6:bool fk::Rn2903::join(const char*) 24
rwlock.c:61:13:osi_rwlock_acquire_write 24
samd21_host.c:374:10:UHD_Pipe_Alloc 24
sc16is740.cpp:127:6:bool fk::Sc16is740::write(const char*) 24
sc16is740.cpp:152:6:bool fk::Sc16is740::write_register(uint8_t, uint8_t) 24
sc16is740.cpp:167:6:bool fk::Sc16is740::read_register(uint8_t, uint8_t&) 24
sc16is740.cpp:60:6:bool fk::Sc16is740::begin(uint32_t) 24
scheduling.cpp:25:6:virtual void fk::ReadingsTask::run() 24
scheduling.cpp:62:6:virtual void fk::UploadDataTask::run() 24
scheduling.cpp:89:6:virtual void fk::ServiceModulesTask::run() 24
sector_chain.cpp:176:9:int32_t phylum::sector_chain::truncate() 24
sector_chain.cpp:196:9:int32_t phylum::sector_chain::load(phylum::page_lock&) 24
sector_chain.cpp:31:9:int32_t phylum::sector_chain::flush() 24
sector_chain.cpp:39:9:int32_t phylum::sector_chain::flush(phylum::page_lock&) 24
self_check.cpp:12:6:void fk::check_message(const char*, bool, uint32_t, bool) 24
self_check_view.h:22:10:virtual void fk::SelfCheckView::tick(fk::ViewController*, fk::Pool&) 24
semaphore.c:43:13:osi_semaphore_acquire 24
simple_buffer.h:133:13:int32_t phylum::general_buffer<PointerType>::fill(const uint8_t*, size_t, T) [with T = phylum::file_reader::read(uint8_t*, size_t)::__lambda1::__lambda2; PointerType = unsigned char; int32_t = long int; uint8_t = unsigned char; size_t = unsigned int] 24
simple_buffer.h:237:10:bool phylum::general_buffer<PointerType>::try_read(uint32_t&) [with PointerType = const unsigned char; uint32_t = long unsigned int] 24
simple_buffer.h:237:10:bool phylum::general_buffer<PointerType>::try_read(uint32_t&) [with PointerType = const unsigned char; uint32_t = long unsigned int] 24
simple_buffer.h:237:10:bool phylum::general_buffer<PointerType>::try_read(uint32_t&) [with PointerType = const unsigned char; uint32_t = long unsigned int] 24
simple_buffer.h:237:10:bool phylum::general_buffer<PointerType>::try_read(uint32_t&) [with PointerType = const unsigned char; uint32_t = long unsigned int] 24
simple_buffer.h:237:10:bool phylum::general_buffer<PointerType>::try_read(uint32_t&) [with PointerType = const unsigned char; uint32_t = long unsigned int] 24
simple_buffer.h:237:10:bool phylum::general_buffer<PointerType>::try_read(uint32_t&) [with PointerType = const unsigned char; uint32_t = long unsigned int] 24
simple_buffer.h:237:10:bool phylum::general_buffer<PointerType>::try_read(uint32_t&) [with PointerType = const unsigned char; uint32_t = long unsigned int] 24
simple_buffer.h:237:10:bool phylum::general_buffer<PointerType>::try_read(uint32_t&) [with PointerType = const unsigned char; uint32_t = long unsigned int] 24
simple_ntp.cpp:17:1:fk::SimpleNTP::SimpleNTP() 24
socket.c:1074:8:nmi_inet_addr 24
socket.c:1132:7:gethostbyname 24
spi_flash.c:232:14:2 24
spi_flash.c:312:14:spi_flash_write_enable 24
spi_flash.c:556:7:spi_flash_enable 24
spi_flash.c:632:7:spi_flash_write 24
spi_flash.c:747:8:spi_flash_get_size 24
spi_flash.c:99:14:spi_flash_read_status_reg 24
spi_flash.cpp:237:9:int32_t fk::SpiFlash::write(uint32_t, const uint8_t*, size_t) 24
spi_flash.cpp:584:6:void fk::SpiFlash::read_ecc_information() 24
startup_worker.cpp:406:6:bool fk::StartupWorker::save_captured_logs(bool) 24
startup_worker.cpp:416:6:bool fk::StartupWorker::check_for_self_test_startup(fk::Pool&) 24
state.cpp:47:11:fk::Schedule& fk::Schedule::operator=(const fk_app_Schedule&) 24
state.cpp:91:1:fk::GlobalState::GlobalState() 24
statistics_memory.cpp:28:9:virtual int32_t fk::StatisticsMemory::read(uint32_t, uint8_t*, size_t, fk::MemoryReadFlags) 24
statistics_memory.cpp:33:9:virtual int32_t fk::StatisticsMemory::write(uint32_t, const uint8_t*, size_t, fk::MemoryWriteFlags) 24
storage.cpp:151:13:fk::FileReader* fk::Storage::file_reader(fk::FileNumber, fk::Pool&) 24
storage.cpp:715:6:fk::File fk::Storage::file(uint8_t) 24
storage.cpp:719:6:fk::File fk::Storage::file(uint8_t, fk::Pool&) 24
storage.cpp:93:1:fk::Storage::Storage(fk::DataMemory*, fk::Pool&, bool) 24
super_chain.cpp:20:9:int32_t phylum::super_chain::format() 24
task_stack.cpp:12:9:int32_t task_stack::push(const char*) 24
task_stack.h:36:5:logged_task::logged_task(const char*, const char*) 24
task_stack.h:36:5:logged_task::logged_task(const char*, const char*) 24
task_stack.h:36:5:logged_task::logged_task(const char*, const char*) 24
task_stack.h:36:5:logged_task::logged_task(const char*, const char*) 24
temperature.cpp:27:6:bool fk::CoreTemperature::read(float*) 24
tiny_printf.c:686:5:tiny_vsnprintf 24
tiny_printf.c:702:5:tiny_vfctprintf 24
u8g2_buffer.c:187:6:u8g2_WriteBufferPBM 24
u8g2_buffer.c:193:6:u8g2_WriteBufferXBM 24
u8g2_buffer.c:202:6:u8g2_WriteBufferPBM2 24
u8g2_buffer.c:208:6:u8g2_WriteBufferXBM2 24
u8g2_display.cpp:77:6:virtual void fk::U8g2Display::centered(const xbm_data_t&) 24
u8g2_font.c:1117:20:u8g2_string_width 24
u8g2_font.c:1171:8:u8g2_GetStrX 24
u8g2_font.c:768:13:u8g2_DrawGlyph 24
u8g2_font.c:793:20:u8g2_draw_string 24
u8g2_hvline.c:132:6:u8g2_draw_hv_line_2dir 24
u8g2_hvline.c:150:6:u8g2_DrawHVLine 24
u8g2_hvline.c:221:6:u8g2_DrawPixel 24
u8g2_polygon.c:142:13:7 24
u8g2_polygon.c:247:13:4 24
u8g2_setup.c:186:13:u8g2_apply_clip_window 24
u8g2_setup.c:442:6:u8g2_Setup_null 24
u8log.c:171:6:u8log_Init 24
u8x8_byte.c:577:9:u8x8_byte_sw_i2c 24
u8x8_cad.c:123:6:u8x8_cad_vsendf 24
u8x8_cad.c:159:6:u8x8_cad_SendSequence 24
u8x8_cad.c:224:9:u8x8_cad_110 24
u8x8_cad.c:257:9:u8x8_cad_100 24
u8x8_cad.c:289:9:u8x8_cad_001 24
u8x8_cad.c:321:9:u8x8_cad_011 24
u8x8_cad.c:428:13:u8x8_i2c_data_transfer 24
u8x8_cad.c:437:9:u8x8_cad_ssd13xx_i2c 24
u8x8_cad.c:488:9:u8x8_cad_ssd13xx_fast_i2c 24
u8x8_cad.c:565:9:u8x8_cad_st75256_i2c 24
u8x8_cad.c:611:9:u8x8_cad_ld7032_i2c 24
u8x8_cad.c:670:9:u8x8_cad_uc16xx_i2c 24
u8x8_cad.c:98:9:u8x8_cad_SendMultipleArg 24
u8x8_d_a2printer.c:64:9:u8x8_d_a2printer_common 24
u8x8_d_il3820_296x128.c:181:13:u8x8_d_il3820_draw_tile 24
u8x8_d_ist3020.c:134:9:u8x8_d_ist3020_erc19264 24
u8x8_d_ist7920.c:135:9:u8x8_d_ist7920_128x128 24
u8x8_d_ks0108.c:130:9:u8x8_d_ks0108_128x64 24
u8x8_d_ks0108.c:240:9:u8x8_d_ks0108_erm19264 24
u8x8_d_ks0108.c:67:13:u8x8_ks0108_out 24
u8x8_d_ld7032_60x32.c:134:16:u8x8_d_ld7032_generic 24
u8x8_d_ls013b7dh03.c:70:9:u8x8_d_ls013b7dh03_128x128 24
u8x8_d_max7219.c:106:16:u8x8_d_max7219_generic 24
u8x8_d_pcd8544_84x48.c:101:9:u8x8_d_pcd8544_84x48 24
u8x8_d_pcf8812.c:183:9:u8x8_d_pcf8812_96x65 24
u8x8_d_pcf8814_hx1230.c:188:9:u8x8_d_hx1230_96x68 24
u8x8_d_s1d15e06.c:68:9:u8x8_d_s1d15e06_common 24
u8x8_d_sbn1661.c:138:9:u8x8_d_sbn1661_122x32 24
u8x8_d_sed1330.c:68:9:u8x8_d_sed1330_common 24
u8x8_d_sh1106_64x32.c:199:9:u8x8_d_sh1106_64x32 24
u8x8_d_sh1106_72x40.c:200:9:u8x8_d_sh1106_72x40_wise 24
u8x8_d_sh1107.c:74:16:u8x8_d_sh1107_generic 24
u8x8_d_sh1108.c:204:9:u8x8_d_sh1108_160x160 24
u8x8_d_ssd1305.c:76:16:u8x8_d_ssd1305_generic 24
u8x8_d_ssd1306_128x32.c:105:16:u8x8_d_ssd1306_128x32_generic 24
u8x8_d_ssd1306_128x32.c:308:9:u8x8_d_sh1106_128x32_visionox 24
u8x8_d_ssd1306_128x64_noname.c:207:16:u8x8_d_ssd1306_sh1106_generic 24
u8x8_d_ssd1306_2040x16.c:198:9:u8x8_d_ssd1306_2040x16 24
u8x8_d_ssd1306_48x64.c:199:9:u8x8_d_ssd1306_48x64_winstar 24
u8x8_d_ssd1306_64x32.c:73:16:u8x8_d_ssd1306_64x32_generic 24
u8x8_d_ssd1306_64x48.c:197:9:u8x8_d_ssd1306_64x48_er 24
u8x8_d_ssd1306_72x40.c:250:9:u8x8_d_ssd1306_72x40_er 24
u8x8_d_ssd1306_96x16.c:197:9:u8x8_d_ssd1306_96x16_er 24
u8x8_d_ssd1309.c:74:16:u8x8_d_ssd1309_generic 24
u8x8_d_ssd1316.c:217:9:u8x8_d_ssd1316_128x32 24
u8x8_d_ssd1317.c:222:9:u8x8_d_ssd1317_96x96 24
u8x8_d_ssd1318.c:172:16:u8x8_d_ssd1318_generic 24
u8x8_d_st7511.c:126:9:u8x8_d_st7511_avd_320x240 24
u8x8_d_st75256.c:1123:9:u8x8_d_st75256_jlx256160 24
u8x8_d_st75256.c:1289:9:u8x8_d_st75256_jlx256160m 24
u8x8_d_st75256.c:1482:9:u8x8_d_st75256_jlx256160_alt 24
u8x8_d_st75256.c:157:16:u8x8_d_st75256_256x128_generic 24
u8x8_d_st75256.c:1673:9:u8x8_d_st75256_jlx19296 24
u8x8_d_st75256.c:736:9:u8x8_d_st75256_jlx172104 24
u8x8_d_st75256.c:928:9:u8x8_d_st75256_jlx240160 24
u8x8_d_st7528.c:189:13:u8x8_d_st7528_graylevel_init 24
u8x8_d_st75320.c:252:9:u8x8_d_st75320_jlx320240 24
u8x8_d_st7565.c:115:9:u8x8_d_st7565_common 24
u8x8_d_st7567.c:153:9:u8x8_d_st7567_pi_132x64 24
u8x8_d_st7567.c:297:9:u8x8_d_st7567_jlx12864 24
u8x8_d_st7567.c:461:16:u8x8_d_st7567_enh_dg128064_generic 24
u8x8_d_st7567.c:639:9:u8x8_d_st7567_64x32 24
u8x8_d_st7567.c:777:9:u8x8_d_st7567_hem6432 24
u8x8_d_st7567.c:924:9:u8x8_d_st7567_os12864 24
u8x8_d_st7571.c:240:9:u8x8_d_st7571_128x128 24
u8x8_d_st7588.c:223:9:u8x8_d_st7588_jlx12864 24
u8x8_d_stdio.c:52:6:bitmap_show 24
u8x8_d_t6963.c:59:9:u8x8_d_t6963_common 24
u8x8_d_uc1601.c:122:9:u8x8_d_uc1601_128x32 24
u8x8_d_uc1604.c:76:9:u8x8_d_uc1604_common 24
u8x8_d_uc1608.c:72:9:u8x8_d_uc1608_common 24
u8x8_d_uc1611.c:691:9:u8x8_d_uc1611_ids4073 24
u8x8_d_uc1611.c:84:9:u8x8_d_uc1611_common 24
u8x8_d_uc1638.c:72:9:u8x8_d_uc1638_common 24
u8x8_d_uc1701_dogs102.c:127:9:u8x8_d_uc1701_ea_dogs102 24
u8x8_d_uc1701_mini12864.c:127:9:u8x8_d_uc1701_mini12864 24
u8x8_debounce.c:142:9:u8x8_GetMenuEvent 24
u8x8_display.c:123:6:u8x8_ClearDisplayWithTile 24
u8x8_selection_list.c:77:6:u8x8_DrawSelectionList 24
u8x8_selection_list.c:87:6:u8x8_sl_string_line_cb 24
u8x8_setup.c:133:6:u8x8_Setup 24
upgrade_from_sd_worker.cpp:182:6:bool fk::UpgradeFirmwareFromSdWorker::load_firmware(const char*, uint32_t, fk::Pool&) 24
upgrade_from_sd_worker.cpp:34:6:bool fk::UpgradeFirmwareFromSdWorker::log_file_firmware(const char*, fkb_header_t*, fk::Pool&) 24
url_parser.h:75:17:const char* fk::UrlParser::find_query_param(const char*, fk::Pool&) 24
url_parser.h:75:17:const char* fk::UrlParser::find_query_param(const char*, fk::Pool&) 24
url_parser.h:75:17:const char* fk::UrlParser::find_query_param(const char*, fk::Pool&) 24
url_parser.h:75:17:const char* fk::UrlParser::find_query_param(const char*, fk::Pool&) 24
utilities.cpp:14:8:size_t fk::bytes_to_hex_string(char*, size_t, const uint8_t*, size_t) 24
utilities.cpp:29:13:const char* fk::bytes_to_hex_string_pool(const uint8_t*, size_t, fk::Pool&) 24
uuid.c:15:9:fk_uuid_sprintf 24
water_module.cpp:32:10:virtual bool fk::Mcp2803ReadyChecker::block_until_ready(fk::TwoWireWrapper&) 24
weather_module.cpp:59:14:virtual fk::ModuleReturn fk::WeatherModule::api(fk::ModuleContext, fk::HttpServerConnection*, fk::Pool&) 24
wiring_analog.c:354:6:analogWrite 24
wiring_shift.c:28:10:shiftIn 24
wiring_shift.c:52:6:shiftOut 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::BackupWorker; ConcreteWrapped = fk::BackupWorker; Args = {}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::ConfigureModuleWorker; ConcreteWrapped = fk::ConfigureModuleWorker; Args = {fk::ModulePosition&, ModuleHeader&}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::ConfigureModuleWorker; ConcreteWrapped = fk::ConfigureModuleWorker; Args = {fk::ModulePosition&}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::DownloadFileWorker; ConcreteWrapped = fk::DownloadFileWorker; Args = {fk::HttpServerConnection*&}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::DownloadFirmwareWorker; ConcreteWrapped = fk::DownloadFirmwareWorker; Args = {}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::DownloadLogsWorker; ConcreteWrapped = fk::DownloadLogsWorker; Args = {fk::HttpServerConnection*&}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::DownloadWorker; ConcreteWrapped = fk::DownloadWorker; Args = {fk::HttpServerConnection*&, unsigned char&}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::DumpFlashMemoryWorker; ConcreteWrapped = fk::DumpFlashMemoryWorker; Args = {}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::ExportDataWorker; ConcreteWrapped = fk::ExportDataWorker; Args = {}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::FactoryWipeWorker; ConcreteWrapped = fk::FactoryWipeWorker; Args = {bool}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::FactoryWipeWorker; ConcreteWrapped = fk::FactoryWipeWorker; Args = {bool}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::FsckWorker; ConcreteWrapped = fk::FsckWorker; Args = {}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::LoraRangingWorker; ConcreteWrapped = fk::LoraRangingWorker; Args = {bool}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::LoraWorker; ConcreteWrapped = fk::LoraWorker; Args = {}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::PollSensorsWorker; ConcreteWrapped = fk::PollSensorsWorker; Args = {}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::ReadingsWorker; ConcreteWrapped = fk::ReadingsWorker; Args = {bool, bool, fk::ModulePowerState}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::ReadingsWorker; ConcreteWrapped = fk::ReadingsWorker; Args = {bool, bool, fk::ModulePowerState}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::ReceiveFirmwareWorker; ConcreteWrapped = fk::ReceiveFirmwareWorker; Args = {fk::HttpServerConnection*&}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::RefreshModulesWorker; ConcreteWrapped = fk::RefreshModulesWorker; Args = {}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::SelfCheckWorker; ConcreteWrapped = fk::SelfCheckWorker; Args = {fk::DisplaySelfCheckCallbacks&}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::ServiceModulesWorker; ConcreteWrapped = fk::ServiceModulesWorker; Args = {}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::StartupWorker; ConcreteWrapped = fk::StartupWorker; Args = {}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::UpgradeFirmwareFromSdWorker; ConcreteWrapped = fk::UpgradeFirmwareFromSdWorker; Args = {fk::SdCardFirmware&}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::UploadDataWorker; ConcreteWrapped = fk::UploadDataWorker; Args = {bool, bool}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::UploadDataWorker; ConcreteWrapped = fk::UploadDataWorker; Args = {}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::WifiToggleWorker; ConcreteWrapped = fk::WifiToggleWorker; Args = {fk::WifiToggleWorker::DesiredState}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::WifiToggleWorker; ConcreteWrapped = fk::WifiToggleWorker; Args = {}] 24
worker.h:100:10:void fk::PoolWorker<Wrapped, ConcreteWrapped, Args>::run() [with Wrapped = fk::WriteMemoryWorker; ConcreteWrapped = fk::WriteMemoryWorker; Args = {fk::HttpServerConnection*&}] 24
write_memory_handler.cpp:47:13:15(fk::FlashMemory&, uint32_t, uint8_t*) 24
logging.cpp:110:6:) 28
rn2903.cpp:121:6:) 28
Adafruit_SPIFlash.cpp:230:10:uint32_t Adafruit_SPIFlash::writeBuffer(uint32_t, const uint8_t*, uint32_t) 32
Adafruit_SPIFlash.cpp:45:6:bool Adafruit_SPIFlash::begin() 32
Base64.cpp:12:5:int base64_encode(char*, char*, int) 32
FatFile.cpp:101:6:bool FatFile::contiguousRange(uint32_t*, uint32_t*) 32
FatFile.cpp:1386:5:int FatFile::write(const void*, size_t) 32
FatFile.cpp:733:5:int FatFile::read(void*, size_t) 32
FatFilePrint.cpp:160:6:static void FatFile::printFatDate(print_t*, uint16_t) 32
FatFilePrint.cpp:178:12:int printFieldT(FatFile*, char, Type, char) [with Type = long unsigned int] 32
FatFilePrint.cpp:178:12:int printFieldT(FatFile*, char, Type, char) [with Type = short unsigned int] 32
FatFilePrint.cpp:204:5:int FatFile::printField(float, char, uint8_t) 32
FatVolume.cpp:215:8:int8_t FatVolume::fatGet(uint32_t, uint32_t*) 32
FatVolume.cpp:388:9:int32_t FatVolume::freeClusterCount() 32
FatVolume.cpp:550:6:bool FatVolume::wipe(print_t*) 32
FatVolume.cpp:73:6:bool FatVolume::allocateCluster(uint32_t, uint32_t*) 32
FmtNumber.cpp:239:7:char* fmtFloat(float, char*, uint8_t) 32
FmtNumber.cpp:379:7:float scanFloat(const char*, char**) 32
MDNS.cpp:110:1:MDNS::MDNS(UDP&, MDNSAllocator*) 32
MDNS.cpp:1493:6:void MDNS::_finishedResolvingName(char*, const byte*) 32
MDNS.cpp:184:5:int MDNS::_initQuery(uint8_t, const char*, long unsigned int) 32
Print.cpp:211:8:size_t Print::printFloat(double, uint8_t) 32
SEGGER_RTT.c:1353:5:SEGGER_RTT_AllocDownBuffer 32
SEGGER_RTT.c:1398:5:SEGGER_RTT_AllocUpBuffer 32
SEGGER_RTT.c:1449:5:SEGGER_RTT_ConfigUpBuffer 32
SEGGER_RTT.c:1496:5:SEGGER_RTT_ConfigDownBuffer 32
SEGGER_RTT.c:1719:5:SEGGER_RTT_TerminalOut 32
SEGGER_RTT.c:334:17:_WriteBlocking 32
SEGGER_RTT.c:526:10:SEGGER_RTT_ReadUpNoLock 32
SEGGER_RTT.c:617:10:SEGGER_RTT_ReadNoLock 32
SdSpiCard.cpp:228:6:bool SdSpiCard::begin(SdSpiDriver*, uint8_t, SPISettings) 32
SdSpiCard.cpp:322:9:uint8_t SdSpiCard::cardCommand(uint8_t, uint32_t) 32
SdSpiCard.cpp:379:6:bool SdSpiCard::erase(uint32_t, uint32_t) 32
StdioStream.cpp:160:8:size_t StdioStream::fread(void*, size_t, size_t) 32
StdioStream.cpp:274:5:int StdioStream::printDec(float, uint8_t) 32
StdioStream.cpp:342:5:int StdioStream::printDec(uint32_t) 32
StdioStream.cpp:56:7:char* StdioStream::fgets(char*, size_t, size_t*) 32
Stream.cpp:106:7:bool Stream::findUntil(char*, char*) 32
Stream.cpp:114:6:1(char*, size_t) 32
Stream.cpp:159:7:float Stream::parseFloat(LookaheadMode, char) 32
TinyGPS.cpp:368:6:void TinyGPS::f_get_position(float*, float*, long unsigned int*) 32
Tone.cpp:73:6:void tone(uint32_t, uint32_t, uint32_t) 32
U8x8lib.cpp:749:20:uint8_t u8x8_byte_arduino_3wire_hw_spi(u8x8_t*, uint8_t, uint8_t, void*) 32
Uart.cpp:27:1:Uart::Uart(SERCOM*, uint8_t, uint8_t, SercomRXPad, SercomUartTXPad) 32
Uart.cpp:32:1:Uart::Uart(SERCOM*, uint8_t, uint8_t, SercomRXPad, SercomUartTXPad, uint8_t, uint8_t) 32
Uart.cpp:48:6:virtual void Uart::begin(long unsigned int, uint16_t) 32
WInterrupts.c:79:6:attachInterrupt 32
WiFi.cpp:1092:5:int WiFiClass::ping(const char*, uint8_t) 32
WiFi.cpp:430:9:uint8_t WiFiClass::startConnect(const char*, uint8_t, const void*) 32
WiFi.cpp:53:6:void WiFiClass::handleEvent(uint8_t, void*) 32
WiFi.cpp:664:6:void WiFiClass::config(IPAddress, IPAddress) 32
WiFiServer.cpp:116:8:virtual size_t WiFiServer::write(const uint8_t*, size_t) 32
WiFiServer.cpp:41:9:uint8_t WiFiServer::begin(uint8_t) 32
WiFiSocket.cpp:149:7:sint8 WiFiSocketClass::connect(SOCKET, sockaddr*, uint8) 32
WiFiUdp.cpp:118:5:virtual int WiFiUDP::beginPacket(const char*, uint16_t) 32
Wire.cpp:29:1:TwoWire::TwoWire(SERCOM*, uint8_t, uint8_t) 32
api_handler.cpp:155:13:void fk::debug_schedule(const char*, const fk::Schedule&) 32
base64.cpp:24:9:virtual int32_t fk::HexReader::read(uint8_t*, size_t) 32
base64.cpp:42:9:virtual int32_t fk::HexWriter::write(const uint8_t*, size_t) 32
blake2b.cpp:252:6:void BLAKE2b::finalize(void*, size_t) 32
board.cpp:12:9:int32_t fk::TwoWireWrapper::read_register_u8(uint8_t, uint8_t, uint8_t&) 32
board.cpp:43:9:int32_t fk::TwoWireWrapper::write_register_buffer(uint8_t, uint8_t, const void*, int32_t) 32
board.cpp:59:9:int32_t fk::TwoWireWrapper::read_register_buffer(uint8_t, uint8_t, uint8_t*, int32_t) 32
caching_memory.cpp:9:6:void fk::CachedPage::mark_dirty(uint16_t, uint16_t) 32
cpool.cpp:102:6:void fk::ConnectionPool::queue_debug(fk::PoolPointer<fk::NetworkConnection>*) 32
curves.cpp:43:8:fk::Curve* fk::create_curve(fk_data_ModuleConfiguration*, fk::Pool&) 32
debug.cpp:13:6:void fk::fk_verify_state() 32
delimited_buffer.h:105:21:) [with T = phylum::sector_chain_header_t; Args = {phylum::entry_type, const long unsigned int&, long unsigned int&}; phylum::sector_offset_t = short unsigned int] 32
dhara_map.cpp:101:9:virtual int32_t phylum::dhara_sector_map::write(phylum::dhara_sector_t, const uint8_t*, size_t) 32
dhara_map.cpp:151:9:virtual int32_t phylum::dhara_sector_map::read(phylum::dhara_sector_t, uint8_t*, size_t) 32
dhara_map.cpp:312:5:int phylum::dhara_nand_read(const dhara_nand*, phylum::dhara_page_t, size_t, size_t, uint8_t*, dhara_error_t*) 32
directory_chain.cpp:17:9:virtual int32_t phylum::directory_chain::write_header(phylum::page_lock&) 32
directory_tree.cpp:7:9:virtual int32_t phylum::directory_tree::mount() 32
dns_message.cpp:269:6:void fk::DNSWriter::begin() 32
dns_message.cpp:275:16:int32_t fk::write_name(fk::Writer*, const char*) 32
eeprom.cpp:16:13:bool fk::read_page(fk::TwoWireWrapper*, uint16_t, uint8_t*, size_t) 32
file.cpp:219:9:int32_t fk::File::try_write(const uint8_t*, size_t) 32
file.cpp:269:6:bool fk::File::seek(fk::RecordReference) 32
file.cpp:397:6:bool fk::File::at_start_of_file() const 32
file_ops_phylum.cpp:16:8:virtual size_t fk::PhylumFlashMemory::block_size() 32
file_ops_phylum.cpp:20:8:virtual size_t fk::PhylumFlashMemory::number_blocks() 32
file_ops_phylum.cpp:24:8:virtual size_t fk::PhylumFlashMemory::page_size() 32
flash.cpp:31:9:virtual int32_t fk::FlashWriter::write(const uint8_t*, size_t) 32
format_sd_card.cpp:15:6:bool fk::FormatSdCard::begin() 32
hal_aes_sync.c:147:20:aes_sync_cfb_crypt_last_unaligned_data 32
hal_flash.c:152:9:flash_erase 32
hal_timer.c:120:9:timer_add_task 32
hal_usb_device.c:356:9:usb_d_ep_init 32
hpl_aes.c:550:9:_aes_sync_ctr_crypt 32
hpl_aes.c:600:9:_aes_sync_gcm_crypt_and_tag 32
hpl_dsu.c:83:9:_crc_sync_crc32 32
hpl_nvmctrl.c:204:6:_flash_append 32
hpl_sercom.c:1482:9:_i2c_m_sync_transfer 32
hpl_sercom.c:2708:9:_spi_m_sync_trans 32
hpl_tc.c:136:9:_timer_init 32
hpl_usb.c:1023:13:_usb_d_dev_in_next 32
hpl_usb.c:1690:9:_usb_d_dev_ep_enable 32
http_connection.cpp:11:1:fk::HttpConnection::HttpConnection(fk::PoolPointer<fk::NetworkConnection>*) 32
http_connection.cpp:47:6:bool fk::HttpConnection::begin(const char*, const char*, const char*, const char*, uint16_t, const char*, bool) 32
http_parser.c:2423:1:http_parser_parse_url 32
http_server_connection.cpp:20:9:int32_t fk::HttpServerConnection::plain(int32_t, const char*, const char*) 32
ina219.cpp:122:14:fk::MeterReading fk::Ina219::read() 32
istream.cpp:228:10:istream& istream::getline(char*, ios_base::streamsize, char) 32
istream.cpp:50:10:istream& istream::get(char*, ios_base::streamsize, char) 32
istream.cpp:74:6:void istream::getBool(bool*) 32
journal.c:692:12:recover_from 32
journal.c:806:5:dhara_journal_enqueue 32
journal.c:827:5:dhara_journal_copy 32
loading.c:55:10:fkb_try_launch 32
logging.cpp:250:6:void fk::fk_log_debugging(const char*) 32
logging.cpp:47:6:bool fk::fk_logs_flush() 32
logging.cpp:56:6:void fk::fk_logs_vprintf(const char*, va_list) 32
lora_manager.cpp:13:6:bool fk::LoraManager::available() 32
lora_manager.cpp:18:18:fk::LoraState fk::get_lora_state() 32
lwcron.cpp:109:10:static lwcron::CronSpec lwcron::CronSpec::interval(uint32_t) 32
lwcron.cpp:202:6:void lwcron::Scheduler::begin(lwcron::DateTime) 32
lwcron.cpp:239:24:lwcron::Scheduler::TaskAndTime lwcron::Scheduler::nextTask(lwcron::DateTime, uint32_t) 32
m2m_ota.c:80:13:m2m_ota_cb 32
m2m_ssl.c:166:15:m2m_ssl_retrieve_cert 32
m2m_ssl.c:278:7:m2m_ssl_set_active_ciphersuites 32
m2m_wifi.c:1008:7:m2m_wifi_send_ethernet_pkt 32
m2m_wifi.c:1091:7:m2m_wifi_req_scan_result 32
m2m_wifi.c:1159:7:m2m_wifi_request_sleep 32
m2m_wifi.c:1304:7:m2m_wifi_set_sytem_time 32
m2m_wifi.c:1342:7:m2m_wifi_set_power_profile 32
m2m_wifi.c:1360:7:m2m_wifi_set_tx_power 32
m2m_wifi.c:1380:7:m2m_wifi_enable_firmware_logs 32
m2m_wifi.c:1400:7:m2m_wifi_set_battery_voltage 32
m2m_wifi.c:1417:7:m2m_wifi_prng_get_random_bytes 32
m2m_wifi.c:675:7:m2m_wifi_set_mac_address 32
m2m_wifi.c:757:7:m2m_wifi_set_scan_region 32
m2m_wifi.c:765:7:m2m_wifi_request_scan 32
m2m_wifi.c:793:7:m2m_wifi_request_scan_passive 32
m2m_wifi.c:934:7:m2m_wifi_p2p 32
map.c:188:5:dhara_map_read 32
memory.cpp:48:7:void* fk::fk_standard_page_malloc(size_t, const char*) 32
menu_view.cpp:396:6:void fk::MenuView::create_confirmation_menu() 32
menu_view.cpp:741:6:void fk::MenuView::refresh() 32
menu_view.cpp:771:6:static void fk::MenuView::choose_active_network(fk::WifiNetworkInfo) 32
metal_board.cpp:217:6:bool fk::SpiWrapper::transfer_command(uint8_t, const uint8_t*, uint8_t*, uint32_t) 32
metal_ipc.cpp:105:6:virtual bool fk::MetalIPC::launch_worker(fk::WorkerCategory, fk::TaskWorker*) 32
metal_leds.cpp:42:6:virtual bool fk::MetalLeds::brightness(uint8_t, bool) 32
metal_modmux.cpp:292:6:virtual bool fk::MetalModMux::choose_nothing() 32
metal_modmux.cpp:339:6:virtual bool fk::MetalModMux::any_modules_on(fk::ModulePower) 32
metal_network.cpp:119:9:virtual int32_t fk::MetalNetworkConnection::read(uint8_t*, size_t) 32
metal_network.cpp:415:33:virtual fk::PoolPointer<fk::NetworkConnection>* fk::MetalNetworkListener::accept() 32
metal_qspi.cpp:12:1:fk::MetalQspiMemory::MetalQspiMemory() 32
metal_qspi.cpp:15:6:virtual bool fk::MetalQspiMemory::begin() 32
metal_sd_card.cpp:382:1:fk::MetalSdCardFile::MetalSdCardFile(const char*, oflag_t) 32
module_factory.cpp:84:51:tl::expected<fk::collection<fk::ConstructedModule>, fk::Error> fk::ModuleFactory::rescan_and_initialize(fk::ScanningContext, fk::ModuleScanning&, fk::Pool&) 32
network.cpp:186:6:void fk::task_handler_network(void*) 32
network_services.cpp:49:6:bool fk::NetworkServices::begin(fk::NetworkSettings, uint32_t, fk::Pool&) 32
nmasic.c:174:8:nmi_get_chipid 32
nmspi.c:213:14:spi_cmd 32
nmspi.c:904:14:spi_write_reg 32
os.c:382:13:osi_task_status_set 32
os.c:659:13:osi_schedule 32
pb_decode.c:170:25:pb_decode_varint32_eof 32
pb_decode.c:85:18:pb_read 32
pb_encode.c:570:25:pb_encode_varint_32 32
pool.cpp:292:7:virtual void* fk::StandardPool::malloc(size_t) 32
printf.cpp:673:5:) 32
printf.cpp:673:5:) 32
printf.cpp:689:5:) 32
printf.cpp:696:5:) 32
process.cpp:108:17:nonstd::optional_lite::optional<T> fk::FirmwareStorage::walk(std::function<nonstd::optional_lite::optional<T>(const fkb_header_t*)>) [with R = bool] 32
qrcode.c:314:13:drawFormatBits 32
qrcode.c:855:8:qrcode_initText 32
queue.c:92:13:osi_queue_enqueue 32
random_module.cpp:52:17:virtual fk::ModuleReadings* fk::RandomModule::take_readings(fk::ReadingsContext, fk::Pool&) 32
readings_worker.cpp:32:6:bool fk::ReadingsWorker::prepare(fk::Pool&) 32
receive_firmware_handler.cpp:15:6:bool fk::ReceiveFirmwareWorker::read_complete_and_fail(const char*, fk::Pool&) 32
record_chain.cpp:59:9:int32_t phylum::record_chain::prepare(phylum::page_lock&, size_t) 32
record_chain.cpp:5:9:int32_t phylum::record_chain::mount_chain(phylum::page_lock&) 32
records.cpp:572:20:bool fk::pb_decode_float_array(pb_istream_t*, const pb_field_t*, void**) 32
req.cpp:138:9:int32_t fk::HttpRequest::on_header_value(const char*, size_t) 32
rn2903.cpp:237:6:bool fk::Rn2903::configure_us915(uint8_t) 32
rn2903.cpp:27:6:bool fk::Rn2903::wake() 32
sc16is740.cpp:113:6:bool fk::Sc16is740::write_fifo(const uint8_t*, size_t) 32
sc16is740.cpp:95:6:bool fk::Sc16is740::read_fifo(uint8_t*, size_t) 32
scanning.cpp:200:6:virtual bool fk::ModuleScanning::erase(fk::ModulePosition) 32
scheduler.cpp:207:13:void fk::update_power_save(bool) 32
sector_chain.cpp:374:9:int32_t phylum::sector_chain::dequeue_sector(phylum::dhara_sector_t*) 32
sector_chain.cpp:54:9:virtual int32_t phylum::sector_chain::seek_end_of_chain(phylum::page_lock&) 32
sector_chain.cpp:7:9:int32_t phylum::sector_chain::create_if_necessary() 32
self_check.cpp:17:6:bool fk::single_check(const char*, T) [with T = fk::SelfCheck::temperature()::__lambda1] 32
simple_buffer.h:26:5:phylum::general_buffer<PointerType>::general_buffer(phylum::general_buffer<PointerType>&&) [with PointerType = const unsigned char] 32
simple_buffer.h:26:5:phylum::general_buffer<PointerType>::general_buffer(phylum::general_buffer<PointerType>&&) [with PointerType = const unsigned char] 32
simple_buffer.h:26:5:phylum::general_buffer<PointerType>::general_buffer(phylum::general_buffer<PointerType>&&) [with PointerType = const unsigned char] 32
simple_buffer.h:26:5:phylum::general_buffer<PointerType>::general_buffer(phylum::general_buffer<PointerType>&&) [with PointerType = const unsigned char] 32
simple_buffer.h:26:5:phylum::general_buffer<PointerType>::general_buffer(phylum::general_buffer<PointerType>&&) [with PointerType = const unsigned char] 32
simple_buffer.h:26:5:phylum::general_buffer<PointerType>::general_buffer(phylum::general_buffer<PointerType>&&) [with PointerType = const unsigned char] 32
simple_buffer.h:26:5:phylum::general_buffer<PointerType>::general_buffer(phylum::general_buffer<PointerType>&&) [with PointerType = const unsigned char] 32
simple_buffer.h:26:5:phylum::general_buffer<PointerType>::general_buffer(phylum::general_buffer<PointerType>&&) [with PointerType = unsigned char] 32
socket.c:1378:7:sslEnableCertExpirationCheck 32
socket.c:671:7:listen 32
spi_flash.c:444:14:spi_flash_pp 32
spi_flash.cpp:320:9:int32_t fk::SpiFlash::erase_block_internal(uint32_t) 32
spi_flash.cpp:486:6:bool fk::SpiFlash::read_unique_id() 32
spi_flash.cpp:562:6:bool fk::SpiFlash::get_feature(uint8_t, uint8_t*) 32
spi_flash.cpp:570:6:bool fk::SpiFlash::set_feature(uint8_t, uint8_t) 32
spi_flash.cpp:670:6:bool fk::SpiFlash::transfer_command(uint8_t, const uint8_t*, uint8_t*, uint32_t) 32
spi_flash.cpp:674:6:bool fk::SpiFlash::transfer(uint8_t*, uint32_t, const uint8_t*, uint8_t*, uint32_t) 32
startup_worker.cpp:313:6:bool fk::StartupWorker::create_new_state(fk::Storage&, fk::GlobalState*, fk::Pool&) 32
startup_worker.cpp:524:6:bool fk::StartupWorker::check_for_interactive_startup(fk::Pool&) 32
state.cpp:115:6:void fk::GlobalState::update_physical_modules(const ConstructedModulesCollection&) 32
state.cpp:71:36:fk::GlobalStateRef<const fk::GlobalState*> fk::get_global_state_ro() 32
state.cpp:77:30:fk::GlobalStateRef<fk::GlobalState*> fk::get_global_state_rw() 32
state.h:109:5:fk::WifiNetworkInfo::WifiNetworkInfo(const fk::WifiNetworkInfo&) 32
statistics_memory.cpp:15:6:void fk::MemoryStatistics::log(const char*) const 32
storage.cpp:143:9:int32_t fk::Storage::installed() 32
storage.cpp:763:10:uint32_t fk::Storage::fsck(fk::File&, fk::ProgressTracker&) 32
super_chain.cpp:5:9:int32_t phylum::super_chain::mount() 32
tiny_printf.c:676:5:tiny_snprintf 32
tiny_printf.c:692:5:tiny_fctprintf 32
u8g2_box.c:42:6:u8g2_DrawBox 32
u8g2_circle.c:129:13:u8g2_draw_disc_section 32
u8g2_circle.c:217:13:u8g2_draw_ellipse_section 32
u8g2_circle.c:350:13:u8g2_draw_filled_ellipse_section 32
u8g2_circle.c:43:13:u8g2_draw_circle_section 32
u8g2_d_setup.c:1008:6:u8g2_Setup_sh1108_i2c_160x160_1 32
u8g2_d_setup.c:1017:6:u8g2_Setup_sh1108_i2c_160x160_2 32
u8g2_d_setup.c:1026:6:u8g2_Setup_sh1108_i2c_160x160_f 32
u8g2_d_setup.c:102:6:u8g2_Setup_ssd1305_i2c_128x32_adafruit_f 32
u8g2_d_setup.c:1036:6:u8g2_Setup_sh1122_256x64_1 32
u8g2_d_setup.c:1045:6:u8g2_Setup_sh1122_256x64_2 32
u8g2_d_setup.c:1054:6:u8g2_Setup_sh1122_256x64_f 32
u8g2_d_setup.c:1064:6:u8g2_Setup_sh1122_i2c_256x64_1 32
u8g2_d_setup.c:1073:6:u8g2_Setup_sh1122_i2c_256x64_2 32
u8g2_d_setup.c:1082:6:u8g2_Setup_sh1122_i2c_256x64_f 32
u8g2_d_setup.c:1092:6:u8g2_Setup_ssd1306_128x32_univision_1 32
u8g2_d_setup.c:1100:6:u8g2_Setup_ssd1306_128x32_winstar_1 32
u8g2_d_setup.c:1109:6:u8g2_Setup_ssd1306_128x32_univision_2 32
u8g2_d_setup.c:1117:6:u8g2_Setup_ssd1306_128x32_winstar_2 32
u8g2_d_setup.c:1126:6:u8g2_Setup_ssd1306_128x32_univision_f 32
u8g2_d_setup.c:112:6:u8g2_Setup_ssd1305_128x64_adafruit_1 32
u8g2_d_setup.c:1134:6:u8g2_Setup_ssd1306_128x32_winstar_f 32
u8g2_d_setup.c:1144:6:u8g2_Setup_ssd1306_i2c_128x32_univision_1 32
u8g2_d_setup.c:1152:6:u8g2_Setup_ssd1306_i2c_128x32_winstar_1 32
u8g2_d_setup.c:1161:6:u8g2_Setup_ssd1306_i2c_128x32_univision_2 32
u8g2_d_setup.c:1169:6:u8g2_Setup_ssd1306_i2c_128x32_winstar_2 32
u8g2_d_setup.c:1178:6:u8g2_Setup_ssd1306_i2c_128x32_univision_f 32
u8g2_d_setup.c:1186:6:u8g2_Setup_ssd1306_i2c_128x32_winstar_f 32
u8g2_d_setup.c:1196:6:u8g2_Setup_sh1106_128x32_visionox_1 32
u8g2_d_setup.c:1205:6:u8g2_Setup_sh1106_128x32_visionox_2 32
u8g2_d_setup.c:120:6:u8g2_Setup_ssd1305_128x64_raystar_1 32
u8g2_d_setup.c:1214:6:u8g2_Setup_sh1106_128x32_visionox_f 32
u8g2_d_setup.c:1224:6:u8g2_Setup_sh1106_i2c_128x32_visionox_1 32
u8g2_d_setup.c:1233:6:u8g2_Setup_sh1106_i2c_128x32_visionox_2 32
u8g2_d_setup.c:1242:6:u8g2_Setup_sh1106_i2c_128x32_visionox_f 32
u8g2_d_setup.c:1252:6:u8g2_Setup_ssd1306_64x48_er_1 32
u8g2_d_setup.c:1261:6:u8g2_Setup_ssd1306_64x48_er_2 32
u8g2_d_setup.c:1270:6:u8g2_Setup_ssd1306_64x48_er_f 32
u8g2_d_setup.c:1280:6:u8g2_Setup_ssd1306_i2c_64x48_er_1 32
u8g2_d_setup.c:1289:6:u8g2_Setup_ssd1306_i2c_64x48_er_2 32
u8g2_d_setup.c:1298:6:u8g2_Setup_ssd1306_i2c_64x48_er_f 32
u8g2_d_setup.c:129:6:u8g2_Setup_ssd1305_128x64_adafruit_2 32
u8g2_d_setup.c:1308:6:u8g2_Setup_ssd1306_48x64_winstar_1 32
u8g2_d_setup.c:1317:6:u8g2_Setup_ssd1306_48x64_winstar_2 32
u8g2_d_setup.c:1326:6:u8g2_Setup_ssd1306_48x64_winstar_f 32
u8g2_d_setup.c:1336:6:u8g2_Setup_ssd1306_i2c_48x64_winstar_1 32
u8g2_d_setup.c:1345:6:u8g2_Setup_ssd1306_i2c_48x64_winstar_2 32
u8g2_d_setup.c:1354:6:u8g2_Setup_ssd1306_i2c_48x64_winstar_f 32
u8g2_d_setup.c:1364:6:u8g2_Setup_ssd1306_64x32_noname_1 32
u8g2_d_setup.c:1372:6:u8g2_Setup_ssd1306_64x32_1f_1 32
u8g2_d_setup.c:137:6:u8g2_Setup_ssd1305_128x64_raystar_2 32
u8g2_d_setup.c:1381:6:u8g2_Setup_ssd1306_64x32_noname_2 32
u8g2_d_setup.c:1389:6:u8g2_Setup_ssd1306_64x32_1f_2 32
u8g2_d_setup.c:1398:6:u8g2_Setup_ssd1306_64x32_noname_f 32
u8g2_d_setup.c:1406:6:u8g2_Setup_ssd1306_64x32_1f_f 32
u8g2_d_setup.c:1416:6:u8g2_Setup_ssd1306_i2c_64x32_noname_1 32
u8g2_d_setup.c:1424:6:u8g2_Setup_ssd1306_i2c_64x32_1f_1 32
u8g2_d_setup.c:1433:6:u8g2_Setup_ssd1306_i2c_64x32_noname_2 32
u8g2_d_setup.c:1441:6:u8g2_Setup_ssd1306_i2c_64x32_1f_2 32
u8g2_d_setup.c:1450:6:u8g2_Setup_ssd1306_i2c_64x32_noname_f 32
u8g2_d_setup.c:1458:6:u8g2_Setup_ssd1306_i2c_64x32_1f_f 32
u8g2_d_setup.c:1468:6:u8g2_Setup_ssd1306_96x16_er_1 32
u8g2_d_setup.c:146:6:u8g2_Setup_ssd1305_128x64_adafruit_f 32
u8g2_d_setup.c:1477:6:u8g2_Setup_ssd1306_96x16_er_2 32
u8g2_d_setup.c:1486:6:u8g2_Setup_ssd1306_96x16_er_f 32
u8g2_d_setup.c:1496:6:u8g2_Setup_ssd1306_i2c_96x16_er_1 32
u8g2_d_setup.c:1505:6:u8g2_Setup_ssd1306_i2c_96x16_er_2 32
u8g2_d_setup.c:1514:6:u8g2_Setup_ssd1306_i2c_96x16_er_f 32
u8g2_d_setup.c:1524:6:u8g2_Setup_ssd1309_128x64_noname2_1 32
u8g2_d_setup.c:1533:6:u8g2_Setup_ssd1309_128x64_noname2_2 32
u8g2_d_setup.c:1542:6:u8g2_Setup_ssd1309_128x64_noname2_f 32
u8g2_d_setup.c:154:6:u8g2_Setup_ssd1305_128x64_raystar_f 32
u8g2_d_setup.c:1552:6:u8g2_Setup_ssd1309_i2c_128x64_noname2_1 32
u8g2_d_setup.c:1561:6:u8g2_Setup_ssd1309_i2c_128x64_noname2_2 32
u8g2_d_setup.c:1570:6:u8g2_Setup_ssd1309_i2c_128x64_noname2_f 32
u8g2_d_setup.c:1580:6:u8g2_Setup_ssd1309_128x64_noname0_1 32
u8g2_d_setup.c:1589:6:u8g2_Setup_ssd1309_128x64_noname0_2 32
u8g2_d_setup.c:1598:6:u8g2_Setup_ssd1309_128x64_noname0_f 32
u8g2_d_setup.c:1608:6:u8g2_Setup_ssd1309_i2c_128x64_noname0_1 32
u8g2_d_setup.c:1617:6:u8g2_Setup_ssd1309_i2c_128x64_noname0_2 32
u8g2_d_setup.c:1626:6:u8g2_Setup_ssd1309_i2c_128x64_noname0_f 32
u8g2_d_setup.c:1636:6:u8g2_Setup_ssd1316_128x32_1 32
u8g2_d_setup.c:1645:6:u8g2_Setup_ssd1316_128x32_2 32
u8g2_d_setup.c:164:6:u8g2_Setup_ssd1305_i2c_128x64_adafruit_1 32
u8g2_d_setup.c:1654:6:u8g2_Setup_ssd1316_128x32_f 32
u8g2_d_setup.c:1664:6:u8g2_Setup_ssd1316_i2c_128x32_1 32
u8g2_d_setup.c:1673:6:u8g2_Setup_ssd1316_i2c_128x32_2 32
u8g2_d_setup.c:1682:6:u8g2_Setup_ssd1316_i2c_128x32_f 32
u8g2_d_setup.c:1692:6:u8g2_Setup_ssd1317_96x96_1 32
u8g2_d_setup.c:16:6:u8g2_Setup_ssd1305_128x32_adafruit_1 32
u8g2_d_setup.c:1701:6:u8g2_Setup_ssd1317_96x96_2 32
u8g2_d_setup.c:1710:6:u8g2_Setup_ssd1317_96x96_f 32
u8g2_d_setup.c:1720:6:u8g2_Setup_ssd1317_i2c_96x96_1 32
u8g2_d_setup.c:1729:6:u8g2_Setup_ssd1317_i2c_96x96_2 32
u8g2_d_setup.c:172:6:u8g2_Setup_ssd1305_i2c_128x64_raystar_1 32
u8g2_d_setup.c:1738:6:u8g2_Setup_ssd1317_i2c_96x96_f 32
u8g2_d_setup.c:1748:6:u8g2_Setup_ssd1318_128x96_1 32
u8g2_d_setup.c:1756:6:u8g2_Setup_ssd1318_128x96_xcp_1 32
u8g2_d_setup.c:1765:6:u8g2_Setup_ssd1318_128x96_2 32
u8g2_d_setup.c:1773:6:u8g2_Setup_ssd1318_128x96_xcp_2 32
u8g2_d_setup.c:1782:6:u8g2_Setup_ssd1318_128x96_f 32
u8g2_d_setup.c:1790:6:u8g2_Setup_ssd1318_128x96_xcp_f 32
u8g2_d_setup.c:1800:6:u8g2_Setup_ssd1318_i2c_128x96_1 32
u8g2_d_setup.c:1808:6:u8g2_Setup_ssd1318_i2c_128x96_xcp_1 32
u8g2_d_setup.c:1817:6:u8g2_Setup_ssd1318_i2c_128x96_2 32
u8g2_d_setup.c:181:6:u8g2_Setup_ssd1305_i2c_128x64_adafruit_2 32
u8g2_d_setup.c:1825:6:u8g2_Setup_ssd1318_i2c_128x96_xcp_2 32
u8g2_d_setup.c:1834:6:u8g2_Setup_ssd1318_i2c_128x96_f 32
u8g2_d_setup.c:1842:6:u8g2_Setup_ssd1318_i2c_128x96_xcp_f 32
u8g2_d_setup.c:1852:6:u8g2_Setup_ssd1325_nhd_128x64_1 32
u8g2_d_setup.c:1861:6:u8g2_Setup_ssd1325_nhd_128x64_2 32
u8g2_d_setup.c:1870:6:u8g2_Setup_ssd1325_nhd_128x64_f 32
u8g2_d_setup.c:1880:6:u8g2_Setup_ssd1325_i2c_nhd_128x64_1 32
u8g2_d_setup.c:1889:6:u8g2_Setup_ssd1325_i2c_nhd_128x64_2 32
u8g2_d_setup.c:1898:6:u8g2_Setup_ssd1325_i2c_nhd_128x64_f 32
u8g2_d_setup.c:189:6:u8g2_Setup_ssd1305_i2c_128x64_raystar_2 32
u8g2_d_setup.c:1908:6:u8g2_Setup_ssd0323_os128064_1 32
u8g2_d_setup.c:1917:6:u8g2_Setup_ssd0323_os128064_2 32
u8g2_d_setup.c:1926:6:u8g2_Setup_ssd0323_os128064_f 32
u8g2_d_setup.c:1936:6:u8g2_Setup_ssd0323_i2c_os128064_1 32
u8g2_d_setup.c:1945:6:u8g2_Setup_ssd0323_i2c_os128064_2 32
u8g2_d_setup.c:1954:6:u8g2_Setup_ssd0323_i2c_os128064_f 32
u8g2_d_setup.c:1964:6:u8g2_Setup_ssd1326_er_256x32_1 32
u8g2_d_setup.c:1973:6:u8g2_Setup_ssd1326_er_256x32_2 32
u8g2_d_setup.c:1982:6:u8g2_Setup_ssd1326_er_256x32_f 32
u8g2_d_setup.c:198:6:u8g2_Setup_ssd1305_i2c_128x64_adafruit_f 32
u8g2_d_setup.c:1992:6:u8g2_Setup_ssd1326_i2c_er_256x32_1 32
u8g2_d_setup.c:2001:6:u8g2_Setup_ssd1326_i2c_er_256x32_2 32
u8g2_d_setup.c:2010:6:u8g2_Setup_ssd1326_i2c_er_256x32_f 32
u8g2_d_setup.c:2020:6:u8g2_Setup_ssd1327_ws_96x64_1 32
u8g2_d_setup.c:2029:6:u8g2_Setup_ssd1327_ws_96x64_2 32
u8g2_d_setup.c:2038:6:u8g2_Setup_ssd1327_ws_96x64_f 32
u8g2_d_setup.c:2048:6:u8g2_Setup_ssd1327_i2c_ws_96x64_1 32
u8g2_d_setup.c:2057:6:u8g2_Setup_ssd1327_i2c_ws_96x64_2 32
u8g2_d_setup.c:2066:6:u8g2_Setup_ssd1327_i2c_ws_96x64_f 32
u8g2_d_setup.c:206:6:u8g2_Setup_ssd1305_i2c_128x64_raystar_f 32
u8g2_d_setup.c:2076:6:u8g2_Setup_ssd1327_seeed_96x96_1 32
u8g2_d_setup.c:2085:6:u8g2_Setup_ssd1327_seeed_96x96_2 32
u8g2_d_setup.c:2094:6:u8g2_Setup_ssd1327_seeed_96x96_f 32
u8g2_d_setup.c:2104:6:u8g2_Setup_ssd1327_i2c_seeed_96x96_1 32
u8g2_d_setup.c:2113:6:u8g2_Setup_ssd1327_i2c_seeed_96x96_2 32
u8g2_d_setup.c:2122:6:u8g2_Setup_ssd1327_i2c_seeed_96x96_f 32
u8g2_d_setup.c:2132:6:u8g2_Setup_ssd1327_ea_w128128_1 32
u8g2_d_setup.c:2140:6:u8g2_Setup_ssd1327_midas_128x128_1 32
u8g2_d_setup.c:2148:6:u8g2_Setup_ssd1327_ws_128x128_1 32
u8g2_d_setup.c:2157:6:u8g2_Setup_ssd1327_ea_w128128_2 32
u8g2_d_setup.c:2165:6:u8g2_Setup_ssd1327_midas_128x128_2 32
u8g2_d_setup.c:216:6:u8g2_Setup_ssd1306_2040x16_1 32
u8g2_d_setup.c:2173:6:u8g2_Setup_ssd1327_ws_128x128_2 32
u8g2_d_setup.c:2182:6:u8g2_Setup_ssd1327_ea_w128128_f 32
u8g2_d_setup.c:2190:6:u8g2_Setup_ssd1327_midas_128x128_f 32
u8g2_d_setup.c:2198:6:u8g2_Setup_ssd1327_ws_128x128_f 32
u8g2_d_setup.c:2208:6:u8g2_Setup_ssd1327_i2c_ea_w128128_1 32
u8g2_d_setup.c:2216:6:u8g2_Setup_ssd1327_i2c_midas_128x128_1 32
u8g2_d_setup.c:2224:6:u8g2_Setup_ssd1327_i2c_ws_128x128_1 32
u8g2_d_setup.c:2233:6:u8g2_Setup_ssd1327_i2c_ea_w128128_2 32
u8g2_d_setup.c:2241:6:u8g2_Setup_ssd1327_i2c_midas_128x128_2 32
u8g2_d_setup.c:2249:6:u8g2_Setup_ssd1327_i2c_ws_128x128_2 32
u8g2_d_setup.c:2258:6:u8g2_Setup_ssd1327_i2c_ea_w128128_f 32
u8g2_d_setup.c:225:6:u8g2_Setup_ssd1306_2040x16_2 32
u8g2_d_setup.c:2266:6:u8g2_Setup_ssd1327_i2c_midas_128x128_f 32
u8g2_d_setup.c:2274:6:u8g2_Setup_ssd1327_i2c_ws_128x128_f 32
u8g2_d_setup.c:2284:6:u8g2_Setup_ssd1327_visionox_128x96_1 32
u8g2_d_setup.c:2293:6:u8g2_Setup_ssd1327_visionox_128x96_2 32
u8g2_d_setup.c:2302:6:u8g2_Setup_ssd1327_visionox_128x96_f 32
u8g2_d_setup.c:2312:6:u8g2_Setup_ssd1327_i2c_visionox_128x96_1 32
u8g2_d_setup.c:2321:6:u8g2_Setup_ssd1327_i2c_visionox_128x96_2 32
u8g2_d_setup.c:2330:6:u8g2_Setup_ssd1327_i2c_visionox_128x96_f 32
u8g2_d_setup.c:2340:6:u8g2_Setup_ssd1329_128x96_noname_1 32
u8g2_d_setup.c:2349:6:u8g2_Setup_ssd1329_128x96_noname_2 32
u8g2_d_setup.c:234:6:u8g2_Setup_ssd1306_2040x16_f 32
u8g2_d_setup.c:2358:6:u8g2_Setup_ssd1329_128x96_noname_f 32
u8g2_d_setup.c:2368:6:u8g2_Setup_ld7032_60x32_1 32
u8g2_d_setup.c:2376:6:u8g2_Setup_ld7032_60x32_alt_1 32
u8g2_d_setup.c:2385:6:u8g2_Setup_ld7032_60x32_2 32
u8g2_d_setup.c:2393:6:u8g2_Setup_ld7032_60x32_alt_2 32
u8g2_d_setup.c:2402:6:u8g2_Setup_ld7032_60x32_f 32
u8g2_d_setup.c:2410:6:u8g2_Setup_ld7032_60x32_alt_f 32
u8g2_d_setup.c:2420:6:u8g2_Setup_ld7032_i2c_60x32_1 32
u8g2_d_setup.c:2428:6:u8g2_Setup_ld7032_i2c_60x32_alt_1 32
u8g2_d_setup.c:2437:6:u8g2_Setup_ld7032_i2c_60x32_2 32
u8g2_d_setup.c:2445:6:u8g2_Setup_ld7032_i2c_60x32_alt_2 32
u8g2_d_setup.c:244:6:u8g2_Setup_ssd1306_128x64_noname_1 32
u8g2_d_setup.c:2454:6:u8g2_Setup_ld7032_i2c_60x32_f 32
u8g2_d_setup.c:2462:6:u8g2_Setup_ld7032_i2c_60x32_alt_f 32
u8g2_d_setup.c:2472:6:u8g2_Setup_st7920_p_192x32_1 32
u8g2_d_setup.c:2481:6:u8g2_Setup_st7920_p_192x32_2 32
u8g2_d_setup.c:2490:6:u8g2_Setup_st7920_p_192x32_f 32
u8g2_d_setup.c:2500:6:u8g2_Setup_st7920_192x32_1 32
u8g2_d_setup.c:2509:6:u8g2_Setup_st7920_192x32_2 32
u8g2_d_setup.c:2518:6:u8g2_Setup_st7920_192x32_f 32
u8g2_d_setup.c:2528:6:u8g2_Setup_st7920_s_192x32_1 32
u8g2_d_setup.c:252:6:u8g2_Setup_ssd1306_128x64_vcomh0_1 32
u8g2_d_setup.c:2537:6:u8g2_Setup_st7920_s_192x32_2 32
u8g2_d_setup.c:2546:6:u8g2_Setup_st7920_s_192x32_f 32
u8g2_d_setup.c:2556:6:u8g2_Setup_st7920_p_128x64_1 32
u8g2_d_setup.c:2565:6:u8g2_Setup_st7920_p_128x64_2 32
u8g2_d_setup.c:2574:6:u8g2_Setup_st7920_p_128x64_f 32
u8g2_d_setup.c:2584:6:u8g2_Setup_st7920_128x64_1 32
u8g2_d_setup.c:2593:6:u8g2_Setup_st7920_128x64_2 32
u8g2_d_setup.c:25:6:u8g2_Setup_ssd1305_128x32_noname_2 32
u8g2_d_setup.c:2602:6:u8g2_Setup_st7920_128x64_f 32
u8g2_d_setup.c:260:6:u8g2_Setup_ssd1306_128x64_alt0_1 32
u8g2_d_setup.c:2612:6:u8g2_Setup_st7920_s_128x64_1 32
u8g2_d_setup.c:2621:6:u8g2_Setup_st7920_s_128x64_2 32
u8g2_d_setup.c:2630:6:u8g2_Setup_st7920_s_128x64_f 32
u8g2_d_setup.c:2640:6:u8g2_Setup_ls013b7dh03_128x128_1 32
u8g2_d_setup.c:2649:6:u8g2_Setup_ls013b7dh03_128x128_2 32
u8g2_d_setup.c:2658:6:u8g2_Setup_ls013b7dh03_128x128_f 32
u8g2_d_setup.c:2668:6:u8g2_Setup_ls027b7dh01_400x240_1 32
u8g2_d_setup.c:2676:6:u8g2_Setup_ls027b7dh01_m0_400x240_1 32
u8g2_d_setup.c:2685:6:u8g2_Setup_ls027b7dh01_400x240_2 32
u8g2_d_setup.c:2693:6:u8g2_Setup_ls027b7dh01_m0_400x240_2 32
u8g2_d_setup.c:269:6:u8g2_Setup_ssd1306_128x64_noname_2 32
u8g2_d_setup.c:2702:6:u8g2_Setup_ls027b7dh01_400x240_f 32
u8g2_d_setup.c:2710:6:u8g2_Setup_ls027b7dh01_m0_400x240_f 32
u8g2_d_setup.c:2720:6:u8g2_Setup_ls013b7dh05_144x168_1 32
u8g2_d_setup.c:2729:6:u8g2_Setup_ls013b7dh05_144x168_2 32
u8g2_d_setup.c:2738:6:u8g2_Setup_ls013b7dh05_144x168_f 32
u8g2_d_setup.c:2748:6:u8g2_Setup_uc1701_ea_dogs102_1 32
u8g2_d_setup.c:2757:6:u8g2_Setup_uc1701_ea_dogs102_2 32
u8g2_d_setup.c:2766:6:u8g2_Setup_uc1701_ea_dogs102_f 32
u8g2_d_setup.c:2776:6:u8g2_Setup_uc1701_mini12864_1 32
u8g2_d_setup.c:277:6:u8g2_Setup_ssd1306_128x64_vcomh0_2 32
u8g2_d_setup.c:2785:6:u8g2_Setup_uc1701_mini12864_2 32
u8g2_d_setup.c:2794:6:u8g2_Setup_uc1701_mini12864_f 32
u8g2_d_setup.c:2804:6:u8g2_Setup_pcd8544_84x48_1 32
u8g2_d_setup.c:2813:6:u8g2_Setup_pcd8544_84x48_2 32
u8g2_d_setup.c:2822:6:u8g2_Setup_pcd8544_84x48_f 32
u8g2_d_setup.c:2832:6:u8g2_Setup_pcf8812_96x65_1 32
u8g2_d_setup.c:2841:6:u8g2_Setup_pcf8812_96x65_2 32
u8g2_d_setup.c:2850:6:u8g2_Setup_pcf8812_96x65_f 32
u8g2_d_setup.c:285:6:u8g2_Setup_ssd1306_128x64_alt0_2 32
u8g2_d_setup.c:2860:6:u8g2_Setup_hx1230_96x68_1 32
u8g2_d_setup.c:2869:6:u8g2_Setup_hx1230_96x68_2 32
u8g2_d_setup.c:2878:6:u8g2_Setup_hx1230_96x68_f 32
u8g2_d_setup.c:2888:6:u8g2_Setup_uc1604_jlx19264_1 32
u8g2_d_setup.c:2897:6:u8g2_Setup_uc1604_jlx19264_2 32
u8g2_d_setup.c:2906:6:u8g2_Setup_uc1604_jlx19264_f 32
u8g2_d_setup.c:2916:6:u8g2_Setup_uc1604_i2c_jlx19264_1 32
u8g2_d_setup.c:2925:6:u8g2_Setup_uc1604_i2c_jlx19264_2 32
u8g2_d_setup.c:2934:6:u8g2_Setup_uc1604_i2c_jlx19264_f 32
u8g2_d_setup.c:2944:6:u8g2_Setup_uc1608_erc24064_1 32
u8g2_d_setup.c:294:6:u8g2_Setup_ssd1306_128x64_noname_f 32
u8g2_d_setup.c:2952:6:u8g2_Setup_uc1608_dem240064_1 32
u8g2_d_setup.c:2961:6:u8g2_Setup_uc1608_erc24064_2 32
u8g2_d_setup.c:2969:6:u8g2_Setup_uc1608_dem240064_2 32
u8g2_d_setup.c:2978:6:u8g2_Setup_uc1608_erc24064_f 32
u8g2_d_setup.c:2986:6:u8g2_Setup_uc1608_dem240064_f 32
u8g2_d_setup.c:2996:6:u8g2_Setup_uc1608_i2c_erc24064_1 32
u8g2_d_setup.c:3004:6:u8g2_Setup_uc1608_i2c_dem240064_1 32
u8g2_d_setup.c:3013:6:u8g2_Setup_uc1608_i2c_erc24064_2 32
u8g2_d_setup.c:3021:6:u8g2_Setup_uc1608_i2c_dem240064_2 32
u8g2_d_setup.c:302:6:u8g2_Setup_ssd1306_128x64_vcomh0_f 32
u8g2_d_setup.c:3030:6:u8g2_Setup_uc1608_i2c_erc24064_f 32
u8g2_d_setup.c:3038:6:u8g2_Setup_uc1608_i2c_dem240064_f 32
u8g2_d_setup.c:3048:6:u8g2_Setup_uc1608_erc240120_1 32
u8g2_d_setup.c:3057:6:u8g2_Setup_uc1608_erc240120_2 32
u8g2_d_setup.c:3066:6:u8g2_Setup_uc1608_erc240120_f 32
u8g2_d_setup.c:3076:6:u8g2_Setup_uc1608_i2c_erc240120_1 32
u8g2_d_setup.c:3085:6:u8g2_Setup_uc1608_i2c_erc240120_2 32
u8g2_d_setup.c:3094:6:u8g2_Setup_uc1608_i2c_erc240120_f 32
u8g2_d_setup.c:3104:6:u8g2_Setup_uc1608_240x128_1 32
u8g2_d_setup.c:310:6:u8g2_Setup_ssd1306_128x64_alt0_f 32
u8g2_d_setup.c:3113:6:u8g2_Setup_uc1608_240x128_2 32
u8g2_d_setup.c:3122:6:u8g2_Setup_uc1608_240x128_f 32
u8g2_d_setup.c:3132:6:u8g2_Setup_uc1608_i2c_240x128_1 32
u8g2_d_setup.c:3141:6:u8g2_Setup_uc1608_i2c_240x128_2 32
u8g2_d_setup.c:3150:6:u8g2_Setup_uc1608_i2c_240x128_f 32
u8g2_d_setup.c:3160:6:u8g2_Setup_uc1638_160x128_1 32
u8g2_d_setup.c:3169:6:u8g2_Setup_uc1638_160x128_2 32
u8g2_d_setup.c:3178:6:u8g2_Setup_uc1638_160x128_f 32
u8g2_d_setup.c:3188:6:u8g2_Setup_uc1610_ea_dogxl160_1 32
u8g2_d_setup.c:3197:6:u8g2_Setup_uc1610_ea_dogxl160_2 32
u8g2_d_setup.c:3206:6:u8g2_Setup_uc1610_ea_dogxl160_f 32
u8g2_d_setup.c:320:6:u8g2_Setup_ssd1306_i2c_128x64_noname_1 32
u8g2_d_setup.c:3216:6:u8g2_Setup_uc1610_i2c_ea_dogxl160_1 32
u8g2_d_setup.c:3225:6:u8g2_Setup_uc1610_i2c_ea_dogxl160_2 32
u8g2_d_setup.c:3234:6:u8g2_Setup_uc1610_i2c_ea_dogxl160_f 32
u8g2_d_setup.c:3244:6:u8g2_Setup_uc1611_ea_dogm240_1 32
u8g2_d_setup.c:3253:6:u8g2_Setup_uc1611_ea_dogm240_2 32
u8g2_d_setup.c:3262:6:u8g2_Setup_uc1611_ea_dogm240_f 32
u8g2_d_setup.c:3272:6:u8g2_Setup_uc1611_i2c_ea_dogm240_1 32
u8g2_d_setup.c:3281:6:u8g2_Setup_uc1611_i2c_ea_dogm240_2 32
u8g2_d_setup.c:328:6:u8g2_Setup_ssd1306_i2c_128x64_vcomh0_1 32
u8g2_d_setup.c:3290:6:u8g2_Setup_uc1611_i2c_ea_dogm240_f 32
u8g2_d_setup.c:3300:6:u8g2_Setup_uc1611_ea_dogxl240_1 32
u8g2_d_setup.c:3309:6:u8g2_Setup_uc1611_ea_dogxl240_2 32
u8g2_d_setup.c:3318:6:u8g2_Setup_uc1611_ea_dogxl240_f 32
u8g2_d_setup.c:3328:6:u8g2_Setup_uc1611_i2c_ea_dogxl240_1 32
u8g2_d_setup.c:3337:6:u8g2_Setup_uc1611_i2c_ea_dogxl240_2 32
u8g2_d_setup.c:3346:6:u8g2_Setup_uc1611_i2c_ea_dogxl240_f 32
u8g2_d_setup.c:3356:6:u8g2_Setup_uc1611_ew50850_1 32
u8g2_d_setup.c:3365:6:u8g2_Setup_uc1611_ew50850_2 32
u8g2_d_setup.c:336:6:u8g2_Setup_ssd1306_i2c_128x64_alt0_1 32
u8g2_d_setup.c:3374:6:u8g2_Setup_uc1611_ew50850_f 32
u8g2_d_setup.c:3384:6:u8g2_Setup_uc1611_i2c_ew50850_1 32
u8g2_d_setup.c:3393:6:u8g2_Setup_uc1611_i2c_ew50850_2 32
u8g2_d_setup.c:33:6:u8g2_Setup_ssd1305_128x32_adafruit_2 32
u8g2_d_setup.c:3402:6:u8g2_Setup_uc1611_i2c_ew50850_f 32
u8g2_d_setup.c:3412:6:u8g2_Setup_uc1611_cg160160_1 32
u8g2_d_setup.c:3421:6:u8g2_Setup_uc1611_cg160160_2 32
u8g2_d_setup.c:3430:6:u8g2_Setup_uc1611_cg160160_f 32
u8g2_d_setup.c:3440:6:u8g2_Setup_uc1611_i2c_cg160160_1 32
u8g2_d_setup.c:3449:6:u8g2_Setup_uc1611_i2c_cg160160_2 32
u8g2_d_setup.c:3458:6:u8g2_Setup_uc1611_i2c_cg160160_f 32
u8g2_d_setup.c:345:6:u8g2_Setup_ssd1306_i2c_128x64_noname_2 32
u8g2_d_setup.c:3468:6:u8g2_Setup_uc1611_ids4073_1 32
u8g2_d_setup.c:3477:6:u8g2_Setup_uc1611_ids4073_2 32
u8g2_d_setup.c:3486:6:u8g2_Setup_uc1611_ids4073_f 32
u8g2_d_setup.c:3496:6:u8g2_Setup_uc1611_i2c_ids4073_1 32
u8g2_d_setup.c:3505:6:u8g2_Setup_uc1611_i2c_ids4073_2 32
u8g2_d_setup.c:3514:6:u8g2_Setup_uc1611_i2c_ids4073_f 32
u8g2_d_setup.c:3524:6:u8g2_Setup_st7511_avd_320x240_1 32
u8g2_d_setup.c:3533:6:u8g2_Setup_st7511_avd_320x240_2 32
u8g2_d_setup.c:353:6:u8g2_Setup_ssd1306_i2c_128x64_vcomh0_2 32
u8g2_d_setup.c:3542:6:u8g2_Setup_st7511_avd_320x240_f 32
u8g2_d_setup.c:3552:6:u8g2_Setup_st7528_nhd_c160100_1 32
u8g2_d_setup.c:3561:6:u8g2_Setup_st7528_nhd_c160100_2 32
u8g2_d_setup.c:3570:6:u8g2_Setup_st7528_nhd_c160100_f 32
u8g2_d_setup.c:3580:6:u8g2_Setup_st7528_i2c_nhd_c160100_1 32
u8g2_d_setup.c:3589:6:u8g2_Setup_st7528_i2c_nhd_c160100_2 32
u8g2_d_setup.c:3598:6:u8g2_Setup_st7528_i2c_nhd_c160100_f 32
u8g2_d_setup.c:3608:6:u8g2_Setup_st7528_erc16064_1 32
u8g2_d_setup.c:3617:6:u8g2_Setup_st7528_erc16064_2 32
u8g2_d_setup.c:361:6:u8g2_Setup_ssd1306_i2c_128x64_alt0_2 32
u8g2_d_setup.c:3626:6:u8g2_Setup_st7528_erc16064_f 32
u8g2_d_setup.c:3636:6:u8g2_Setup_st7528_i2c_erc16064_1 32
u8g2_d_setup.c:3645:6:u8g2_Setup_st7528_i2c_erc16064_2 32
u8g2_d_setup.c:3654:6:u8g2_Setup_st7528_i2c_erc16064_f 32
u8g2_d_setup.c:3664:6:u8g2_Setup_uc1617_jlx128128_1 32
u8g2_d_setup.c:3673:6:u8g2_Setup_uc1617_jlx128128_2 32
u8g2_d_setup.c:3682:6:u8g2_Setup_uc1617_jlx128128_f 32
u8g2_d_setup.c:3692:6:u8g2_Setup_uc1617_i2c_jlx128128_1 32
u8g2_d_setup.c:3701:6:u8g2_Setup_uc1617_i2c_jlx128128_2 32
u8g2_d_setup.c:370:6:u8g2_Setup_ssd1306_i2c_128x64_noname_f 32
u8g2_d_setup.c:3710:6:u8g2_Setup_uc1617_i2c_jlx128128_f 32
u8g2_d_setup.c:3720:6:u8g2_Setup_st7565_ea_dogm128_1 32
u8g2_d_setup.c:3728:6:u8g2_Setup_st7565_lm6063_1 32
u8g2_d_setup.c:3736:6:u8g2_Setup_st7565_64128n_1 32
u8g2_d_setup.c:3744:6:u8g2_Setup_st7565_zolen_128x64_1 32
u8g2_d_setup.c:3752:6:u8g2_Setup_st7565_lm6059_1 32
u8g2_d_setup.c:3760:6:u8g2_Setup_st7565_ks0713_1 32
u8g2_d_setup.c:3768:6:u8g2_Setup_st7565_lx12864_1 32
u8g2_d_setup.c:3776:6:u8g2_Setup_st7565_erc12864_1 32
u8g2_d_setup.c:3784:6:u8g2_Setup_st7565_erc12864_alt_1 32
u8g2_d_setup.c:378:6:u8g2_Setup_ssd1306_i2c_128x64_vcomh0_f 32
u8g2_d_setup.c:3792:6:u8g2_Setup_st7565_nhd_c12864_1 32
u8g2_d_setup.c:3800:6:u8g2_Setup_st7565_jlx12864_1 32
u8g2_d_setup.c:3809:6:u8g2_Setup_st7565_ea_dogm128_2 32
u8g2_d_setup.c:3817:6:u8g2_Setup_st7565_lm6063_2 32
u8g2_d_setup.c:3825:6:u8g2_Setup_st7565_64128n_2 32
u8g2_d_setup.c:3833:6:u8g2_Setup_st7565_zolen_128x64_2 32
u8g2_d_setup.c:3841:6:u8g2_Setup_st7565_lm6059_2 32
u8g2_d_setup.c:3849:6:u8g2_Setup_st7565_ks0713_2 32
u8g2_d_setup.c:3857:6:u8g2_Setup_st7565_lx12864_2 32
u8g2_d_setup.c:3865:6:u8g2_Setup_st7565_erc12864_2 32
u8g2_d_setup.c:386:6:u8g2_Setup_ssd1306_i2c_128x64_alt0_f 32
u8g2_d_setup.c:3873:6:u8g2_Setup_st7565_erc12864_alt_2 32
u8g2_d_setup.c:3881:6:u8g2_Setup_st7565_nhd_c12864_2 32
u8g2_d_setup.c:3889:6:u8g2_Setup_st7565_jlx12864_2 32
u8g2_d_setup.c:3898:6:u8g2_Setup_st7565_ea_dogm128_f 32
u8g2_d_setup.c:3906:6:u8g2_Setup_st7565_lm6063_f 32
u8g2_d_setup.c:3914:6:u8g2_Setup_st7565_64128n_f 32
u8g2_d_setup.c:3922:6:u8g2_Setup_st7565_zolen_128x64_f 32
u8g2_d_setup.c:3930:6:u8g2_Setup_st7565_lm6059_f 32
u8g2_d_setup.c:3938:6:u8g2_Setup_st7565_ks0713_f 32
u8g2_d_setup.c:3946:6:u8g2_Setup_st7565_lx12864_f 32
u8g2_d_setup.c:3954:6:u8g2_Setup_st7565_erc12864_f 32
u8g2_d_setup.c:3962:6:u8g2_Setup_st7565_erc12864_alt_f 32
u8g2_d_setup.c:396:6:u8g2_Setup_ssd1306_72x40_er_1 32
u8g2_d_setup.c:3970:6:u8g2_Setup_st7565_nhd_c12864_f 32
u8g2_d_setup.c:3978:6:u8g2_Setup_st7565_jlx12864_f 32
u8g2_d_setup.c:3988:6:u8g2_Setup_st7565_nhd_c12832_1 32
u8g2_d_setup.c:3997:6:u8g2_Setup_st7565_nhd_c12832_2 32
u8g2_d_setup.c:4006:6:u8g2_Setup_st7565_nhd_c12832_f 32
u8g2_d_setup.c:4016:6:u8g2_Setup_uc1601_128x32_1 32
u8g2_d_setup.c:4025:6:u8g2_Setup_uc1601_128x32_2 32
u8g2_d_setup.c:4034:6:u8g2_Setup_uc1601_128x32_f 32
u8g2_d_setup.c:4044:6:u8g2_Setup_uc1601_i2c_128x32_1 32
u8g2_d_setup.c:4053:6:u8g2_Setup_uc1601_i2c_128x32_2 32
u8g2_d_setup.c:405:6:u8g2_Setup_ssd1306_72x40_er_2 32
u8g2_d_setup.c:4062:6:u8g2_Setup_uc1601_i2c_128x32_f 32
u8g2_d_setup.c:4072:6:u8g2_Setup_st7565_ea_dogm132_1 32
u8g2_d_setup.c:4081:6:u8g2_Setup_st7565_ea_dogm132_2 32
u8g2_d_setup.c:4090:6:u8g2_Setup_st7565_ea_dogm132_f 32
u8g2_d_setup.c:4100:6:u8g2_Setup_st7567_pi_132x64_1 32
u8g2_d_setup.c:4109:6:u8g2_Setup_st7567_pi_132x64_2 32
u8g2_d_setup.c:4118:6:u8g2_Setup_st7567_pi_132x64_f 32
u8g2_d_setup.c:4128:6:u8g2_Setup_st7567_jlx12864_1 32
u8g2_d_setup.c:4136:6:u8g2_Setup_st7567_enh_dg128064_1 32
u8g2_d_setup.c:4144:6:u8g2_Setup_st7567_enh_dg128064i_1 32
u8g2_d_setup.c:414:6:u8g2_Setup_ssd1306_72x40_er_f 32
u8g2_d_setup.c:4152:6:u8g2_Setup_st7567_os12864_1 32
u8g2_d_setup.c:4161:6:u8g2_Setup_st7567_jlx12864_2 32
u8g2_d_setup.c:4169:6:u8g2_Setup_st7567_enh_dg128064_2 32
u8g2_d_setup.c:4177:6:u8g2_Setup_st7567_enh_dg128064i_2 32
u8g2_d_setup.c:4185:6:u8g2_Setup_st7567_os12864_2 32
u8g2_d_setup.c:4194:6:u8g2_Setup_st7567_jlx12864_f 32
u8g2_d_setup.c:4202:6:u8g2_Setup_st7567_enh_dg128064_f 32
u8g2_d_setup.c:4210:6:u8g2_Setup_st7567_enh_dg128064i_f 32
u8g2_d_setup.c:4218:6:u8g2_Setup_st7567_os12864_f 32
u8g2_d_setup.c:4228:6:u8g2_Setup_st7567_64x32_1 32
u8g2_d_setup.c:4236:6:u8g2_Setup_st7567_hem6432_1 32
u8g2_d_setup.c:4245:6:u8g2_Setup_st7567_64x32_2 32
u8g2_d_setup.c:424:6:u8g2_Setup_ssd1306_i2c_72x40_er_1 32
u8g2_d_setup.c:4253:6:u8g2_Setup_st7567_hem6432_2 32
u8g2_d_setup.c:4262:6:u8g2_Setup_st7567_64x32_f 32
u8g2_d_setup.c:4270:6:u8g2_Setup_st7567_hem6432_f 32
u8g2_d_setup.c:4280:6:u8g2_Setup_st7567_i2c_64x32_1 32
u8g2_d_setup.c:4288:6:u8g2_Setup_st7567_i2c_hem6432_1 32
u8g2_d_setup.c:4297:6:u8g2_Setup_st7567_i2c_64x32_2 32
u8g2_d_setup.c:42:6:u8g2_Setup_ssd1305_128x32_noname_f 32
u8g2_d_setup.c:4305:6:u8g2_Setup_st7567_i2c_hem6432_2 32
u8g2_d_setup.c:4314:6:u8g2_Setup_st7567_i2c_64x32_f 32
u8g2_d_setup.c:4322:6:u8g2_Setup_st7567_i2c_hem6432_f 32
u8g2_d_setup.c:4332:6:u8g2_Setup_st7571_128x128_1 32
u8g2_d_setup.c:433:6:u8g2_Setup_ssd1306_i2c_72x40_er_2 32
u8g2_d_setup.c:4341:6:u8g2_Setup_st7571_128x128_2 32
u8g2_d_setup.c:4350:6:u8g2_Setup_st7571_128x128_f 32
u8g2_d_setup.c:4360:6:u8g2_Setup_st7571_i2c_128x128_1 32
u8g2_d_setup.c:4369:6:u8g2_Setup_st7571_i2c_128x128_2 32
u8g2_d_setup.c:4378:6:u8g2_Setup_st7571_i2c_128x128_f 32
u8g2_d_setup.c:4388:6:u8g2_Setup_st7586s_s028hn118a_1 32
u8g2_d_setup.c:4397:6:u8g2_Setup_st7586s_s028hn118a_2 32
u8g2_d_setup.c:4406:6:u8g2_Setup_st7586s_s028hn118a_f 32
u8g2_d_setup.c:4416:6:u8g2_Setup_st7586s_erc240160_1 32
u8g2_d_setup.c:4424:6:u8g2_Setup_st7586s_ymc240160_1 32
u8g2_d_setup.c:442:6:u8g2_Setup_ssd1306_i2c_72x40_er_f 32
u8g2_d_setup.c:4433:6:u8g2_Setup_st7586s_erc240160_2 32
u8g2_d_setup.c:4441:6:u8g2_Setup_st7586s_ymc240160_2 32
u8g2_d_setup.c:4450:6:u8g2_Setup_st7586s_erc240160_f 32
u8g2_d_setup.c:4458:6:u8g2_Setup_st7586s_ymc240160_f 32
u8g2_d_setup.c:4468:6:u8g2_Setup_st7588_jlx12864_1 32
u8g2_d_setup.c:4477:6:u8g2_Setup_st7588_jlx12864_2 32
u8g2_d_setup.c:4486:6:u8g2_Setup_st7588_jlx12864_f 32
u8g2_d_setup.c:4496:6:u8g2_Setup_st7588_i2c_jlx12864_1 32
u8g2_d_setup.c:4505:6:u8g2_Setup_st7588_i2c_jlx12864_2 32
u8g2_d_setup.c:4514:6:u8g2_Setup_st7588_i2c_jlx12864_f 32
u8g2_d_setup.c:4524:6:u8g2_Setup_st75256_jlx256128_1 32
u8g2_d_setup.c:452:6:u8g2_Setup_sh1106_128x64_noname_1 32
u8g2_d_setup.c:4532:6:u8g2_Setup_st75256_wo256x128_1 32
u8g2_d_setup.c:4541:6:u8g2_Setup_st75256_jlx256128_2 32
u8g2_d_setup.c:4549:6:u8g2_Setup_st75256_wo256x128_2 32
u8g2_d_setup.c:4558:6:u8g2_Setup_st75256_jlx256128_f 32
u8g2_d_setup.c:4566:6:u8g2_Setup_st75256_wo256x128_f 32
u8g2_d_setup.c:4576:6:u8g2_Setup_st75256_i2c_jlx256128_1 32
u8g2_d_setup.c:4584:6:u8g2_Setup_st75256_i2c_wo256x128_1 32
u8g2_d_setup.c:4593:6:u8g2_Setup_st75256_i2c_jlx256128_2 32
u8g2_d_setup.c:4601:6:u8g2_Setup_st75256_i2c_wo256x128_2 32
u8g2_d_setup.c:460:6:u8g2_Setup_sh1106_128x64_vcomh0_1 32
u8g2_d_setup.c:4610:6:u8g2_Setup_st75256_i2c_jlx256128_f 32
u8g2_d_setup.c:4618:6:u8g2_Setup_st75256_i2c_wo256x128_f 32
u8g2_d_setup.c:4628:6:u8g2_Setup_st75256_jlx256160_1 32
u8g2_d_setup.c:4636:6:u8g2_Setup_st75256_jlx256160m_1 32
u8g2_d_setup.c:4644:6:u8g2_Setup_st75256_jlx256160_alt_1 32
u8g2_d_setup.c:4653:6:u8g2_Setup_st75256_jlx256160_2 32
u8g2_d_setup.c:4661:6:u8g2_Setup_st75256_jlx256160m_2 32
u8g2_d_setup.c:4669:6:u8g2_Setup_st75256_jlx256160_alt_2 32
u8g2_d_setup.c:4678:6:u8g2_Setup_st75256_jlx256160_f 32
u8g2_d_setup.c:4686:6:u8g2_Setup_st75256_jlx256160m_f 32
u8g2_d_setup.c:468:6:u8g2_Setup_sh1106_128x64_winstar_1 32
u8g2_d_setup.c:4694:6:u8g2_Setup_st75256_jlx256160_alt_f 32
u8g2_d_setup.c:4704:6:u8g2_Setup_st75256_i2c_jlx256160_1 32
u8g2_d_setup.c:4712:6:u8g2_Setup_st75256_i2c_jlx256160m_1 32
u8g2_d_setup.c:4720:6:u8g2_Setup_st75256_i2c_jlx256160_alt_1 32
u8g2_d_setup.c:4729:6:u8g2_Setup_st75256_i2c_jlx256160_2 32
u8g2_d_setup.c:4737:6:u8g2_Setup_st75256_i2c_jlx256160m_2 32
u8g2_d_setup.c:4745:6:u8g2_Setup_st75256_i2c_jlx256160_alt_2 32
u8g2_d_setup.c:4754:6:u8g2_Setup_st75256_i2c_jlx256160_f 32
u8g2_d_setup.c:4762:6:u8g2_Setup_st75256_i2c_jlx256160m_f 32
u8g2_d_setup.c:4770:6:u8g2_Setup_st75256_i2c_jlx256160_alt_f 32
u8g2_d_setup.c:477:6:u8g2_Setup_sh1106_128x64_noname_2 32
u8g2_d_setup.c:4780:6:u8g2_Setup_st75256_jlx240160_1 32
u8g2_d_setup.c:4789:6:u8g2_Setup_st75256_jlx240160_2 32
u8g2_d_setup.c:4798:6:u8g2_Setup_st75256_jlx240160_f 32
u8g2_d_setup.c:4808:6:u8g2_Setup_st75256_i2c_jlx240160_1 32
u8g2_d_setup.c:4817:6:u8g2_Setup_st75256_i2c_jlx240160_2 32
u8g2_d_setup.c:4826:6:u8g2_Setup_st75256_i2c_jlx240160_f 32
u8g2_d_setup.c:4836:6:u8g2_Setup_st75256_jlx25664_1 32
u8g2_d_setup.c:4845:6:u8g2_Setup_st75256_jlx25664_2 32
u8g2_d_setup.c:4854:6:u8g2_Setup_st75256_jlx25664_f 32
u8g2_d_setup.c:485:6:u8g2_Setup_sh1106_128x64_vcomh0_2 32
u8g2_d_setup.c:4864:6:u8g2_Setup_st75256_i2c_jlx25664_1 32
u8g2_d_setup.c:4873:6:u8g2_Setup_st75256_i2c_jlx25664_2 32
u8g2_d_setup.c:4882:6:u8g2_Setup_st75256_i2c_jlx25664_f 32
u8g2_d_setup.c:4892:6:u8g2_Setup_st75256_jlx172104_1 32
u8g2_d_setup.c:4901:6:u8g2_Setup_st75256_jlx172104_2 32
u8g2_d_setup.c:4910:6:u8g2_Setup_st75256_jlx172104_f 32
u8g2_d_setup.c:4920:6:u8g2_Setup_st75256_i2c_jlx172104_1 32
u8g2_d_setup.c:4929:6:u8g2_Setup_st75256_i2c_jlx172104_2 32
u8g2_d_setup.c:4938:6:u8g2_Setup_st75256_i2c_jlx172104_f 32
u8g2_d_setup.c:493:6:u8g2_Setup_sh1106_128x64_winstar_2 32
u8g2_d_setup.c:4948:6:u8g2_Setup_st75256_jlx19296_1 32
u8g2_d_setup.c:4957:6:u8g2_Setup_st75256_jlx19296_2 32
u8g2_d_setup.c:4966:6:u8g2_Setup_st75256_jlx19296_f 32
u8g2_d_setup.c:4976:6:u8g2_Setup_st75256_i2c_jlx19296_1 32
u8g2_d_setup.c:4985:6:u8g2_Setup_st75256_i2c_jlx19296_2 32
u8g2_d_setup.c:4994:6:u8g2_Setup_st75256_i2c_jlx19296_f 32
u8g2_d_setup.c:5004:6:u8g2_Setup_st75320_jlx320240_1 32
u8g2_d_setup.c:5013:6:u8g2_Setup_st75320_jlx320240_2 32
u8g2_d_setup.c:5022:6:u8g2_Setup_st75320_jlx320240_f 32
u8g2_d_setup.c:502:6:u8g2_Setup_sh1106_128x64_noname_f 32
u8g2_d_setup.c:5032:6:u8g2_Setup_st75320_i2c_jlx320240_1 32
u8g2_d_setup.c:5041:6:u8g2_Setup_st75320_i2c_jlx320240_2 32
u8g2_d_setup.c:5050:6:u8g2_Setup_st75320_i2c_jlx320240_f 32
u8g2_d_setup.c:5060:6:u8g2_Setup_nt7534_tg12864r_1 32
u8g2_d_setup.c:5069:6:u8g2_Setup_nt7534_tg12864r_2 32
u8g2_d_setup.c:5078:6:u8g2_Setup_nt7534_tg12864r_f 32
u8g2_d_setup.c:5088:6:u8g2_Setup_ist3020_erc19264_1 32
u8g2_d_setup.c:5097:6:u8g2_Setup_ist3020_erc19264_2 32
u8g2_d_setup.c:50:6:u8g2_Setup_ssd1305_128x32_adafruit_f 32
u8g2_d_setup.c:5106:6:u8g2_Setup_ist3020_erc19264_f 32
u8g2_d_setup.c:510:6:u8g2_Setup_sh1106_128x64_vcomh0_f 32
u8g2_d_setup.c:5116:6:u8g2_Setup_ist7920_128x128_1 32
u8g2_d_setup.c:5125:6:u8g2_Setup_ist7920_128x128_2 32
u8g2_d_setup.c:5134:6:u8g2_Setup_ist7920_128x128_f 32
u8g2_d_setup.c:5144:6:u8g2_Setup_sbn1661_122x32_1 32
u8g2_d_setup.c:5153:6:u8g2_Setup_sbn1661_122x32_2 32
u8g2_d_setup.c:5162:6:u8g2_Setup_sbn1661_122x32_f 32
u8g2_d_setup.c:5172:6:u8g2_Setup_sed1520_122x32_1 32
u8g2_d_setup.c:5181:6:u8g2_Setup_sed1520_122x32_2 32
u8g2_d_setup.c:518:6:u8g2_Setup_sh1106_128x64_winstar_f 32
u8g2_d_setup.c:5190:6:u8g2_Setup_sed1520_122x32_f 32
u8g2_d_setup.c:5200:6:u8g2_Setup_ks0108_128x64_1 32
u8g2_d_setup.c:5209:6:u8g2_Setup_ks0108_128x64_2 32
u8g2_d_setup.c:5218:6:u8g2_Setup_ks0108_128x64_f 32
u8g2_d_setup.c:5228:6:u8g2_Setup_ks0108_erm19264_1 32
u8g2_d_setup.c:5237:6:u8g2_Setup_ks0108_erm19264_2 32
u8g2_d_setup.c:5246:6:u8g2_Setup_ks0108_erm19264_f 32
u8g2_d_setup.c:5256:6:u8g2_Setup_lc7981_160x80_1 32
u8g2_d_setup.c:5265:6:u8g2_Setup_lc7981_160x80_2 32
u8g2_d_setup.c:5274:6:u8g2_Setup_lc7981_160x80_f 32
u8g2_d_setup.c:5284:6:u8g2_Setup_lc7981_160x160_1 32
u8g2_d_setup.c:528:6:u8g2_Setup_sh1106_i2c_128x64_noname_1 32
u8g2_d_setup.c:5293:6:u8g2_Setup_lc7981_160x160_2 32
u8g2_d_setup.c:5302:6:u8g2_Setup_lc7981_160x160_f 32
u8g2_d_setup.c:5312:6:u8g2_Setup_lc7981_240x128_1 32
u8g2_d_setup.c:5321:6:u8g2_Setup_lc7981_240x128_2 32
u8g2_d_setup.c:5330:6:u8g2_Setup_lc7981_240x128_f 32
u8g2_d_setup.c:5340:6:u8g2_Setup_lc7981_240x64_1 32
u8g2_d_setup.c:5349:6:u8g2_Setup_lc7981_240x64_2 32
u8g2_d_setup.c:5358:6:u8g2_Setup_lc7981_240x64_f 32
u8g2_d_setup.c:5368:6:u8g2_Setup_t6963_240x128_1 32
u8g2_d_setup.c:536:6:u8g2_Setup_sh1106_i2c_128x64_vcomh0_1 32
u8g2_d_setup.c:5377:6:u8g2_Setup_t6963_240x128_2 32
u8g2_d_setup.c:5386:6:u8g2_Setup_t6963_240x128_f 32
u8g2_d_setup.c:5396:6:u8g2_Setup_t6963_240x64_1 32
u8g2_d_setup.c:5405:6:u8g2_Setup_t6963_240x64_2 32
u8g2_d_setup.c:5414:6:u8g2_Setup_t6963_240x64_f 32
u8g2_d_setup.c:5424:6:u8g2_Setup_t6963_256x64_1 32
u8g2_d_setup.c:5433:6:u8g2_Setup_t6963_256x64_2 32
u8g2_d_setup.c:5442:6:u8g2_Setup_t6963_256x64_f 32
u8g2_d_setup.c:544:6:u8g2_Setup_sh1106_i2c_128x64_winstar_1 32
u8g2_d_setup.c:5452:6:u8g2_Setup_t6963_128x64_1 32
u8g2_d_setup.c:5460:6:u8g2_Setup_t6963_128x64_alt_1 32
u8g2_d_setup.c:5469:6:u8g2_Setup_t6963_128x64_2 32
u8g2_d_setup.c:5477:6:u8g2_Setup_t6963_128x64_alt_2 32
u8g2_d_setup.c:5486:6:u8g2_Setup_t6963_128x64_f 32
u8g2_d_setup.c:5494:6:u8g2_Setup_t6963_128x64_alt_f 32
u8g2_d_setup.c:5504:6:u8g2_Setup_t6963_160x80_1 32
u8g2_d_setup.c:5513:6:u8g2_Setup_t6963_160x80_2 32
u8g2_d_setup.c:5522:6:u8g2_Setup_t6963_160x80_f 32
u8g2_d_setup.c:5532:6:u8g2_Setup_ssd1320_160x32_1 32
u8g2_d_setup.c:553:6:u8g2_Setup_sh1106_i2c_128x64_noname_2 32
u8g2_d_setup.c:5541:6:u8g2_Setup_ssd1320_160x32_2 32
u8g2_d_setup.c:5550:6:u8g2_Setup_ssd1320_160x32_f 32
u8g2_d_setup.c:5560:6:u8g2_Setup_ssd1320_160x132_1 32
u8g2_d_setup.c:5569:6:u8g2_Setup_ssd1320_160x132_2 32
u8g2_d_setup.c:5578:6:u8g2_Setup_ssd1320_160x132_f 32
u8g2_d_setup.c:5588:6:u8g2_Setup_ssd1322_nhd_256x64_1 32
u8g2_d_setup.c:5597:6:u8g2_Setup_ssd1322_nhd_256x64_2 32
u8g2_d_setup.c:5606:6:u8g2_Setup_ssd1322_nhd_256x64_f 32
u8g2_d_setup.c:5616:6:u8g2_Setup_ssd1322_nhd_128x64_1 32
u8g2_d_setup.c:561:6:u8g2_Setup_sh1106_i2c_128x64_vcomh0_2 32
u8g2_d_setup.c:5625:6:u8g2_Setup_ssd1322_nhd_128x64_2 32
u8g2_d_setup.c:5634:6:u8g2_Setup_ssd1322_nhd_128x64_f 32
u8g2_d_setup.c:5644:6:u8g2_Setup_ssd1606_172x72_1 32
u8g2_d_setup.c:5653:6:u8g2_Setup_ssd1606_172x72_2 32
u8g2_d_setup.c:5662:6:u8g2_Setup_ssd1606_172x72_f 32
u8g2_d_setup.c:5672:6:u8g2_Setup_ssd1607_200x200_1 32
u8g2_d_setup.c:5680:6:u8g2_Setup_ssd1607_gd_200x200_1 32
u8g2_d_setup.c:5688:6:u8g2_Setup_ssd1607_ws_200x200_1 32
u8g2_d_setup.c:5697:6:u8g2_Setup_ssd1607_200x200_2 32
u8g2_d_setup.c:569:6:u8g2_Setup_sh1106_i2c_128x64_winstar_2 32
u8g2_d_setup.c:5705:6:u8g2_Setup_ssd1607_gd_200x200_2 32
u8g2_d_setup.c:5713:6:u8g2_Setup_ssd1607_ws_200x200_2 32
u8g2_d_setup.c:5722:6:u8g2_Setup_ssd1607_200x200_f 32
u8g2_d_setup.c:5730:6:u8g2_Setup_ssd1607_gd_200x200_f 32
u8g2_d_setup.c:5738:6:u8g2_Setup_ssd1607_ws_200x200_f 32
u8g2_d_setup.c:5748:6:u8g2_Setup_il3820_296x128_1 32
u8g2_d_setup.c:5756:6:u8g2_Setup_il3820_v2_296x128_1 32
u8g2_d_setup.c:5765:6:u8g2_Setup_il3820_296x128_2 32
u8g2_d_setup.c:5773:6:u8g2_Setup_il3820_v2_296x128_2 32
u8g2_d_setup.c:5782:6:u8g2_Setup_il3820_296x128_f 32
u8g2_d_setup.c:578:6:u8g2_Setup_sh1106_i2c_128x64_noname_f 32
u8g2_d_setup.c:5790:6:u8g2_Setup_il3820_v2_296x128_f 32
u8g2_d_setup.c:5800:6:u8g2_Setup_sed1330_240x128_1 32
u8g2_d_setup.c:5809:6:u8g2_Setup_sed1330_240x128_2 32
u8g2_d_setup.c:5818:6:u8g2_Setup_sed1330_240x128_f 32
u8g2_d_setup.c:5828:6:u8g2_Setup_ra8835_nhd_240x128_1 32
u8g2_d_setup.c:5837:6:u8g2_Setup_ra8835_nhd_240x128_2 32
u8g2_d_setup.c:5846:6:u8g2_Setup_ra8835_nhd_240x128_f 32
u8g2_d_setup.c:5856:6:u8g2_Setup_ra8835_320x240_1 32
u8g2_d_setup.c:5865:6:u8g2_Setup_ra8835_320x240_2 32
u8g2_d_setup.c:586:6:u8g2_Setup_sh1106_i2c_128x64_vcomh0_f 32
u8g2_d_setup.c:5874:6:u8g2_Setup_ra8835_320x240_f 32
u8g2_d_setup.c:5884:6:u8g2_Setup_max7219_64x8_1 32
u8g2_d_setup.c:5893:6:u8g2_Setup_max7219_64x8_2 32
u8g2_d_setup.c:5902:6:u8g2_Setup_max7219_64x8_f 32
u8g2_d_setup.c:5912:6:u8g2_Setup_max7219_32x8_1 32
u8g2_d_setup.c:5921:6:u8g2_Setup_max7219_32x8_2 32
u8g2_d_setup.c:5930:6:u8g2_Setup_max7219_32x8_f 32
u8g2_d_setup.c:5940:6:u8g2_Setup_max7219_8x8_1 32
u8g2_d_setup.c:5949:6:u8g2_Setup_max7219_8x8_2 32
u8g2_d_setup.c:594:6:u8g2_Setup_sh1106_i2c_128x64_winstar_f 32
u8g2_d_setup.c:5958:6:u8g2_Setup_max7219_8x8_f 32
u8g2_d_setup.c:5968:6:u8g2_Setup_s1d15e06_160100_1 32
u8g2_d_setup.c:5977:6:u8g2_Setup_s1d15e06_160100_2 32
u8g2_d_setup.c:5986:6:u8g2_Setup_s1d15e06_160100_f 32
u8g2_d_setup.c:5996:6:u8g2_Setup_a2printer_384x240_1 32
u8g2_d_setup.c:6005:6:u8g2_Setup_a2printer_384x240_2 32
u8g2_d_setup.c:6014:6:u8g2_Setup_a2printer_384x240_f 32
u8g2_d_setup.c:604:6:u8g2_Setup_sh1106_72x40_wise_1 32
u8g2_d_setup.c:60:6:u8g2_Setup_ssd1305_i2c_128x32_noname_1 32
u8g2_d_setup.c:613:6:u8g2_Setup_sh1106_72x40_wise_2 32
u8g2_d_setup.c:622:6:u8g2_Setup_sh1106_72x40_wise_f 32
u8g2_d_setup.c:632:6:u8g2_Setup_sh1106_i2c_72x40_wise_1 32
u8g2_d_setup.c:641:6:u8g2_Setup_sh1106_i2c_72x40_wise_2 32
u8g2_d_setup.c:650:6:u8g2_Setup_sh1106_i2c_72x40_wise_f 32
u8g2_d_setup.c:660:6:u8g2_Setup_sh1106_64x32_1 32
u8g2_d_setup.c:669:6:u8g2_Setup_sh1106_64x32_2 32
u8g2_d_setup.c:678:6:u8g2_Setup_sh1106_64x32_f 32
u8g2_d_setup.c:688:6:u8g2_Setup_sh1106_i2c_64x32_1 32
u8g2_d_setup.c:68:6:u8g2_Setup_ssd1305_i2c_128x32_adafruit_1 32
u8g2_d_setup.c:697:6:u8g2_Setup_sh1106_i2c_64x32_2 32
u8g2_d_setup.c:706:6:u8g2_Setup_sh1106_i2c_64x32_f 32
u8g2_d_setup.c:716:6:u8g2_Setup_sh1107_64x128_1 32
u8g2_d_setup.c:725:6:u8g2_Setup_sh1107_64x128_2 32
u8g2_d_setup.c:734:6:u8g2_Setup_sh1107_64x128_f 32
u8g2_d_setup.c:744:6:u8g2_Setup_sh1107_i2c_64x128_1 32
u8g2_d_setup.c:753:6:u8g2_Setup_sh1107_i2c_64x128_2 32
u8g2_d_setup.c:762:6:u8g2_Setup_sh1107_i2c_64x128_f 32
u8g2_d_setup.c:772:6:u8g2_Setup_sh1107_seeed_96x96_1 32
u8g2_d_setup.c:77:6:u8g2_Setup_ssd1305_i2c_128x32_noname_2 32
u8g2_d_setup.c:781:6:u8g2_Setup_sh1107_seeed_96x96_2 32
u8g2_d_setup.c:790:6:u8g2_Setup_sh1107_seeed_96x96_f 32
u8g2_d_setup.c:800:6:u8g2_Setup_sh1107_i2c_seeed_96x96_1 32
u8g2_d_setup.c:809:6:u8g2_Setup_sh1107_i2c_seeed_96x96_2 32
u8g2_d_setup.c:818:6:u8g2_Setup_sh1107_i2c_seeed_96x96_f 32
u8g2_d_setup.c:828:6:u8g2_Setup_sh1107_128x128_1 32
u8g2_d_setup.c:836:6:u8g2_Setup_sh1107_pimoroni_128x128_1 32
u8g2_d_setup.c:844:6:u8g2_Setup_sh1107_seeed_128x128_1 32
u8g2_d_setup.c:853:6:u8g2_Setup_sh1107_128x128_2 32
u8g2_d_setup.c:85:6:u8g2_Setup_ssd1305_i2c_128x32_adafruit_2 32
u8g2_d_setup.c:861:6:u8g2_Setup_sh1107_pimoroni_128x128_2 32
u8g2_d_setup.c:869:6:u8g2_Setup_sh1107_seeed_128x128_2 32
u8g2_d_setup.c:878:6:u8g2_Setup_sh1107_128x128_f 32
u8g2_d_setup.c:886:6:u8g2_Setup_sh1107_pimoroni_128x128_f 32
u8g2_d_setup.c:894:6:u8g2_Setup_sh1107_seeed_128x128_f 32
u8g2_d_setup.c:8:6:u8g2_Setup_ssd1305_128x32_noname_1 32
u8g2_d_setup.c:904:6:u8g2_Setup_sh1107_i2c_128x128_1 32
u8g2_d_setup.c:912:6:u8g2_Setup_sh1107_i2c_pimoroni_128x128_1 32
u8g2_d_setup.c:920:6:u8g2_Setup_sh1107_i2c_seeed_128x128_1 32
u8g2_d_setup.c:929:6:u8g2_Setup_sh1107_i2c_128x128_2 32
u8g2_d_setup.c:937:6:u8g2_Setup_sh1107_i2c_pimoroni_128x128_2 32
u8g2_d_setup.c:945:6:u8g2_Setup_sh1107_i2c_seeed_128x128_2 32
u8g2_d_setup.c:94:6:u8g2_Setup_ssd1305_i2c_128x32_noname_f 32
u8g2_d_setup.c:954:6:u8g2_Setup_sh1107_i2c_128x128_f 32
u8g2_d_setup.c:962:6:u8g2_Setup_sh1107_i2c_pimoroni_128x128_f 32
u8g2_d_setup.c:970:6:u8g2_Setup_sh1107_i2c_seeed_128x128_f 32
u8g2_d_setup.c:980:6:u8g2_Setup_sh1108_160x160_1 32
u8g2_d_setup.c:989:6:u8g2_Setup_sh1108_160x160_2 32
u8g2_d_setup.c:998:6:u8g2_Setup_sh1108_160x160_f 32
u8g2_polygon.c:333:6:u8g2_DrawPolygon 32
u8g2_selection_list.c:182:6:u8g2_DrawSelectionList 32
u8log_u8x8.c:52:6:u8x8_DrawLog 32
u8x8_8x8.c:359:16:u8x8_draw_string 32
u8x8_8x8.c:398:16:u8x8_draw_2x2_string 32
u8x8_8x8.c:439:16:u8x8_draw_1x2_string 32
u8x8_byte.c:107:9:u8x8_byte_4wire_sw_spi 32
u8x8_byte.c:166:9:u8x8_byte_8bit_6800mode 32
u8x8_byte.c:216:9:u8x8_byte_8bit_8080mode 32
u8x8_byte.c:268:9:u8x8_byte_3wire_sw_spi 32
u8x8_byte.c:341:9:u8x8_byte_ks0108 32
u8x8_byte.c:397:9:u8x8_byte_sed1520 32
u8x8_cad.c:350:9:u8x8_cad_st7920_spi 32
u8x8_d_lc7981.c:84:16:0 32
u8x8_d_ssd1606_172x72.c:225:13:u8x8_d_ssd1606_draw_tile 32
u8x8_d_ssd1607_200x200.c:152:13:u8x8_d_ssd1607_draw_tile 32
u8x8_d_st7586s_erc240160.c:166:9:u8x8_d_st7586s_erc240160 32
u8x8_d_st7586s_s028hn118a.c:218:9:u8x8_d_st7586s_s028hn118a 32
u8x8_d_st7586s_ymc240160.c:156:9:u8x8_d_st7586s_ymc240160 32
u8x8_d_st7920.c:82:9:u8x8_d_st7920_common 32
u8x8_d_uc1610.c:207:9:u8x8_d_uc1610_ea_dogxl160 32
u8x8_display.c:153:6:u8x8_ClearLine 32
u8x8_string.c:119:9:u8x8_DrawUTF8Line 32
utilities.cpp:26:6:) 32
utilities.cpp:57:6:) 32
utilities.cpp:82:8:size_t fk::make_pretty_time_string(uint32_t, char*, size_t) 32
varint.cpp:48:20:long long unsigned int phylum::varint_decode(const uint8_t*, size_t, int32_t*) 32
water_module.cpp:139:22:virtual const ModuleSensors* fk::WaterModule::get_sensors(fk::Pool&) 32
weather_module.cpp:55:14:virtual fk::ModuleReturn fk::WeatherModule::initialize(fk::ModuleContext, fk::Pool&) 32
weather_module.cpp:65:14:virtual fk::ModuleReturn fk::WeatherModule::service(fk::ModuleContext, fk::Pool&) 32
weather_module.cpp:69:17:virtual fk::ModuleReadings* fk::WeatherModule::take_readings(fk::ReadingsContext, fk::Pool&) 32
working_buffers.h:263:13:int32_t phylum::working_buffers::debug() 32
working_buffers.h:48:13:phylum::working_buffers::~working_buffers() 32
write_memory_handler.cpp:18:6:bool fk::WriteMemoryWorker::read_complete_and_fail(const char*, fk::Pool&) 32
FatFileLFN.cpp:182:6:static bool FatFile::parsePathName(const char*, fname_t*, const char**) 36
pool.cpp:140:7:) 36
records.cpp:415:19:fk_app_HttpReply* fk::fk_http_reply_encoding_initialize(fk_app_HttpReply*) 36
Adafruit_FlashCache.cpp:91:6:bool Adafruit_FlashCache::read(Adafruit_SPIFlash*, uint32_t, uint8_t*, uint32_t) 40
Base64.cpp:50:5:int base64_decode(char*, char*, int) 40
FatFile.cpp:1234:6:bool FatFile::timestamp(FatFile*) 40
FatFile.cpp:1268:6:bool FatFile::timestamp(uint8_t, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t) 40
FatFile.cpp:228:9:int16_t FatFile::fgets(char*, int16_t, char*) 40
FatFile.cpp:421:6:bool FatFile::open(FatFile*, uint16_t, oflag_t) 40
FatFile.cpp:578:6:bool FatFile::openNext(FatFile*, oflag_t) 40
FmtNumber.cpp:292:7:char* fmtFloat(float, char*, uint8_t, char) 40
MDNS.cpp:1266:6:void MDNS::_removeServiceRecord(int, int, int) 40
MDNS.cpp:1295:6:void MDNS::removeServiceRecord(const char*, uint16_t, MDNSServiceProtocol_t, int, int) 40
MDNS.cpp:1369:6:void MDNS::_writeMyIPAnswerRecord(uint16_t*, uint8_t*, int) 40
Stream.cpp:256:5:int Stream::findMulti(Stream::MultiTarget*, int) 40
TinyGPS.cpp:376:6:void TinyGPS::crack_datetime(int*, byte*, byte*, byte*, byte*, byte*, byte*, long unsigned int*) 40
WString.cpp:325:15:unsigned char String::concat(float) 40
WString.cpp:332:15:unsigned char String::concat(double) 40
WiFi.cpp:283:5:int WiFiClass::init() 40
WiFi.cpp:586:9:uint8_t WiFiClass::beginProvision(uint8_t) 40
WiFiMDNSResponder.cpp:91:6:bool WiFiMDNSResponder::begin(const char*, uint32_t) 40
WiFiSocket.cpp:335:8:sint16 WiFiSocketClass::sendto(SOCKET, void*, uint16, uint16, sockaddr*, uint8) 40
WiFiUdp.cpp:138:5:virtual int WiFiUDP::endPacket() 40
ads_1219.cpp:115:6:bool fk::Ads1219::read_conversion(int32_t&) 40
bad_blocks.cpp:9:1:fk::BadBlocks::BadBlocks(fk::DataMemory*, fk::Pool&) 40
blake2b.cpp:227:6:void BLAKE2b::update(const void*, size_t) 40
board.cpp:95:9:int32_t fk::TwoWireWrapper::read_register_u16(uint8_t, uint8_t, uint16_t&) 40
clock.cpp:190:6:bool fk::CoreClock::internal(fk::DateTime&) 40
clock.cpp:245:6:void fk::CoreClock::read_timestamp_registers() 40
configure_module_worker.cpp:94:6:virtual void fk::ConfigureModuleWorker::run(fk::Pool&) 40
cpool.cpp:107:6:void fk::ConnectionPool::queue_http(fk::PoolPointer<fk::NetworkConnection>*) 40
data_chain.cpp:177:13:phylum::file_size_t phylum::data_chain::total_bytes() 40
deep_sleep.cpp:59:6:bool fk::DeepSleep::try_deep_sleep(lwcron::Scheduler&) 40
delimited_buffer.h:341:19:phylum::delimited_buffer::iterator& phylum::delimited_buffer::iterator::operator++() 40
display.cpp:124:10:void fk::MainViewController::refresh_notifications() 40
distance_module.cpp:14:14:virtual fk::ModuleReturn fk::DistanceModule::initialize(fk::ModuleContext, fk::Pool&) 40
dns_message.cpp:157:9:int16_t fk::DNSReader::read_queries() 40
file.cpp:586:9:int32_t fk::File::try_read_record_header(uint32_t, fk::RecordHeader&) 40
file.cpp:808:9:int32_t fk::File::read(void*, const pb_msgdesc_t*) 40
file.cpp:899:16:fk::File::SizeInfo fk::File::get_size(fk::BlockNumber, fk::BlockNumber, fk::Pool&) 40
file_appender.cpp:38:9:int32_t phylum::file_appender::write(const uint8_t*, size_t) 40
file_ops_darwin.cpp:22:31:virtual tl::expected<long unsigned int, fk::Error> fk::darwin::MetaOps::write_state(fk::GlobalState*, const fkb_header_t*, fk::Pool&) 40
file_ops_darwin.cpp:28:31:virtual tl::expected<long unsigned int, fk::Error> fk::darwin::MetaOps::write_modules(fk::GlobalState*, const fkb_header_t*, fk::ConstructedModulesCollection&, fk::ModuleReadingsCollection&, fk::Pool&) 40
format_sd_card.cpp:68:6:bool fk::FormatSdCard::format() 40
free_sectors_chain.cpp:141:9:virtual int32_t phylum::free_sectors_chain::write_header(phylum::page_lock&) 40
hal_aes_sync.c:272:9:aes_sync_ofb_crypt 40
hal_calendar.c:202:17:2 40
hal_calendar.c:396:13:calendar_alarm 40
hal_i2c_m_sync.c:162:9:i2c_m_sync_cmd_write 40
hal_i2c_m_sync.c:196:9:i2c_m_sync_cmd_read 40
hal_sha_sync.c:111:9:sha_sync_sha1_update 40
hal_sha_sync.c:148:9:sha_sync_sha256_update 40
hal_usb_device.c:236:13:_usb_d_cb_trans_done 40
hal_usb_device.c:498:9:usb_d_ep_get_status 40
hpl_aes.c:249:9:_aes_sync_cbc_crypt 40
hpl_aes.c:501:9:_aes_sync_ofb_crypt 40
hpl_usb.c:1262:13:_usb_d_dev_handle_trfail 40
hpl_usb.c:1912:9:_usb_d_dev_ep_trans 40
http_reply.cpp:62:13:bool fk::try_populate_firmware(fk_app_Firmware&, const void*, fk::Pool&) 40
istream.cpp:321:6:void istream::getStr(char*) 40
journal.c:222:12:find_checkblock 40
journal.c:485:5:dhara_journal_read_meta 40
lora_manager.cpp:153:6:void fk::LoraManager::stop() 40
m2m_wifi.c:1139:7:m2m_wifi_set_sleep_mode 40
m2m_wifi.c:824:7:m2m_wifi_request_scan_ssid_list 40
m2m_wifi.c:863:7:m2m_wifi_wps 40
main.c:145:9:main 40
map.c:322:12:prepare_write 40
mcp_2803.cpp:25:6:bool fk::Mcp2803::configure(uint8_t, uint8_t, uint8_t) 40
memory.cpp:114:6:virtual bool fk::TranslatingMemory::begin() 40
menu_view.cpp:136:6:void fk::configure_gps_duration(uint32_t, fk::Pool&) 40
menu_view.cpp:142:6:void fk::configure_wifi_duration(uint32_t, fk::Pool&) 40
menu_view.cpp:178:6:void fk::MenuView::create_info_menu() 40
metal_board.cpp:222:6:bool fk::SpiWrapper::transfer(uint8_t*, uint32_t, const uint8_t*, uint8_t*, uint32_t) 40
metal_ipc.cpp:145:6:virtual bool fk::MetalIPC::signal_workers(fk::WorkerCategory, uint32_t) 40
metal_ipc.cpp:164:29:virtual fk::collection<fk::TaskDisplayInfo> fk::MetalIPC::get_workers_display_info(fk::Pool&) 40
metal_modmux.cpp:119:20:virtual nonstd::optional_lite::optional<fk::Topology> fk::MetalModMux::read_topology_register() 40
metal_modmux.cpp:40:6:virtual bool fk::MetalModMux::begin() 40
metal_sd_card.cpp:36:6:virtual bool fk::MetalSdCard::begin() 40
metal_sd_card.cpp:63:6:virtual bool fk::MetalSdCard::append_logs(fk::circular_buffer<char>&) 40
modmux.cpp:28:6:bool fk::ModMux::check_modules() 40
network.h:141:40:) [with ConcreteWrapped = fk::MetalNetworkConnection; Args = {WiFiClient&}; ConcreteWrapee = fk::StandardPoolWrapper<fk::NetworkConnection, fk::MetalNetworkConnection, WiFiClient&>] 40
network_services.cpp:123:1:cpp) 40
network_task.cpp:98:17:fk::NetworkSettings fk::NetworkTask::get_selected_settings(fk::Pool&) 40
nm_bus_wrapper_samd21.cpp:152:7:sint8 nm_bus_ioctl(uint8, void*) 40
nmasic.c:614:7:nmi_get_otp_mac_address 40
nmasic.c:656:7:nmi_get_mac_address 40
nmspi.c:755:14:spi_data_read 40
os.c:175:13:os_task_initialize 40
ostream.cpp:147:6:void ostream::putNum(uint32_t, bool) 40
paging_delimited_buffer.cpp:150:9:int32_t phylum::paging_delimited_buffer::flush(phylum::dhara_sector_t) 40
pb_decode.c:1142:18:pb_decode_ex 40
pb_decode.c:1374:6:pb_decode_fixed64 40
pb_decode.c:240:18:pb_decode_varint 40
pb_encode.c:554:6:pb_get_encoded_size 40
pool.cpp:197:7:void* fk::Pool::decode(const pb_msgdesc_t*, uint8_t*, size_t, size_t) 40
readings_worker.cpp:134:38:fk::ReadingsWorker::ThrottleAndPowerSave fk::ReadingsWorker::read_throttle_and_power_save() 40
records.cpp:29:20:bool fk::pb_data_sensor_and_value_item_decode(pb_istream_t*, fk::pb_array_t*) 40
records.cpp:594:30:fk_data_ModuleConfiguration* fk::fk_module_configuration_decoding_new(fk::Pool*) 40
rn2903.cpp:368:6:bool fk::Rn2903::send_bytes(const uint8_t*, size_t, uint8_t, bool) 40
rn2903.cpp:97:6:) 40
scanning.cpp:112:44:virtual tl::expected<fk::collection<fk::FoundModule>, fk::Error> fk::ModuleScanning::scan(fk::Pool&) 40
scanning.cpp:97:6:bool fk::ModuleScanning::try_read_configuration(fk::ModulePosition, fk::Pool&) 40
scheduler.cpp:202:25:fk::CurrentSchedules fk::get_config_schedules() 40
scheduling.cpp:22:1:fk::ReadingsTask::ReadingsTask(lwcron::CronSpec) 40
scheduling.cpp:33:1:fk::GpsTask::GpsTask(lwcron::CronSpec) 40
scheduling.cpp:44:1:fk::LoraTask::LoraTask(lwcron::CronSpec) 40
scheduling.cpp:59:1:fk::UploadDataTask::UploadDataTask(lwcron::CronSpec, uint32_t) 40
scheduling.cpp:8:1:fk::CurrentSchedules::CurrentSchedules(const fk::GlobalState*, const fk::ModuleFactory&) 40
self_check.cpp:344:19:fk::ModuleCheckStatus fk::SelfCheck::modules(fk::Pool*) 40
self_check.cpp:366:6:void fk::SelfCheck::flash_leds() 40
sequential_memory.cpp:154:9:virtual int32_t fk::BufferedPageMemory::erase(uint32_t, size_t) 40
sequential_memory.cpp:77:1:fk::BufferedPageMemory::BufferedPageMemory(fk::DataMemory*, fk::Pool&) 40
signed_log.cpp:179:6:bool fk::SignedRecordLog::decode(void*, const pb_msgdesc_t*, fk::Pool&) 40
socket.c:1339:7:m2m_ping_req 40
socket.c:966:7:close 40
spi_flash.c:709:7:spi_flash_erase 40
spi_flash.cpp:105:6:bool fk::SpiFlash::begin() 40
spi_flash.cpp:198:9:int32_t fk::SpiFlash::read(uint32_t, uint8_t*, size_t) 40
spi_flash.cpp:352:9:int32_t fk::SpiFlash::copy_page(uint32_t, uint32_t) 40
spi_flash.cpp:526:6:void fk::SpiFlash::row_address_to_bytes(uint32_t, uint8_t*) 40
spi_flash.cpp:533:6:void fk::SpiFlash::column_address_to_bytes(uint32_t, uint8_t*) 40
spi_flash.cpp:591:6:bool fk::SpiFlash::is_ready(bool) 40
startup_worker.cpp:329:6:bool fk::StartupWorker::load_from_files(fk::Storage&, fk::GlobalState*, fk::Pool&) 40
startup_worker.cpp:551:13:void fk::copy_cron_spec_from_pb(const char*, fk::Schedule&, const fk_data_JobSchedule&, fk::Pool&) 40
state.cpp:39:6:void fk::Schedule::simple(uint32_t) 40
state.cpp:83:36:fk::GlobalStateRef<const fk::GlobalState*> fk::try_get_global_state_ro() 40
state_manager.h:15:10:bool fk::GlobalStateManager::apply(T) [with T = fk::update_modules(fk::Pool&)::__lambda1] 40
state_manager.h:27:10:14(const char*) 40
state_manager.h:27:10:15(const char*) 40
state_manager.h:27:10:9(const char*) 40
statistics_memory.cpp:43:9:virtual int32_t fk::StatisticsMemory::erase(uint32_t, size_t) 40
storage.cpp:53:6:bool fk::BlockHeader::verify_hash() const 40
storage.cpp:67:6:bool fk::BlockTail::verify_hash() 40
super_chain.cpp:54:9:virtual int32_t phylum::super_chain::write_header(phylum::page_lock&) 40
u8g2_box.c:61:6:u8g2_DrawFrame 40
u8g2_buffer.c:72:13:u8g2_send_buffer 40
u8g2_display.cpp:344:6:virtual void fk::U8g2Display::qr(const fk::QrCodeScreen&) 40
u8g2_font.c:1260:13:u8g2_GetExactStrWidth 40
u8g2_selection_list.c:151:20:0 40
u8log_u8g2.c:51:6:u8g2_DrawLog 40
u8log_u8x8.c:40:13:u8x8_DrawLogLine 40
u8x8_d_ssd1322.c:342:9:u8x8_d_ssd1322_common2 40
u8x8_message.c:38:9:u8x8_draw_button_line 40
u8x8_message.c:88:9:u8x8_UserInterfaceMessage 40
u8x8_selection_list.c:121:9:u8x8_UserInterfaceSelectionList 40
udp_discovery.cpp:20:6:bool fk::UDPDiscovery::start() 40
utilities.cpp:36:8:size_t fk::hex_string_to_bytes(uint8_t*, size_t, const char*) 40
worker.cpp:11:6:void fk::task_handler_worker(void*) 40
working_buffers.h:130:14:uint8_t* phylum::working_buffers::open_sector(phylum::dhara_sector_t, bool, phylum::working_buffers::miss_function_t, phylum::working_buffers::flush_function_t) 40
Adafruit_FlashCache.cpp:56:6:bool Adafruit_FlashCache::write(Adafruit_SPIFlash*, uint32_t, const void*, uint32_t) 48
FatFile.cpp:898:6:static bool FatFile::remove(FatFile*, const char*) 48
FatFile.h:339:8:bool FatFile::exists(const char*) 48
FatFilePrint.cpp:145:6:bool FatFile::printCreateDateTime(print_t*) 48
FatFilePrint.cpp:243:6:bool FatFile::printModifyDateTime(print_t*) 48
FatVolume.cpp:135:6:bool FatVolume::allocContiguous(uint32_t, uint32_t*, uint32_t) 48
MDNS.cpp:1184:5:int MDNS::addServiceRecord(const char*, uint16_t, MDNSServiceProtocol_t, const char*) 48
MDNS.cpp:1315:6:void MDNS::_writeDNSName(const uint8_t*, uint16_t*, uint8_t*, int, int) 48
MDNS.cpp:1399:6:void MDNS::_writeServiceRecordName(int, uint16_t*, uint8_t*, int, int) 48
Stream.cpp:114:6:bool Stream::findUntil(char*, size_t, char*, size_t) 48
WString.cpp:102:1:String::String(long unsigned int, unsigned char) 48
WString.cpp:117:1:String::String(double, unsigned char) 48
WString.cpp:645:6:void String::replace(const String&, const String&) 48
WString.cpp:78:1:String::String(int, unsigned char) 48
WString.cpp:86:1:String::String(unsigned int, unsigned char) 48
WString.cpp:94:1:String::String(long int, unsigned char) 48
WiFi.cpp:674:6:void WiFiClass::config(IPAddress, IPAddress, IPAddress, IPAddress) 48
WiFiClient.cpp:56:5:int WiFiClient::connect(const char*, uint16_t, uint8_t, bool) 48
WiFiMDNSResponder.cpp:123:6:bool WiFiMDNSResponder::parseRequest() 48
WiFiSocket.cpp:232:5:int WiFiSocketClass::read(SOCKET, uint8_t*, size_t) 48
WiFiUdp.cpp:40:9:virtual uint8_t WiFiUDP::begin(uint16_t) 48
atlas_api.cpp:67:6:bool fk::AtlasApi::status(fk::ModuleContext, fk::AtlasApiReply&, fk::Pool&) 48
atlas_module.cpp:17:14:virtual fk::ModuleReturn fk::AtlasModule::initialize(fk::ModuleContext, fk::Pool&) 48
caching_memory.cpp:39:9:virtual int32_t fk::CachingMemory::read(uint32_t, uint8_t*, size_t, fk::MemoryReadFlags) 48
caching_memory.cpp:63:9:virtual int32_t fk::CachingMemory::write(uint32_t, const uint8_t*, size_t, fk::MemoryWriteFlags) 48
clock.cpp:161:6:bool fk::CoreClock::adjust(fk::DateTime) 48
clock.cpp:262:6:void fk::CoreClock::log_tsr(uint8_t*) 48
clock.cpp:300:12:fk::CoreClock* fk::get_clock() 48
clock.h:81:5:fk::FormattedTime::FormattedTime(fk::DateTime, const char*) 48
data_chain.cpp:109:9:int32_t phylum::data_chain::write(const uint8_t*, size_t) 48
data_chain.cpp:127:9:int32_t phylum::data_chain::read_delimiter(uint32_t*) 48
data_chain.cpp:6:9:virtual int32_t phylum::data_chain::write_header(phylum::page_lock&) 48
delimited_buffer.h:313:9:phylum::delimited_buffer::iterator::iterator(phylum::read_buffer) 48
delimited_buffer.h:313:9:phylum::delimited_buffer::iterator::iterator(phylum::read_buffer) 48
delimited_buffer.h:313:9:phylum::delimited_buffer::iterator::iterator(phylum::read_buffer) 48
delimited_buffer.h:313:9:phylum::delimited_buffer::iterator::iterator(phylum::read_buffer) 48
delimited_buffer.h:313:9:phylum::delimited_buffer::iterator::iterator(phylum::read_buffer) 48
delimited_buffer.h:313:9:phylum::delimited_buffer::iterator::iterator(phylum::read_buffer) 48
delimited_buffer.h:313:9:phylum::delimited_buffer::iterator::iterator(phylum::read_buffer) 48
delimited_buffer.h:341:19:phylum::delimited_buffer::iterator& phylum::delimited_buffer::iterator::operator++() 48
delimited_buffer.h:341:19:phylum::delimited_buffer::iterator& phylum::delimited_buffer::iterator::operator++() 48
delimited_buffer.h:341:19:phylum::delimited_buffer::iterator& phylum::delimited_buffer::iterator::operator++() 48
delimited_buffer.h:341:19:phylum::delimited_buffer::iterator& phylum::delimited_buffer::iterator::operator++() 48
delimited_buffer.h:341:19:phylum::delimited_buffer::iterator& phylum::delimited_buffer::iterator::operator++() 48
delimited_buffer.h:380:14:phylum::delimited_buffer::iterator phylum::delimited_buffer::begin() const 48
delimited_buffer.h:380:14:phylum::delimited_buffer::iterator phylum::delimited_buffer::begin() const 48
delimited_buffer.h:380:14:phylum::delimited_buffer::iterator phylum::delimited_buffer::begin() const 48
delimited_buffer.h:380:14:phylum::delimited_buffer::iterator phylum::delimited_buffer::begin() const 48
delimited_buffer.h:380:14:phylum::delimited_buffer::iterator phylum::delimited_buffer::begin() const 48
delimited_buffer.h:380:14:phylum::delimited_buffer::iterator phylum::delimited_buffer::begin() const 48
delimited_buffer.h:385:14:phylum::delimited_buffer::iterator phylum::delimited_buffer::end() const 48
delimited_buffer.h:385:14:phylum::delimited_buffer::iterator phylum::delimited_buffer::end() const 48
delimited_buffer.h:385:14:phylum::delimited_buffer::iterator phylum::delimited_buffer::end() const 48
delimited_buffer.h:385:14:phylum::delimited_buffer::iterator phylum::delimited_buffer::end() const 48
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_module_menu()::__lambda13] 48
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_module_menu()::__lambda14] 48
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_module_menu()::__lambda15] 48
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_module_menu()::__lambda16] 48
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_module_menu()::__lambda17] 48
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_module_menu()::__lambda18] 48
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_module_menu()::__lambda19] 48
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_module_menu()::__lambda20] 48
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_module_menu()::__lambda21] 48
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_module_menu()::__lambda22] 48
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_module_menu()::__lambda23] 48
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_module_menu()::__lambda24] 48
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_tools_menu()::__lambda40] 48
dtostrf.c:22:7:dtostrf 48
eeprom.cpp:167:6:bool fk::ModuleEeprom::erase_page(uint32_t) 48
eeprom.cpp:63:13:bool fk::write(fk::TwoWireWrapper*, uint16_t, uint8_t*, size_t) 48
file.cpp:773:9:int32_t fk::File::try_write(const void*, const pb_msgdesc_t*) 48
file_appender.cpp:77:9:int32_t phylum::file_appender::index_if_necessary(std::function<long int(phylum::data_chain_cursor)>) 48
functional:2054:7:) [with _Res = long int; _Functor = phylum::data_chain::read(uint8_t*, size_t)::__lambda3; _ArgTypes = {phylum::general_buffer<const unsigned char>}] 48
functional:2054:7:) [with _Res = long int; _Functor = phylum::data_chain::write(const uint8_t*, size_t)::__lambda1; _ArgTypes = {phylum::general_buffer<unsigned char>, bool&}] 48
gs_progress_callbacks.cpp:10:6:virtual void fk::GlobalStateProgressCallbacks::progress(fk::Operation, float) 48
hal_aes_sync.c:167:9:aes_sync_cfb128_crypt 48
hal_aes_sync.c:188:9:aes_sync_cfb64_crypt 48
hal_aes_sync.c:219:9:aes_sync_cfb32_crypt 48
hal_aes_sync.c:240:9:aes_sync_cfb16_crypt 48
hal_aes_sync.c:313:9:aes_sync_ctr_crypt 48
hal_calendar.c:582:9:calendar_set_alarm 48
hal_sha_sync.c:189:9:sha_sync_sha1_finish 48
hal_sha_sync.c:218:9:sha_sync_sha256_finish 48
hpl_aes.c:295:9:_aes_sync_cfb128_crypt 48
hpl_aes.c:337:9:_aes_sync_cfb64_crypt 48
hpl_aes.c:381:9:_aes_sync_cfb32_crypt 48
hpl_aes.c:424:9:_aes_sync_cfb16_crypt 48
hpl_aes.c:462:9:_aes_sync_cfb8_crypt 48
hpl_aes.c:644:9:_aes_sync_ccm_crypt_and_tag 48
hpl_aes.c:868:13:__aes_sync_gcm_generate_tag 48
hpl_sercom.c:519:16:_sercom_get_hardware_index 48
hpl_tc.c:305:15:get_tc_index 48
hpl_usb.c:1627:9:_usb_d_dev_ep_init 48
http_reply.cpp:32:13:void fk::copy_schedule(fk_app_Schedule&, const fk::Schedule&, fk::Pool*) 48
integer_chain.cpp:16:9:virtual int32_t phylum::integer_chain::write_header(phylum::page_lock&) 48
integer_chain.cpp:31:9:int32_t phylum::integer_chain::write(const uint32_t*, size_t) 48
integer_chain.cpp:54:9:int32_t phylum::integer_chain::read(uint32_t*, size_t) 48
lwcron.cpp:211:24:lwcron::Scheduler::TaskAndTime lwcron::Scheduler::check(lwcron::DateTime, uint32_t) 48
mdns.cpp:25:6:bool fk::MDNSDiscovery::start() 48
meta_record.cpp:8:13:void fk::copy_schedule(fk_data_JobSchedule&, const fk::Schedule&, fk::Pool&) 48
metal_battery_gauge.cpp:53:14:virtual fk::PowerReading fk::MetalBatteryGauge::get() 48
metal_buttons.cpp:32:6:virtual bool fk::MetalButtons::begin() 48
metal_memory.cpp:27:9:virtual int32_t fk::MetalDataMemory::erase(uint32_t, size_t) 48
metal_modmux.cpp:241:6:virtual bool fk::MetalModMux::choose(fk::ModulePosition) 48
metal_modmux.cpp:328:13:virtual fk::ModulesLock fk::MetalModMux::lock() 48
metal_network.cpp:205:6:virtual bool fk::MetalNetwork::begin(fk::NetworkSettings, fk::Pool*) 48
metal_network.cpp:318:33:virtual fk::PoolPointer<fk::NetworkConnection>* fk::MetalNetwork::open_connection(const char*, const char*, uint16_t) 48
metal_qspi.cpp:80:9:virtual int32_t fk::MetalQspiMemory::erase(uint32_t, size_t) 48
metal_sd_card.cpp:253:6:virtual bool fk::MetalSdCard::mkdir(const char*) 48
network_task.cpp:72:6:bool fk::NetworkTask::did_configuration_change() 48
nmspi.c:1031:14:spi_read_reg 48
nmspi.c:1363:7:nm_spi_read_block 48
oem_atlas.cpp:123:13:const char* fk::OemAtlas::name() const 48
oem_atlas.cpp:135:6:bool fk::OemAtlas::wake() 48
oem_atlas.cpp:174:6:bool fk::OemAtlas::hibernate() 48
oem_atlas.cpp:275:6:bool fk::OemAtlas::clear_calibration() 48
os.c:799:6:osi_priority_check 48
pb_decode.c:393:25:decode_basic_field 48
pb_encode.c:241:25:pb_check_proto3_default_value 48
pb_encode.c:645:18:pb_encode_fixed64 48
pb_encode.c:710:18:pb_encode_submessage 48
phylum.cpp:12:1:fk::Phylum::Phylum(fk::DataMemory*) 48
pool.cpp:171:17:fk::EncodedMessage* fk::Pool::encode(const pb_msgdesc_t*, const void*, bool) 48
pool.cpp:53:6:virtual void fk::Pool::log_info(int32_t) 48
pool_pointer.h:94:16:) [with Wrapped = fk::ConfigureModuleWorker; Wrapee = fk::TaskWorker; ConcreteWrapped = fk::PoolWorker<fk::ConfigureModuleWorker, fk::ConfigureModuleWorker, fk::ModulePosition&, ModuleHeader&>; ConcreteWrapee = fk::PoolWorker<fk::ConfigureModuleWorker, fk::ConfigureModuleWorker, fk::ModulePosition&, ModuleHeader&>; Args = {fk::ModulePosition&, ModuleHeader&}] 48
printf.cpp:144:15:size_t _ntoa_format(out_fct_type, char*, size_t, size_t, char*, size_t, bool, unsigned int, unsigned int, unsigned int, unsigned int) 48
printf.cpp:144:15:size_t _ntoa_format(out_fct_type, char*, size_t, size_t, char*, size_t, bool, unsigned int, unsigned int, unsigned int, unsigned int) 48
qrcode.c:260:13:applyMask 48
records.cpp:135:20:bool fk::pb_app_network_info_item_decode(pb_istream_t*, fk::pb_array_t*) 48
records.cpp:159:20:bool fk::fk_array_interval_decode(pb_istream_t*, fk::pb_array_t*) 48
records.cpp:5:20:bool fk::pb_data_network_info_item_decode(pb_istream_t*, fk::pb_array_t*) 48
records.cpp:78:20:bool fk::pb_data_sensor_info_item_decode(pb_istream_t*, fk::pb_array_t*) 48
req.cpp:90:9:int32_t fk::HttpRequest::on_url(const char*, size_t) 48
scheduler.cpp:38:13:void fk::update_task_upcoming(fk::ReadingsTask&) 48
sector_chain.cpp:97:9:int32_t phylum::sector_chain::forward(phylum::page_lock&) 48
self_check.cpp:234:6:bool fk::SelfCheck::wifi(fk::Pool*) 48
simple_buffer.h:61:21:phylum::general_buffer<PointerType>& phylum::general_buffer<PointerType>::operator=(phylum::general_buffer<PointerType>&&) [with PointerType = const unsigned char] 48
simple_buffer.h:61:21:phylum::general_buffer<PointerType>& phylum::general_buffer<PointerType>::operator=(phylum::general_buffer<PointerType>&&) [with PointerType = const unsigned char] 48
simple_buffer.h:61:21:phylum::general_buffer<PointerType>& phylum::general_buffer<PointerType>::operator=(phylum::general_buffer<PointerType>&&) [with PointerType = const unsigned char] 48
simple_buffer.h:61:21:phylum::general_buffer<PointerType>& phylum::general_buffer<PointerType>::operator=(phylum::general_buffer<PointerType>&&) [with PointerType = const unsigned char] 48
simple_buffer.h:61:21:phylum::general_buffer<PointerType>& phylum::general_buffer<PointerType>::operator=(phylum::general_buffer<PointerType>&&) [with PointerType = const unsigned char] 48
simple_buffer.h:61:21:phylum::general_buffer<PointerType>& phylum::general_buffer<PointerType>::operator=(phylum::general_buffer<PointerType>&&) [with PointerType = const unsigned char] 48
simple_buffer.h:61:21:phylum::general_buffer<PointerType>& phylum::general_buffer<PointerType>::operator=(phylum::general_buffer<PointerType>&&) [with PointerType = const unsigned char] 48
simple_buffer.h:61:21:phylum::general_buffer<PointerType>& phylum::general_buffer<PointerType>::operator=(phylum::general_buffer<PointerType>&&) [with PointerType = const unsigned char] 48
socket.c:1012:8:recvfrom 48
socket.c:540:8:socket 48
socket.c:626:7:bind 48
socket.c:743:7:connect 48
socket.c:784:8:send 48
socket.c:907:8:recv 48
spi_flash.cpp:169:6:void fk::SpiFlash::dump_feature_registers() 48
startup_worker.cpp:368:6:bool fk::StartupWorker::load_previous_location(fk::GlobalState*, fk::DataOps*, fk::Pool&) 48
startup_worker.cpp:388:6:bool fk::StartupWorker::check_for_lora(fk::Pool&) 48
tiny_printf.c:147:15:_ntoa_format 48
u8g2_bitmap.c:107:6:u8g2_DrawHXBM 48
u8g2_bitmap.c:139:6:u8g2_DrawXBM 48
u8g2_bitmap.c:164:6:u8g2_DrawHXBMP 48
u8g2_bitmap.c:198:6:u8g2_DrawXBMP 48
u8g2_bitmap.c:50:6:u8g2_DrawHorizontalBitmap 48
u8g2_bitmap.c:86:6:u8g2_DrawBitmap 48
u8g2_buffer.c:153:6:u8g2_UpdateDisplayArea 48
u8g2_circle.c:109:6:u8g2_DrawCircle 48
u8g2_circle.c:195:6:u8g2_DrawDisc 48
u8g2_font.c:866:13:u8g2_DrawExtendedUTF8 48
u8g2_font.c:913:13:u8g2_DrawExtUTF8 48
u8g2_line.c:39:6:u8g2_DrawLine 48
u8g2_selection_list.c:203:9:u8g2_UserInterfaceSelectionList 48
u8x8_capture.c:85:6:u8x8_capture_write_pbm_buffer 48
u8x8_d_sh1122.c:117:9:u8x8_d_sh1122_common 48
u8x8_d_ssd1320.c:107:9:u8x8_d_ssd1320_common 48
u8x8_d_ssd1322.c:150:9:u8x8_d_ssd1322_common 48
u8x8_d_ssd1327.c:130:16:u8x8_d_ssd1327_96x96_generic 48
u8x8_d_st7528.c:109:16:u8x8_d_st7528_generic 48
u8x8_d_uc1617.c:135:9:u8x8_d_uc1617_common 48
u8x8_string.c:159:9:u8x8_DrawUTF8Lines 48
varint.cpp:35:10:uint8_t* phylum::varint_encode(long long unsigned int, uint8_t*, int32_t) 48
water_module.cpp:123:14:virtual fk::ModuleReturn fk::WaterModule::api(fk::ModuleContext, fk::HttpServerConnection*, fk::Pool&) 48
working_buffers.h:300:19:phylum::simple_buffer phylum::working_buffers::allocate(size_t) 48
working_buffers.h:300:19:phylum::simple_buffer phylum::working_buffers::allocate(size_t) 48
working_buffers.h:300:19:phylum::simple_buffer phylum::working_buffers::allocate(size_t) 48
FatFile.cpp:1059:6:bool FatFile::rmRfStar() 56
FatFile.cpp:303:6:bool FatFile::mkdir(FatFile*, fname_t*) 56
FatFileLFN.cpp:554:6:bool FatFile::remove() 56
FatFilePrint.cpp:61:6:void FatFile::dmpFile(print_t*, uint32_t, size_t) 56
MDNS.cpp:1087:6:void MDNS::run() 56
MDNS.cpp:1424:6:void MDNS::_writeServiceRecordPTR(int, uint16_t*, uint8_t*, int, uint32_t) 56
Print.cpp:191:8:size_t Print::printNumber(long unsigned int, uint8_t) 56
TinyGPS.cpp:296:7:static float TinyGPS::distance_between(float, float, float, float) 56
WString.cpp:110:1:String::String(float, unsigned char) 56
WiFi.cpp:347:7:char* WiFiClass::firmwareVersion() 56
WiFi.cpp:414:9:uint8_t WiFiClass::begin(const char*, uint8_t, const char*) 56
WiFi.cpp:669:6:void WiFiClass::config(IPAddress, IPAddress, IPAddress) 56
WiFiClient.cpp:65:5:int WiFiClient::connect(IPAddress, uint16_t, uint8_t, const uint8_t*, bool) 56
WiFiMDNSResponder.cpp:178:6:void WiFiMDNSResponder::replyToRequest() 56
aggregated_weather.cpp:46:17:fk::WindReading fk::AggregatedWeatherHelpers::get_wind_30_second_average(fk::Pool&) 56
aggregated_weather.cpp:76:14:fk::ModuleReturn fk::AggregatedWeather::initialize(fk::ModuleContext, fk::Pool&) 56
api_handler.cpp:349:13:28(fk::HttpServerConnection*, fk::Pool&) 56
api_handler.cpp:45:6:void fk::ApiHandler::adjust_location_if_necessary(const fk_app_HttpQuery*) 56
clock.cpp:206:6:bool fk::CoreClock::external(fk::DateTime&) 56
cpool.cpp:34:6:void fk::ConnectionPool::service() 56
cpool.cpp:80:6:void fk::ConnectionPool::queue(fk::PoolPointer<fk::NetworkConnection>*, fk::Connection*) 56
delimited_buffer.cpp:5:7:void* phylum::delimited_buffer::reserve(size_t, phylum::sector_offset_t&) 56
delimited_buffer.h:313:9:phylum::delimited_buffer::iterator::iterator(phylum::read_buffer) 56
directory_chain.cpp:58:9:int32_t phylum::directory_chain::file_attribute(phylum::page_lock&, phylum::file_id_t, phylum::open_file_attribute) 56
directory_chain.cpp:67:9:virtual int32_t phylum::directory_chain::file_attributes(phylum::file_id_t, phylum::open_file_attribute*, size_t) 56
distance_module.cpp:66:17:virtual fk::ModuleReadings* fk::DistanceModule::take_readings(fk::ReadingsContext, fk::Pool&) 56
file.cpp:290:6:bool fk::File::seek(uint32_t) 56
file_handler.cpp:16:32:fk::DownloadFileWorker::HeaderInfo fk::DownloadFileWorker::get_headers(fk::SdCardFile*, fk::Pool&) 56
functional:2054:7:) [with _Res = long int; _Functor = phylum::data_chain::read_delimiter(uint32_t*)::__lambda2; _ArgTypes = {phylum::general_buffer<const unsigned char>}] 56
hpl_aes.c:656:13:__aes_sync_gcm_start 56
hpl_sercom.c:1074:9:_i2c_m_async_set_baudrate 56
hpl_sercom.c:1362:9:_i2c_m_sync_set_baudrate 56
hpl_usb.c:1104:13:_usb_d_dev_out_next 56
http_reply.cpp:524:6:bool fk::HttpReply::include_listing(const char*, fk_app_DirectoryEntry*, size_t, size_t) 56
istream.cpp:131:6:bool istream::getDouble(double*) 56
itoa.c:130:14:ultoa 56
logging.cpp:43:6:) 56
logging.cpp:81:6:void valogfs(LogLevels, const char*, const char*, const char*, va_list) 56
lora_manager.cpp:127:15:fk::LoraErrorCode fk::LoraManager::send_bytes(uint8_t, const uint8_t*, size_t, bool) 56
lora_worker.cpp:32:6:virtual void fk::LoraWorker::run(fk::Pool&) 56
m2m_hif.c:629:7:hif_handle_isr 56
memory.cpp:40:6:virtual bool fk::BankedDataMemory::begin() 56
memory_page_store.cpp:10:9:int32_t fk::MemoryPageStore::load_page(uint32_t, uint8_t*, size_t) 56
memory_page_store.cpp:17:9:int32_t fk::MemoryPageStore::save_page(uint32_t, const uint8_t*, size_t, uint16_t, uint16_t) 56
metal_battery_gauge.cpp:23:6:virtual bool fk::MetalBatteryGauge::begin() 56
metal_leds.cpp:76:6:virtual void fk::MetalLeds::color(uint8_t, fk::Color, bool) 56
metal_network.cpp:258:6:virtual bool fk::MetalNetwork::serve() 56
metal_sd_card.cpp:229:6:virtual bool fk::MetalSdCard::is_file(const char*) 56
metal_sd_card.cpp:241:6:virtual bool fk::MetalSdCard::is_directory(const char*) 56
oem_atlas.cpp:179:6:bool fk::OemAtlas::has_reading(uint8_t&) 56
ostream.cpp:73:6:void ostream::putDouble(double) 56
pb_encode.c:415:25:encode_field 56
phylum.cpp:5:1:fk::standard_page_working_buffers::standard_page_working_buffers(size_t) 56
process.cpp:176:6:virtual void fk::Process::run(fk::Pool&) 56
progress_tracker.cpp:15:6:void fk::ProgressTracker::update(int32_t, uint32_t) 56
qrcode.c:289:13:drawFinderPattern 56
sector_chain.cpp:149:9:int32_t phylum::sector_chain::prepare_sector(phylum::page_lock&, phylum::dhara_sector_t, bool) 56
self_check.cpp:179:6:bool fk::SelfCheck::spi_memory() 56
sequential_memory.cpp:168:9:virtual int32_t fk::BufferedPageMemory::flush() 56
socket.c:847:8:sendto 56
storage.cpp:323:6:bool fk::Storage::clear_internal() 56
u8g2_display.cpp:113:13:bool fk::draw_string_auto_sized(T, bool, uint16_t, uint16_t, uint16_t, uint16_t, const char*) [with T = U8G2_SH1106_128X64_NONAME_F_HW_I2C; uint16_t = short unsigned int] 56
u8g2_display.cpp:301:6:virtual void fk::U8g2Display::menu(const fk::MenuScreen&) 56
u8g2_font.c:519:8:u8g2_font_decode_glyph 56
u8g2_message.c:41:9:u8g2_draw_button_line 56
u8g2_selection_list.c:128:13:u8g2_DrawUTF8Lines 56
u8x8_d_ssd1325.c:118:16:u8x8_d_ssd1325_128x64_generic 56
u8x8_d_ssd1326.c:267:9:u8x8_d_ssd1326_er_256x32 56
u8x8_d_ssd1329.c:288:9:u8x8_d_ssd1329_128x96_noname 56
u8x8_input_value.c:44:9:u8x8_UserInterfaceInputValue 56
utilities.cpp:7:6:void bl_fkb_log_header(const fkb_header_t*) 56
FatFile.cpp:639:6:bool FatFile::openParent(FatFile*) 64
FatFilePrint.cpp:99:6:bool FatFile::ls(print_t*, uint8_t, uint8_t) 64
WiFi.cpp:1151:10:uint32_t WiFiClass::getTime() 64
WiFi.cpp:489:9:uint8_t WiFiClass::beginAP(const char*, uint8_t, const char*, uint8_t) 64
api_handler.cpp:362:13:26(fk::HttpServerConnection*, uint32_t*, fk::Pool&) 64
api_handler.cpp:381:13:27(fk::HttpServerConnection*, uint32_t*, fk::Pool&) 64
atlas_api.cpp:107:6:bool fk::AtlasApi::calibrate(fk::ModuleContext, fk::AtlasApiReply&, fk_atlas_AtlasCalibrationCommand, fk::Pool&) 64
atlas_api.cpp:82:6:bool fk::AtlasApi::clear(fk::ModuleContext, fk::AtlasApiReply&, fk::Pool&) 64
atlas_api_reply.cpp:9:6:void fk::AtlasApiReply::error(const char*) 64
atlas_module.cpp:32:6:bool fk::AtlasModule::load_configuration(fk::ModuleContext, fk::Pool&) 64
atlas_module.cpp:60:14:virtual fk::ModuleReturn fk::AtlasModule::api(fk::ModuleContext, fk::HttpServerConnection*, fk::Pool&) 64
atlas_module.cpp:84:22:virtual const ModuleSensors* fk::AtlasModule::get_sensors(fk::Pool&) 64
data_chain.cpp:286:9:int32_t phylum::data_chain::constrain() 64
directory_chain.cpp:27:9:virtual int32_t phylum::directory_chain::touch(const char*) 64
directory_chain.cpp:42:9:virtual int32_t phylum::directory_chain::unlink(const char*) 64
display.cpp:100:10:virtual void fk::MainViewController::show_message(const char*) 64
display.h:160:10:void fk::SelectableLambdaOption<TSelect, TSelected>::on_selected() [with TSelect = fk::MenuView::create_network_menu()::__lambda52; TSelected = fk::MenuView::create_network_menu()::__lambda53] 64
display.h:160:10:void fk::SelectableLambdaOption<TSelect, TSelected>::on_selected() [with TSelect = fk::MenuView::create_network_menu()::__lambda54; TSelected = fk::MenuView::create_network_menu()::__lambda55] 64
display.h:160:10:void fk::SelectableLambdaOption<TSelect, TSelected>::on_selected() [with TSelect = fk::MenuView::create_tools_menu()::__lambda31; TSelected = fk::MenuView::create_tools_menu()::__lambda32] 64
display.h:160:10:void fk::SelectableLambdaOption<TSelect, TSelected>::on_selected() [with TSelect = fk::MenuView::create_tools_menu()::__lambda33; TSelected = fk::MenuView::create_tools_menu()::__lambda34] 64
dns_message.cpp:100:23:fk::DNSReader::dns_name_t fk::DNSReader::read_name(fk::BufferedReader*) 64
dns_message.cpp:122:9:int16_t fk::DNSReader::parse() 64
file.cpp:170:9:int32_t fk::File::write_partial(const uint8_t*, size_t) 64
file_appender.cpp:46:9:int32_t phylum::file_appender::make_data_chain() 64
functional:2054:7:) [with _Res = long int; _Functor = phylum::file_reader::read(uint8_t*, size_t)::__lambda1; _ArgTypes = {phylum::general_buffer<const unsigned char>}] 64
functional:2054:7:) [with _Res = long int; _Functor = phylum::integer_chain::read(uint32_t*, size_t)::__lambda2; _ArgTypes = {phylum::general_buffer<const unsigned char>}] 64
hal_usb_device.c:426:9:usb_d_ep_transfer 64
hpl_aes.c:787:13:__aes_sync_gcm_update 64
http_connection.cpp:99:17:fk::HttpConnection* fk::open_http_connection(const char*, const char*, const char*, bool, fk::Pool&) 64
istream.cpp:258:6:bool istream::getNumber(uint32_t, uint32_t, uint32_t*) 64
itoa.c:75:14:ltoa 64
journal.c:401:5:dhara_journal_resume 64
leds.cpp:29:6:void fk::LedsController::tick() 64
loading.c:72:10:fkb_find_and_launch 64
logging.cpp:139:8:size_t fk::write_log(const LogMessage*, const char*, va_list) 64
logs_handler.cpp:16:32:fk::DownloadLogsWorker::HeaderInfo fk::DownloadLogsWorker::get_headers(fk::Pool&) 64
lora_view.cpp:17:6:virtual void fk::LoraView::tick(fk::ViewController*, fk::Pool&) 64
m2m_hif.c:310:7:hif_send 64
memory.cpp:70:9:virtual int32_t fk::BankedDataMemory::read(uint32_t, uint8_t*, size_t, fk::MemoryReadFlags) 64
memory.cpp:76:9:virtual int32_t fk::BankedDataMemory::write(uint32_t, const uint8_t*, size_t, fk::MemoryWriteFlags) 64
module_status_view.cpp:34:6:virtual void fk::ModuleStatusView::tick(fk::ViewController*, fk::Pool&) 64
nmspi.c:1389:7:nm_spi_write_block 64
oem_atlas.cpp:140:6:bool fk::OemAtlas::compensate(fk::Compensation) 64
oem_atlas.cpp:286:6:bool fk::OemAtlas::finish_calibration() 64
readings_taker.cpp:65:31:tl::expected<long unsigned int, fk::Error> fk::ReadingsTaker::append_configuration(fk::ConstructedModulesCollection&, fk::ModuleReadingsCollection&, fk::Pool&) 64
readings_taker.cpp:70:31:tl::expected<long unsigned int, fk::Error> fk::ReadingsTaker::append_readings(uint32_t, fk::Pool&) 64
records.cpp:49:20:bool fk::pb_data_sensor_group_item_decode(pb_istream_t*, fk::pb_array_t*) 64
scanning.cpp:157:6:virtual bool fk::ModuleScanning::provision(fk::ModulePosition, ModuleHeader&) 64
self_check.cpp:17:6:bool fk::single_check(const char*, T) [with T = fk::SelfCheck::gps()::__lambda5] 64
sequential_memory.cpp:103:9:virtual int32_t fk::BufferedPageMemory::read(uint32_t, uint8_t*, size_t, fk::MemoryReadFlags) 64
sequential_memory.cpp:120:9:virtual int32_t fk::BufferedPageMemory::write(uint32_t, const uint8_t*, size_t, fk::MemoryWriteFlags) 64
sequential_memory.cpp:15:9:int32_t fk::SequentialMemory::read(uint32_t, uint8_t*, size_t) 64
sequential_memory.cpp:44:9:int32_t fk::SequentialMemory::write(uint32_t, const uint8_t*, size_t) 64
sequential_memory.h:41:13:int32_t fk::SequentialWrapper<T>::read(uint32_t, uint8_t*, size_t) [with T = fk::BufferedPageMemory; int32_t = long int; uint32_t = long unsigned int; uint8_t = unsigned char; size_t = unsigned int] 64
sequential_memory.h:41:13:int32_t fk::SequentialWrapper<T>::read(uint32_t, uint8_t*, size_t) [with T = fk::BufferedPageMemory; int32_t = long int; uint32_t = long unsigned int; uint8_t = unsigned char; size_t = unsigned int] 64
sequential_memory.h:70:13:int32_t fk::SequentialWrapper<T>::write(uint32_t, const uint8_t*, size_t) [with T = fk::BufferedPageMemory; int32_t = long int; uint32_t = long unsigned int; uint8_t = unsigned char; size_t = unsigned int] 64
simple_ntp.cpp:24:6:bool fk::SimpleNTP::service() 64
tree_sector.h:392:183:phylum::tree_sector<KEY, VALUE, Size>::split_child(phylum::page_lock&, phylum::index_type, phylum::node_ptr_t, phylum::tree_sector<KEY, VALUE, Size>::default_node_type*, phylum::node_ptr_t, phylum::tree_sector<KEY, VALUE, Size>::default_node_type*) [with KEY = long unsigned int; VALUE = phylum::attribute_value_t<256u>; unsigned int Size = 15u; int32_t = long int; phylum::index_type = short int; phylum::tree_sector<KEY, VALUE, Size>::default_node_type = phylum::tree_node_t<long unsigned int, phylum::attribute_value_t<256u>, 15u>]::__lambda2 64
tree_sector.h:392:183:phylum::tree_sector<KEY, VALUE, Size>::split_child(phylum::page_lock&, phylum::index_type, phylum::node_ptr_t, phylum::tree_sector<KEY, VALUE, Size>::default_node_type*, phylum::node_ptr_t, phylum::tree_sector<KEY, VALUE, Size>::default_node_type*) [with KEY = long unsigned int; VALUE = phylum::dirtree_tree_value_t<128u>; unsigned int Size = 4u; int32_t = long int; phylum::index_type = short int; phylum::tree_sector<KEY, VALUE, Size>::default_node_type = phylum::tree_node_t<long unsigned int, phylum::dirtree_tree_value_t<128u>, 4u>]::__lambda2 64
u8g2_box.c:147:6:u8g2_DrawRFrame 64
u8g2_box.c:88:6:u8g2_DrawRBox 64
u8g2_message.c:99:9:u8g2_UserInterfaceMessage 64
u8g2_selection_list.c:52:6:u8g2_DrawUTF8Line 64
u8x8_d_uc1611.c:413:9:u8x8_d_uc1611_ew50850 64
water_api.cpp:11:6:bool fk::WaterApi::handle(fk::ModuleContext, fk::HttpServerConnection*, fk::Pool&) 64
water_module.cpp:95:6:bool fk::WaterModule::load_configuration(fk::ModuleContext, fk::Pool&) 64
FatFileLFN.cpp:503:8:size_t FatFile::printName(print_t*) 72
MDNS.cpp:290:13:MDNSError_t MDNS::_sendMDNSMessage(uint32_t, uint32_t, int, int) 72
data_chain.cpp:166:9:int32_t phylum::data_chain::read(uint8_t*, size_t) 72
data_chain.cpp:195:9:int32_t phylum::data_chain::write_chain(std::function<long int(phylum::general_buffer<unsigned char>, bool&)>) 72
debug_udp.cpp:81:6:void fk::DebugUDP::reply_with_query(const char*) 72
directory_chain.cpp:105:9:virtual int32_t phylum::directory_chain::file_data(phylum::file_id_t, phylum::file_size_t, const uint8_t*, size_t) 72
directory_chain.cpp:91:9:virtual int32_t phylum::directory_chain::file_chain(phylum::file_id_t, phylum::head_tail_t) 72
dyn.cpp:7:6:void fk::fkb_log_header(const fkb_header_t*) 72
eeprom.cpp:177:6:bool fk::ModuleEeprom::read_data_delimited(uint32_t, uint8_t*, size_t&, size_t) 72
file.cpp:195:9:int32_t fk::File::write_record_tail(fk::RecordSize) 72
file.cpp:373:10:uint32_t fk::File::find_previous_sector_aligned_record(fk::StorageAddress) 72
file_appender.cpp:5:1:phylum::file_appender::file_appender(phylum::phyctx, phylum::directory*, phylum::found_file) 72
file_appender.cpp:93:9:int32_t phylum::file_appender::flush() 72
file_reader.cpp:26:9:int32_t phylum::file_reader::read(uint8_t*, size_t) 72
file_reader.cpp:5:1:phylum::file_reader::file_reader(phylum::phyctx, phylum::directory*, phylum::found_file) 72
functional:2054:7:) [with _Res = long int; _Functor = phylum::integer_chain::write(const uint32_t*, size_t)::__lambda1; _ArgTypes = {phylum::general_buffer<unsigned char>, bool&}] 72
hal_aes_sync.c:371:9:aes_sync_gcm_auth_decrypt 72
hal_aes_sync.c:448:9:aes_sync_ccm_auth_decrypt 72
http_reply.cpp:499:6:bool fk::HttpReply::include_scan(fk::NetworkScan) 72
http_server_connection.cpp:122:9:int32_t fk::HttpServerConnection::write(int32_t, const char*, const uint8_t*, size_t) 72
http_server_connection.cpp:235:6:virtual bool fk::HttpServerConnection::service() 72
http_server_connection.cpp:57:9:int32_t fk::HttpServerConnection::busy(uint32_t, const char*, fk::Pool&) 72
m2m_wifi.c:1182:7:m2m_wifi_set_device_name 72
m2m_wifi.c:461:7:m2m_wifi_init 72
memory.cpp:82:9:virtual int32_t fk::BankedDataMemory::erase(uint32_t, size_t) 72
menu_view.cpp:670:6:void fk::MenuView::create_main_menu() 72
oem_atlas.cpp:234:19:fk::CalibrationStatus fk::OemAtlas::calibration() 72
os.c:841:6:osi_hard_fault_handler 72
paging_delimited_buffer.cpp:102:9:int32_t phylum::paging_delimited_buffer::replace(phylum::dhara_sector_t, bool, bool) 72
process.cpp:48:10:uint32_t fk::allocate_process_got(const fkb_header_t*, uint32_t*, uint32_t*) 72
readings_taker.cpp:23:36:tl::expected<fk::TakenReadings, fk::Error> fk::ReadingsTaker::take(fk::ConstructedModulesCollection&, fk::ScanningContext&, fk::Pool&) 72
readings_view.cpp:11:6:virtual void fk::ReadingsView::tick(fk::ViewController*, fk::Pool&) 72
records.cpp:178:6:void fk::fk_data_record_decoding_new(fk_data_DataRecord*, fk::Pool&) 72
records.cpp:321:19:fk_app_HttpQuery* fk::fk_http_query_prepare_decoding(fk_app_HttpQuery*, fk::Pool*) 72
sd_copying.cpp:123:6:bool fk::copy_memory_to_flash(const uint8_t*, size_t, fk::FlashMemory*, uint32_t, uint32_t, fk::Pool&) 72
sd_copying.cpp:72:6:bool fk::copy_memory_to_flash(const uint8_t*, size_t, fk::Hash&, fk::FlashMemory*, uint32_t, uint32_t, fk::Pool&) 72
self_check.cpp:39:6:void fk::SelfCheck::check(fk::SelfCheckSettings, fk::SelfCheckCallbacks&, fk::Pool*) 72
simple_ntp.cpp:80:6:bool fk::SimpleNTP::send() 72
startup_worker.cpp:448:6:bool fk::StartupWorker::check_for_upgrading_startup(fk::Pool&) 72
u8g2_display.cpp:374:6:virtual void fk::U8g2Display::self_check(const fk::SelfCheckScreen&) 72
u8g2_font.c:387:6:u8g2_font_decode_len 72
u8g2_input_value.c:44:9:u8g2_UserInterfaceInputValue 72
u8x8_8x8.c:105:6:u8x8_DrawGlyph 72
u8x8_capture.c:122:6:u8x8_capture_write_xbm_buffer 72
udp_discovery.cpp:65:6:bool fk::UDPDiscovery::send(fk_app_UdpStatus, fk::Pool*) 72
FatFileLFN.cpp:293:6:bool FatFile::open(FatFile*, fname_t*, oflag_t) 80
TinyGPS.cpp:321:7:static float TinyGPS::course_to(float, float, float, float) 80
delimited_buffer.h:184:14:const T* phylum::delimited_buffer::header() const [with T = phylum::data_chain_header_t] 80
delimited_buffer.h:184:14:const T* phylum::delimited_buffer::header() const [with T = phylum::data_chain_header_t] 80
delimited_buffer.h:184:14:const T* phylum::delimited_buffer::header() const [with T = phylum::sector_chain_header_t] 80
delimited_buffer.h:184:14:const T* phylum::delimited_buffer::header() const [with T = phylum::super_block_t] 80
delimited_buffer.h:369:20:phylum::record_ptr phylum::delimited_buffer::iterator::operator*() 80
delimited_buffer.h:369:20:phylum::record_ptr phylum::delimited_buffer::iterator::operator*() 80
delimited_buffer.h:369:20:phylum::record_ptr phylum::delimited_buffer::iterator::operator*() 80
delimited_buffer.h:369:20:phylum::record_ptr phylum::delimited_buffer::iterator::operator*() 80
delimited_buffer.h:369:20:phylum::record_ptr phylum::delimited_buffer::iterator::operator*() 80
delimited_buffer.h:369:20:phylum::record_ptr phylum::delimited_buffer::iterator::operator*() 80
directory_tree.cpp:225:9:virtual int32_t phylum::directory_tree::read(phylum::file_id_t, std::function<long int(phylum::general_buffer<const unsigned char>)>) 80
dns_message.cpp:188:9:int16_t fk::DNSReader::read_records(uint16_t) 80
dns_message.cpp:27:30:fk::DNSReader::dns_name_length_t fk::DNSReader::read_name(fk::BufferedReader*, uint8_t*, size_t) 80
file.cpp:605:9:int32_t fk::File::read_record_header() 80
file.cpp:822:9:virtual int32_t fk::File::write(const uint8_t*, size_t) 80
file.cpp:847:9:int32_t fk::File::write(const void*, const pb_msgdesc_t*) 80
file_ops_darwin.cpp:139:6:virtual bool fk::darwin::FileReader::decode_signed(void*, const pb_msgdesc_t*, fk::Pool&) 80
functional:2054:7:) [with _Res = long int; _Functor = phylum::file_appender::make_data_chain()::__lambda3; _ArgTypes = {phylum::general_buffer<const unsigned char>}] 80
hpl_aes.c:1101:9:__aes_sync_ccm_decrypt_and_tag 80
hpl_aes.c:915:9:__aes_sync_ccm_crypt_and_tag 80
http_server_connection.cpp:88:9:int32_t fk::HttpServerConnection::error(int32_t, const char*, fk::Pool&) 80
lora_worker.cpp:15:38:tl::expected<fk::BufferPtr*, fk::Error> fk::packetize(fk::Pool&) 80
memory.cpp:90:9:virtual int32_t fk::BankedDataMemory::copy_page(uint32_t, uint32_t, size_t) 80
oem_atlas.cpp:102:6:bool fk::OemAtlas::find(uint8_t) 80
oem_atlas.cpp:248:19:fk::CalibrationStatus fk::OemAtlas::calibrate(uint8_t, float) 80
pb_decode.c:786:25:decode_field 80
pb_decode.c:939:13:pb_message_set_to_defaults 80
startup_worker.cpp:489:6:bool fk::StartupWorker::check_for_provision_startup(fk::Pool&) 80
state.cpp:17:6:void fk::Schedule::recreate() 80
tree_sector.h:387:13:int32_t phylum::tree_sector<KEY, VALUE, Size>::split_child(phylum::page_lock&, phylum::index_type, phylum::node_ptr_t, phylum::tree_sector<KEY, VALUE, Size>::default_node_type*, phylum::node_ptr_t, phylum::tree_sector<KEY, VALUE, Size>::default_node_type*) [with KEY = long unsigned int; VALUE = phylum::attribute_value_t<256u>; unsigned int Size = 15u; int32_t = long int; phylum::index_type = short int; phylum::tree_sector<KEY, VALUE, Size>::default_node_type = phylum::tree_node_t<long unsigned int, phylum::attribute_value_t<256u>, 15u>] 80
tree_sector.h:387:13:int32_t phylum::tree_sector<KEY, VALUE, Size>::split_child(phylum::page_lock&, phylum::index_type, phylum::node_ptr_t, phylum::tree_sector<KEY, VALUE, Size>::default_node_type*, phylum::node_ptr_t, phylum::tree_sector<KEY, VALUE, Size>::default_node_type*) [with KEY = long unsigned int; VALUE = phylum::dirtree_tree_value_t<128u>; unsigned int Size = 4u; int32_t = long int; phylum::index_type = short int; phylum::tree_sector<KEY, VALUE, Size>::default_node_type = phylum::tree_node_t<long unsigned int, phylum::dirtree_tree_value_t<128u>, 4u>] 80
water_module.cpp:60:14:virtual fk::ModuleReturn fk::WaterModule::initialize(fk::ModuleContext, fk::Pool&) 80
FatFileLFN.cpp:122:6:bool FatFile::getName(char*, size_t) 88
delimited_buffer.h:191:13:int32_t phylum::delimited_buffer::write_header(std::function<long int(THeader*)>) [with THeader = phylum::sector_chain_header_t; int32_t = long int] 88
delimited_buffer.h:197:13:int32_t phylum::delimited_buffer::write_view(std::function<long int(phylum::general_buffer<unsigned char>)>) 88
delimited_buffer.h:219:13:int32_t phylum::delimited_buffer::seek_end() 88
delimited_buffer.h:219:13:int32_t phylum::delimited_buffer::seek_end() 88
diagnostics_module.cpp:60:17:virtual fk::ModuleReadings* fk::DiagnosticsModule::take_readings(fk::ReadingsContext, fk::Pool&) 88
directory_chain.cpp:236:9:virtual int32_t phylum::directory_chain::read(phylum::file_id_t, std::function<long int(phylum::general_buffer<const unsigned char>)>) 88
display.cpp:134:10:void fk::MainViewController::run() 88
download_handler.cpp:16:28:fk::DownloadWorker::HeaderInfo fk::DownloadWorker::get_headers(fk::FileReader*, fk::Pool&) 88
file.cpp:657:9:virtual int32_t fk::File::read(uint8_t*, size_t) 88
http_reply.cpp:407:6:bool fk::HttpReply::include_readings() 88
lwcron.cpp:176:10:uint32_t lwcron::CronSpec::getNextTime(lwcron::DateTime) 88
meta_record.cpp:53:6:void fk::MetaRecord::include_state(const fk::GlobalState*, const fkb_header_t*, fk::Pool&) 88
metal_sd_card.cpp:195:6:virtual bool fk::MetalSdCard::append_logs(const uint8_t*, size_t) 88
module_factory.cpp:97:6:bool fk::ModuleFactory::initialize(fk::ScanningContext&, fk::Pool&) 88
printf.cpp:215:15:size_t _ntoa_long(out_fct_type, char*, size_t, size_t, long unsigned int, bool, long unsigned int, unsigned int, unsigned int, unsigned int) 88
printf.cpp:215:15:size_t _ntoa_long(out_fct_type, char*, size_t, size_t, long unsigned int, bool, long unsigned int, unsigned int, unsigned int, unsigned int) 88
qr_code_view.cpp:23:6:virtual void fk::QrCodeView::tick(fk::ViewController*, fk::Pool&) 88
rn2903.cpp:148:6:bool fk::Rn2903::provision(const char*, const char*) 88
tiny_printf.c:218:15:_ntoa_long 88
u8g2_circle.c:333:6:u8g2_DrawEllipse 88
u8g2_circle.c:466:6:u8g2_DrawFilledEllipse 88
u8x8_8x8.c:207:6:u8x8_Draw2x2Glyph 88
u8x8_8x8.c:249:6:u8x8_Draw1x2Glyph 88
FatFile.cpp:261:6:bool FatFile::mkdir(FatFile*, const char*, bool) 96
FatFile.cpp:377:6:bool FatFile::open(FatFile*, const char*, oflag_t) 96
api_handler.cpp:164:13:bool fk::configure(fk::HttpServerConnection*, fk_app_HttpQuery*, fk::Pool&) 96
blake2b.cpp:281:6:void BLAKE2b::finalizeHMAC(const void*, size_t, void*, size_t) 96
clock.cpp:108:6:bool fk::CoreClock::sync() 96
clock.cpp:312:10:uint32_t fk::clock_adjust(uint32_t) 96
http_server_connection.cpp:172:9:int32_t fk::HttpServerConnection::write(int32_t, const char*, const void*, const pb_msgdesc_t*) 96
menu_view.cpp:567:6:void fk::MenuView::create_network_menu() 96
meta_record.cpp:164:6:void fk::MetaRecord::include_modules(const fk::GlobalState*, const fkb_header_t*, fk::ConstructedModulesCollection&, fk::ModuleReadingsCollection&, fk::Pool&) 96
pb_encode.c:509:18:pb_encode 96
rn2903.cpp:201:6:bool fk::Rn2903::provision(const char*, const char*, const char*, uint32_t, uint32_t) 96
scan_modules_worker.cpp:50:6:virtual void fk::ScanModulesWorker::run(fk::Pool&) 96
signed_log.cpp:19:31:tl::expected<long unsigned int, fk::Error> fk::SignedRecordLog::seek_record(fk::SignedRecordKind) 96
tree_sector.h:107:29:static phylum::tree_sector<KEY, VALUE, Size>::persisted_node_t phylum::tree_sector<KEY, VALUE, Size>::find_root_in_sector(phylum::dhara_sector_t, phylum::delimited_buffer&) [with KEY = long unsigned int; VALUE = phylum::attribute_value_t<256u>; unsigned int Size = 15u; phylum::dhara_sector_t = long unsigned int] 96
tree_sector.h:107:29:static phylum::tree_sector<KEY, VALUE, Size>::persisted_node_t phylum::tree_sector<KEY, VALUE, Size>::find_root_in_sector(phylum::dhara_sector_t, phylum::delimited_buffer&) [with KEY = long unsigned int; VALUE = phylum::dirtree_tree_value_t<128u>; unsigned int Size = 4u; phylum::dhara_sector_t = long unsigned int] 96
upload_data_worker.cpp:31:16:fk::ConnectionInfo fk::build_connection_info(uint32_t, uint32_t, uint32_t, const char*, fk::Pool&) 96
collections.h:125:10:bool fk::collection<T>::sort(SortKeyFn) [with SortKeyFn = fk::ModuleFactory::sort_modules()::__lambda0; T = fk::ConstructedModule] 104
network_task.cpp:38:6:bool fk::NetworkTask::begin(fk::NetworkSettings, uint32_t, fk::Pool&) 104
oem_atlas.cpp:188:6:bool fk::OemAtlas::read(float*, size_t&) 104
printf.cpp:235:15:size_t _ntoa_long_long(out_fct_type, char*, size_t, size_t, long long unsigned int, bool, long long unsigned int, unsigned int, unsigned int, unsigned int) 104
printf.cpp:235:15:size_t _ntoa_long_long(out_fct_type, char*, size_t, size_t, long long unsigned int, bool, long long unsigned int, unsigned int, unsigned int, unsigned int) 104
receive_firmware_handler.cpp:44:6:virtual void fk::ReceiveFirmwareWorker::run(fk::Pool&) 104
service_modules_worker.cpp:14:6:virtual void fk::ServiceModulesWorker::run(fk::Pool&) 104
tiny_printf.c:238:15:_ntoa_long_long 104
tree_sector.h:122:29:static phylum::tree_sector<KEY, VALUE, Size>::persisted_node_t phylum::tree_sector<KEY, VALUE, Size>::find_node_in_sector(phylum::delimited_buffer&, phylum::node_ptr_t) [with KEY = long unsigned int; VALUE = phylum::attribute_value_t<256u>; unsigned int Size = 15u] 104
tree_sector.h:122:29:static phylum::tree_sector<KEY, VALUE, Size>::persisted_node_t phylum::tree_sector<KEY, VALUE, Size>::find_node_in_sector(phylum::delimited_buffer&, phylum::node_ptr_t) [with KEY = long unsigned int; VALUE = phylum::dirtree_tree_value_t<128u>; unsigned int Size = 4u] 104
tree_sector.h:561:13:int32_t phylum::tree_sector<KEY, VALUE, Size>::create() [with KEY = long unsigned int; VALUE = phylum::attribute_value_t<256u>; unsigned int Size = 15u; int32_t = long int] 104
tree_sector.h:561:13:int32_t phylum::tree_sector<KEY, VALUE, Size>::create() [with KEY = long unsigned int; VALUE = phylum::dirtree_tree_value_t<128u>; unsigned int Size = 4u; int32_t = long int] 104
water_module.cpp:159:17:virtual fk::ModuleReadings* fk::WaterModule::take_readings(fk::ReadingsContext, fk::Pool&) 104
SEGGER_RTT_printf.c:482:5:SEGGER_RTT_vprintf 112
configure_module_worker.cpp:63:6:bool fk::ConfigureModuleWorker::scan(fk::Pool&) 112
data_chain.cpp:295:9:int32_t phylum::data_chain::read_chain(std::function<long int(phylum::general_buffer<const unsigned char>)>) 112
dhara_map.cpp:28:9:virtual int32_t phylum::dhara_sector_map::begin(bool) 112
file.cpp:716:9:int32_t fk::File::read_record_tail() 112
menu_view.cpp:414:6:void fk::MenuView::create_tools_menu() 112
metal_gps.cpp:33:6:virtual bool fk::MetalGps::service(fk::GpsFix&) 112
schedule_view.cpp:57:6:virtual void fk::ScheduleView::enter(fk::ViewController*) 112
sector_chain.cpp:314:9:int32_t phylum::sector_chain::grow_tail(phylum::page_lock&) 112
socket.c:1262:7:setsockopt 112
startup_worker.cpp:40:6:virtual void fk::StartupWorker::run(fk::Pool&) 112
state_manager.cpp:23:6:bool fk::GlobalStateManager::initialize(fk::Pool&) 112
aggregated_weather.cpp:129:17:fk::ModuleReadings* fk::AggregatedWeather::take_readings(fk::ModuleContext, fk::Pool&) 120
delimited_buffer.h:219:13:int32_t phylum::delimited_buffer::seek_end() 120
delimited_buffer.h:219:13:int32_t phylum::delimited_buffer::seek_end() 120
delimited_buffer.h:229:13:int32_t phylum::delimited_buffer::seek_once() 120
http_parser.c:641:8:http_parser_execute 120
menu_view.cpp:215:6:void fk::MenuView::create_module_menu() 120
metal_sd_card.cpp:149:6:virtual bool fk::MetalSdCard::append_logs(fk::circular_buffer<char>&, fk::circular_buffer<char>::iterator) 120
module_factory.cpp:145:51:tl::expected<fk::collection<fk::ConstructedModule>, fk::Error> fk::ModuleFactory::resolve(fk::FoundModuleCollection&, fk::Pool&) 120
self_check_worker.cpp:39:6:void fk::SelfCheckWorker::check() 120
socket.c:221:13:m2m_ip_cb 120
spi_flash.cpp:263:9:int32_t fk::SpiFlash::write_internal(uint32_t, const uint8_t*, size_t) 120
free_sectors_chain.cpp:11:9:int32_t phylum::free_sectors_chain::add_free_sectors(phylum::free_sectors_t) 128
m2m_ssl.c:74:13:m2m_ssl_cb 128
m2m_wifi.c:84:13:m2m_wifi_cb 128
metal_gps.cpp:115:6:virtual bool fk::MetalGps::stop() 128
module_factory.cpp:163:51:tl::expected<fk::collection<fk::ConstructedModule>, fk::Error> fk::ModuleFactory::rescan(fk::ModuleScanning&, fk::Pool&) 128
tree_sector.h:198:13:int32_t phylum::tree_sector<KEY, VALUE, Size>::allocate_node(phylum::page_lock&, phylum::node_ptr_t&, TFill) [with TFill = phylum::tree_sector<KEY, VALUE, Size>::add(KEY, VALUE) [with KEY = long unsigned int; VALUE = phylum::attribute_value_t<256u>; unsigned int Size = 15u; int32_t = long int]::__lambda5::__lambda6; KEY = long unsigned int; VALUE = phylum::attribute_value_t<256u>; unsigned int Size = 15u; int32_t = long int] 128
tree_sector.h:198:13:int32_t phylum::tree_sector<KEY, VALUE, Size>::allocate_node(phylum::page_lock&, phylum::node_ptr_t&, TFill) [with TFill = phylum::tree_sector<KEY, VALUE, Size>::add(KEY, VALUE) [with KEY = long unsigned int; VALUE = phylum::dirtree_tree_value_t<128u>; unsigned int Size = 4u; int32_t = long int]::__lambda5::__lambda6; KEY = long unsigned int; VALUE = phylum::dirtree_tree_value_t<128u>; unsigned int Size = 4u; int32_t = long int] 128
tree_sector.h:198:13:int32_t phylum::tree_sector<KEY, VALUE, Size>::allocate_node(phylum::page_lock&, phylum::node_ptr_t&, TFill) [with TFill = phylum::tree_sector<KEY, VALUE, Size>::split_child(phylum::page_lock&, phylum::index_type, phylum::node_ptr_t, phylum::tree_sector<KEY, VALUE, Size>::default_node_type*, phylum::node_ptr_t, phylum::tree_sector<KEY, VALUE, Size>::default_node_type*) [with KEY = long unsigned int; VALUE = phylum::attribute_value_t<256u>; unsigned int Size = 15u; int32_t = long int; phylum::index_type = short int; phylum::tree_sector<KEY, VALUE, Size>::default_node_type = phylum::tree_node_t<long unsigned int, phylum::attribute_value_t<256u>, 15u>]::__lambda2; KEY = long unsigned int; VALUE = phylum::attribute_value_t<256u>; unsigned int Size = 15u; int32_t = long int] 128
tree_sector.h:198:13:int32_t phylum::tree_sector<KEY, VALUE, Size>::allocate_node(phylum::page_lock&, phylum::node_ptr_t&, TFill) [with TFill = phylum::tree_sector<KEY, VALUE, Size>::split_child(phylum::page_lock&, phylum::index_type, phylum::node_ptr_t, phylum::tree_sector<KEY, VALUE, Size>::default_node_type*, phylum::node_ptr_t, phylum::tree_sector<KEY, VALUE, Size>::default_node_type*) [with KEY = long unsigned int; VALUE = phylum::dirtree_tree_value_t<128u>; unsigned int Size = 4u; int32_t = long int; phylum::index_type = short int; phylum::tree_sector<KEY, VALUE, Size>::default_node_type = phylum::tree_node_t<long unsigned int, phylum::dirtree_tree_value_t<128u>, 4u>]::__lambda2; KEY = long unsigned int; VALUE = phylum::dirtree_tree_value_t<128u>; unsigned int Size = 4u; int32_t = long int] 128
upload_data_worker.cpp:60:30:fk::UploadDataWorker::FileUpload fk::UploadDataWorker::upload_file(fk::Storage&, uint8_t, uint32_t, const char*, fk::Pool&) 128
FatFile.cpp:910:6:bool FatFile::rename(FatFile*, const char*) 136
clock.cpp:274:6:void fk::CoreClock::compare() 136
file.cpp:97:9:int32_t fk::File::write_record_header(fk::RecordSize) 136
file_handler.cpp:26:6:virtual void fk::DownloadFileWorker::run(fk::Pool&) 136
logging.cpp:296:6:) 136
logs_handler.cpp:35:6:virtual void fk::DownloadLogsWorker::run(fk::Pool&) 136
lora_packetizer.cpp:142:38:tl::expected<fk::BufferPtr*, fk::Error> fk::LoraPacketizer::packetize(const fk::TakenReadings&, fk::Pool&) 136
metal_gps.cpp:19:6:virtual bool fk::MetalGps::begin() 136
metal_sd_card.cpp:445:23:nonstd::optional_lite::optional<bool> fk::open_path(SdFile&, const char*, oflag_t) 136
network_task.cpp:57:1:fk::NetworkTask::~NetworkTask() 136
self_check.cpp:25:3:V fk::single_noncritical_check(const char*, T) [with V = bool; T = fk::SelfCheck::sd_card_write()::__lambda8] 136
startup_worker.cpp:168:6:bool fk::StartupWorker::load_state(fk::Storage&, fk::GlobalState*, fk::Pool&) 136
super_chain.cpp:31:9:int32_t phylum::super_chain::update(phylum::tree_ptr_t) 136
atlas_module.cpp:184:17:virtual fk::ModuleReadings* fk::AtlasModule::take_readings(fk::ReadingsContext, fk::Pool&) 144
file.cpp:402:9:int32_t fk::File::rewind() 144
lora_manager.cpp:23:6:bool fk::LoraManager::begin() 144
metal_sd_card.cpp:100:6:bool fk::MetalSdCard::initialize_logs() 144
pb_decode.c:978:25:pb_decode_inner 144
api_handler.cpp:65:6:virtual bool fk::ApiHandler::handle(fk::HttpServerConnection*, fk::Pool&) 152
m2m_wifi.c:550:7:m2m_wifi_connect_sc 152
map.c:253:12:pad_queue 152
qrcode.c:779:8:qrcode_initBytes 152
sd_copying.cpp:131:6:bool fk::copy_sd_to_flash(const char*, fk::FlashMemory*, uint32_t, uint32_t, fk::Pool&) 152
tree_sector.h:596:13:int32_t phylum::tree_sector<KEY, VALUE, Size>::add(KEY, VALUE) [with KEY = long unsigned int; VALUE = phylum::dirtree_tree_value_t<128u>; unsigned int Size = 4u; int32_t = long int] 152
WiFi.cpp:515:9:uint8_t WiFiClass::startAP(const char*, uint8_t, const void*, uint8_t) 160
WiFi.cpp:606:9:uint8_t WiFiClass::startProvision(const char*, const char*, uint8_t) 160
atlas_api.cpp:11:6:bool fk::AtlasApi::handle(fk::ModuleContext, fk::HttpServerConnection*, fk::Pool&) 160
home_view.cpp:25:6:virtual void fk::HomeView::tick(fk::ViewController*, fk::Pool&) 160
map.c:348:5:dhara_map_write 160
map.c:371:5:dhara_map_copy_page 160
metal_sd_card.cpp:288:6:virtual bool fk::MetalSdCard::ls(const char*, size_t, fk_app_DirectoryEntry**, size_t&, size_t&, fk::Pool&) 160
module_handler.cpp:13:6:virtual bool fk::ModuleHandler::handle(fk::HttpServerConnection*, fk::Pool&) 160
printf.cpp:394:12:int _vsnprintf(out_fct_type, char*, size_t, const char*, va_list) 160
printf.cpp:394:12:int _vsnprintf(out_fct_type, char*, size_t, const char*, va_list) 160
records.cpp:102:20:bool fk::pb_data_module_info_item_decode(pb_istream_t*, fk::pb_array_t*) 160
tiny_printf.c:397:12:_vsnprintf 160
tree_sector.h:690:13:int32_t phylum::tree_sector<KEY, VALUE, Size>::find(KEY, VALUE*) [with KEY = long unsigned int; VALUE = phylum::attribute_value_t<256u>; unsigned int Size = 15u; int32_t = long int] 160
tree_sector.h:690:13:int32_t phylum::tree_sector<KEY, VALUE, Size>::find(KEY, VALUE*) [with KEY = long unsigned int; VALUE = phylum::dirtree_tree_value_t<128u>; unsigned int Size = 4u; int32_t = long int] 160
directory_chain.cpp:223:9:int32_t phylum::directory_chain::seek_file_entry(phylum::file_id_t) 168
download_handler.cpp:126:6:bool fk::DownloadWorker::write_headers(fk::DownloadWorker::HeaderInfo) 168
file.cpp:508:9:int32_t fk::File::search_for_following_block() 168
lora_manager.cpp:62:6:bool fk::LoraManager::join_if_necessary(fk::Pool&) 168
lora_ranging_worker.cpp:18:6:virtual void fk::LoraRangingWorker::run(fk::Pool&) 168
map.c:122:12:trace_path 168
protobuf.cpp:223:6:bool fk::pb_encode_logs(pb_ostream_t*, const pb_field_t*, void* const*) 168
scanning.cpp:56:6:bool fk::ModuleScanning::try_scan_single_module(fk::ModulePosition, fk::FoundModuleCollection&, fk::Pool&) 168
configure_module_worker.cpp:36:6:bool fk::ConfigureModuleWorker::configure(fk::Pool&) 176
display.h:147:10:void fk::LambdaOption<TSelect>::on_selected() [with TSelect = fk::MenuView::create_network_menu()::__lambda56] 176
map.c:212:12:raw_gc 176
readings_worker.cpp:48:6:bool fk::ReadingsWorker::take(fk::Pool&) 176
schedule_view.cpp:25:6:virtual void fk::ScheduleView::tick(fk::ViewController*, fk::Pool&) 176
export_data_worker.cpp:145:6:bool fk::ExportDataWorker::write_header() 184
file.cpp:314:9:int32_t fk::File::skip(bool) 184
file_handler.cpp:89:6:bool fk::DownloadFileWorker::write_headers(fk::DownloadFileWorker::HeaderInfo) 184
functional:2054:7:) [with _Res = long int; _Functor = phylum::data_chain::write_chain(std::function<long int(phylum::general_buffer<unsigned char>, bool&)>)::__lambda4; _ArgTypes = {phylum::general_buffer<unsigned char>}] 184
logs_handler.cpp:83:6:bool fk::DownloadLogsWorker::write_headers(fk::DownloadLogsWorker::HeaderInfo) 184
battery_status.cpp:9:6:void fk::BatteryStatus::refresh() 192
sector_chain.cpp:216:9:int32_t phylum::sector_chain::log() 192
write_memory_handler.cpp:56:6:virtual void fk::WriteMemoryWorker::run(fk::Pool&) 192
gps.cpp:10:6:void fk::task_handler_gps(void*) 200
storage.cpp:251:6:bool fk::Storage::begin_internal() 200
tree_sector.h:457:13:int32_t phylum::tree_sector<KEY, VALUE, Size>::insert_non_full(phylum::node_ptr_t, KEY&, VALUE&) [with KEY = long unsigned int; VALUE = phylum::attribute_value_t<256u>; unsigned int Size = 15u; int32_t = long int] 200
tree_sector.h:457:13:int32_t phylum::tree_sector<KEY, VALUE, Size>::insert_non_full(phylum::node_ptr_t, KEY&, VALUE&) [with KEY = long unsigned int; VALUE = phylum::dirtree_tree_value_t<128u>; unsigned int Size = 4u; int32_t = long int] 200
gps_view.cpp:11:6:virtual void fk::GpsView::tick(fk::ViewController*, fk::Pool&) 208
status_logging.cpp:59:6:bool fk::fk_log_diagnostics() 208
u8g2_display.cpp:415:6:virtual void fk::U8g2Display::simple(fk::SimpleScreen&&) 208
status_logging.cpp:55:6:void fk::fk_status_log() 216
file.cpp:541:9:int32_t fk::File::find_following_block() 224
tree_sector.h:460:141:phylum::tree_sector<KEY, VALUE, Size>::insert_non_full(phylum::node_ptr_t, KEY&, VALUE&) [with KEY = long unsigned int; VALUE = phylum::attribute_value_t<256u>; unsigned int Size = 15u; int32_t = long int]::__lambda3 224
tree_sector.h:460:141:phylum::tree_sector<KEY, VALUE, Size>::insert_non_full(phylum::node_ptr_t, KEY&, VALUE&) [with KEY = long unsigned int; VALUE = phylum::dirtree_tree_value_t<128u>; unsigned int Size = 4u; int32_t = long int]::__lambda3 224
u8g2_display.cpp:454:6:virtual void fk::U8g2Display::module_status(fk::ModuleStatusScreen&) 224
dump_flash_memory_worker.cpp:18:6:virtual void fk::DumpFlashMemoryWorker::run(fk::Pool&) 232
u8g2_display.cpp:436:6:virtual void fk::U8g2Display::reading(fk::ReadingScreen&) 232
export_data_worker.cpp:171:31:fk::ExportDataWorker::WriteStatus fk::ExportDataWorker::write_row(fk_data_DataRecord&) 240
http_reply.cpp:97:6:bool fk::HttpReply::include_status(uint32_t, uint32_t, bool, const fkb_header_t*) 240
storage.cpp:20:10:uint32_t fk::hash_block(const void*, size_t, fk::Hash&) 240
u8g2_display.cpp:177:6:virtual void fk::U8g2Display::home(const fk::HomeScreen&) 240
m2m_wifi.c:1243:7:m2m_wifi_start_provision_mode 248
backup_worker.cpp:143:6:bool fk::BackupWorker::hash_file(const char*, uint8_t*, fk::Pool&) 256
directory_tree.cpp:235:9:int32_t phylum::directory_tree::flush() 256
storage.cpp:371:10:uint32_t fk::Storage::allocate(uint8_t, uint32_t, fk::BlockTail&) 256
storage.cpp:159:22:fk::Storage::BlocksAfter fk::Storage::find_blocks_after(uint32_t, fk::FileNumber, fk::RecordNumber) 264
entries.h:355:5:phylum::tree_node_t<KEY, VALUE, Size>::tree_node_t() [with KEY = long unsigned int; VALUE = phylum::dirtree_tree_value_t<128u>; unsigned int Size = 4u] 272
free_sectors_chain.cpp:75:9:int32_t phylum::free_sectors_chain::dequeue(phylum::dhara_sector_t*) 272
menu_view.cpp:71:10:void fk::NetworkOption<T>::on_selected() [with T = fk::MenuView::create_network_menu()::__lambda57] 272
rn2903.cpp:76:6:bool fk::Rn2903::send_command(const char*, va_list) 272
entries.h:364:10:void phylum::tree_node_t<KEY, VALUE, Size>::clear() [with KEY = long unsigned int; VALUE = phylum::attribute_value_t<256u>; unsigned int Size = 15u] 280
directory_chain.cpp:135:9:virtual int32_t phylum::directory_chain::find(const char*, phylum::open_file_config) 288
sector_chain.h:163:13:int32_t phylum::sector_chain::walk(phylum::page_lock&, T) [with T = phylum::directory_chain::read(phylum::file_id_t, std::function<long int(phylum::general_buffer<const unsigned char>)>)::__lambda4; int32_t = long int] 288
spi_flash.cpp:432:6:bool fk::SpiFlash::read_parameters_page() 288
map.c:411:12:try_delete 304
signed_log.cpp:77:37:tl::expected<fk::AppendedRecord, fk::Error> fk::SignedRecordLog::append_always(fk::SignedRecordKind, const void*, const pb_msgdesc_t*, fk::Pool&) 304
readings.cpp:16:47:tl::expected<fk::collection<fk::ModuleMetaAndReadings>, fk::Error> fk::Readings::take_readings(fk::ScanningContext&, const ConstructedModulesCollection&, fk::Pool&) 312
scanning.cpp:34:13:9(fk::FoundModuleCollection&) 312
signed_log.cpp:114:37:tl::expected<fk::AppendedRecord, fk::Error> fk::SignedRecordLog::append_immutable(fk::SignedRecordKind, const void*, const pb_msgdesc_t*, fk::Pool&) 312
tree_sector.h:605:140:phylum::tree_sector<KEY, VALUE, Size>::add(KEY, VALUE) [with KEY = long unsigned int; VALUE = phylum::dirtree_tree_value_t<128u>; unsigned int Size = 4u; int32_t = long int]::__lambda5 320
file_ops_darwin.cpp:101:37:virtual tl::expected<fk::FileAttributes, fk::Error> fk::darwin::DataOps::attributes() 328
file_ops_darwin.cpp:49:37:virtual tl::expected<fk::FileAttributes, fk::Error> fk::darwin::MetaOps::attributes() 328
file_ops_darwin.cpp:110:6:virtual bool fk::darwin::DataOps::read_fixed_record(fk::DataRecord&, fk::Pool&) 336
tree_sector.h:605:140:phylum::tree_sector<KEY, VALUE, Size>::add(KEY, VALUE) [with KEY = long unsigned int; VALUE = phylum::attribute_value_t<256u>; unsigned int Size = 15u; int32_t = long int]::__lambda5 336
MDNS.cpp:526:13:MDNSError_t MDNS::_processMDNSQuery() 344
download_firmware_worker.cpp:27:6:virtual void fk::DownloadFirmwareWorker::run(fk::Pool&) 344
sd_copying.cpp:16:16:nonstd::optional_lite::optional<bool> fk::verify_flash_binary_hash(fk::FlashMemory*, uint32_t, uint32_t, uint32_t, fk::Hash&, fk::Pool&) 344
directory_tree.cpp:52:9:virtual int32_t phylum::directory_tree::find(const char*, phylum::open_file_config) 352
backup_worker.cpp:72:6:bool fk::BackupWorker::write_file(fk::FileReader*, const char*, fk::Pool&) 360
file_ops_darwin.cpp:58:6:virtual bool fk::darwin::MetaOps::read_record(fk::SignedRecordKind, fk::MetaRecord&, fk::Pool&) 360
file_ops_darwin.cpp:34:31:tl::expected<long unsigned int, fk::Error> fk::darwin::MetaOps::write_kind(fk::GlobalState*, fk::SignedRecordKind, fk::MetaRecord&, fk::Pool&) 368
file_ops_darwin.cpp:75:31:virtual tl::expected<long unsigned int, fk::Error> fk::darwin::DataOps::write_readings(fk::GlobalState*, fk_data_DataRecord*, fk::Pool&) 368
storage.cpp:474:11:fk::SeekValue fk::Storage::seek(fk::SeekSettings) 400
network.cpp:49:6:void fk::try_and_serve_connections() 448
scheduler.cpp:51:6:void fk::task_handler_scheduler(void*) 472
main.c:72:9:bl_upgrade_firmware 488
upgrade_from_sd_worker.cpp:92:6:virtual void fk::UpgradeFirmwareFromSdWorker::run(fk::Pool&) 488
directory_tree.cpp:19:9:virtual int32_t phylum::directory_tree::touch(const char*) 520
directory_tree.cpp:36:9:virtual int32_t phylum::directory_tree::unlink(const char*) 520
blake2b.cpp:325:6:void BLAKE2b::processChunk(uint64_t) 536
hpl_nvmctrl.c:601:9:_user_area_write 536
hpl_nvmctrl.c:624:9:_user_area_write_bits 544
fsck_worker.cpp:10:6:virtual void fk::FsckWorker::run(fk::Pool&) 576
state.cpp:149:6:bool fk::GlobalState::flush(fk::Pool&) 576
factory_wipe_worker.cpp:17:6:virtual void fk::FactoryWipeWorker::run(fk::Pool&) 592
metal_sd_card.cpp:264:6:virtual bool fk::MetalSdCard::format() 592
startup_worker.cpp:132:6:bool fk::StartupWorker::load_or_create_state(fk::Pool&) 592
upload_data_worker.cpp:163:6:virtual void fk::UploadDataWorker::run(fk::Pool&) 648
backup_worker.cpp:23:6:virtual void fk::BackupWorker::run(fk::Pool&) 664
storage.cpp:725:10:uint32_t fk::Storage::fsck(fk::ProgressCallbacks*) 696
download_handler.cpp:49:6:virtual void fk::DownloadWorker::run(fk::Pool&) 712
readings_worker.cpp:151:36:tl::expected<fk::TakenReadings, fk::Error> fk::ReadingsWorker::take_readings(fk::Pool&) 728
directory_tree.cpp:162:9:virtual int32_t phylum::directory_tree::file_attributes(phylum::file_id_t, phylum::open_file_attribute*, size_t) 744
export_data_worker.cpp:22:6:virtual void fk::ExportDataWorker::run(fk::Pool&) 744
display.cpp:194:6:void fk::task_handler_display(void*) 768
tree_sector.h:627:121:phylum::tree_sector<KEY, VALUE, Size>::add(KEY, VALUE) [with KEY = long unsigned int; VALUE = phylum::dirtree_tree_value_t<128u>; unsigned int Size = 4u; int32_t = long int]::__lambda5::__lambda6 1056
tree_sector.h:627:121:phylum::tree_sector<KEY, VALUE, Size>::add(KEY, VALUE) [with KEY = long unsigned int; VALUE = phylum::attribute_value_t<256u>; unsigned int Size = 15u; int32_t = long int]::__lambda5::__lambda6 3976
hpl_nvmctrl.c:159:6:_flash_write 8232
main.cpp:157:6:void setup() 43176
