// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fk-atlas.proto

package org.conservify.fieldkit.atlas.pb;

public final class FkAtlas {
  private FkAtlas() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  /**
   * Protobuf enum {@code fk_atlas.SensorType}
   */
  public enum SensorType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>SENSOR_NONE = 0;</code>
     */
    SENSOR_NONE(0),
    /**
     * <code>SENSOR_PH = 1;</code>
     */
    SENSOR_PH(1),
    /**
     * <code>SENSOR_TEMP = 2;</code>
     */
    SENSOR_TEMP(2),
    /**
     * <code>SENSOR_ORP = 3;</code>
     */
    SENSOR_ORP(3),
    /**
     * <code>SENSOR_DO = 4;</code>
     */
    SENSOR_DO(4),
    /**
     * <code>SENSOR_EC = 5;</code>
     */
    SENSOR_EC(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SENSOR_NONE = 0;</code>
     */
    public static final int SENSOR_NONE_VALUE = 0;
    /**
     * <code>SENSOR_PH = 1;</code>
     */
    public static final int SENSOR_PH_VALUE = 1;
    /**
     * <code>SENSOR_TEMP = 2;</code>
     */
    public static final int SENSOR_TEMP_VALUE = 2;
    /**
     * <code>SENSOR_ORP = 3;</code>
     */
    public static final int SENSOR_ORP_VALUE = 3;
    /**
     * <code>SENSOR_DO = 4;</code>
     */
    public static final int SENSOR_DO_VALUE = 4;
    /**
     * <code>SENSOR_EC = 5;</code>
     */
    public static final int SENSOR_EC_VALUE = 5;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SensorType valueOf(int value) {
      return forNumber(value);
    }

    public static SensorType forNumber(int value) {
      switch (value) {
        case 0: return SENSOR_NONE;
        case 1: return SENSOR_PH;
        case 2: return SENSOR_TEMP;
        case 3: return SENSOR_ORP;
        case 4: return SENSOR_DO;
        case 5: return SENSOR_EC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SensorType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SensorType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SensorType>() {
            @java.lang.Override
            public SensorType findValueByNumber(int number) {
              return SensorType.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return SensorTypeVerifier.INSTANCE;
    }

    private static final class SensorTypeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new SensorTypeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return SensorType.forNumber(number) != null;
            }
          };

    private final int value;

    private SensorType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.SensorType)
  }

  /**
   * Protobuf enum {@code fk_atlas.QueryType}
   */
  public enum QueryType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>QUERY_NONE = 0;</code>
     */
    QUERY_NONE(0),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>QUERY_NONE = 0;</code>
     */
    public static final int QUERY_NONE_VALUE = 0;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static QueryType valueOf(int value) {
      return forNumber(value);
    }

    public static QueryType forNumber(int value) {
      switch (value) {
        case 0: return QUERY_NONE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<QueryType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        QueryType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<QueryType>() {
            @java.lang.Override
            public QueryType findValueByNumber(int number) {
              return QueryType.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return QueryTypeVerifier.INSTANCE;
    }

    private static final class QueryTypeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new QueryTypeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return QueryType.forNumber(number) != null;
            }
          };

    private final int value;

    private QueryType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.QueryType)
  }

  /**
   * Protobuf enum {@code fk_atlas.CalibrationOperation}
   */
  public enum CalibrationOperation
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CALIBRATION_NONE = 0;</code>
     */
    CALIBRATION_NONE(0),
    /**
     * <code>CALIBRATION_STATUS = 1;</code>
     */
    CALIBRATION_STATUS(1),
    /**
     * <code>CALIBRATION_CLEAR = 2;</code>
     */
    CALIBRATION_CLEAR(2),
    /**
     * <code>CALIBRATION_SET = 3;</code>
     */
    CALIBRATION_SET(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CALIBRATION_NONE = 0;</code>
     */
    public static final int CALIBRATION_NONE_VALUE = 0;
    /**
     * <code>CALIBRATION_STATUS = 1;</code>
     */
    public static final int CALIBRATION_STATUS_VALUE = 1;
    /**
     * <code>CALIBRATION_CLEAR = 2;</code>
     */
    public static final int CALIBRATION_CLEAR_VALUE = 2;
    /**
     * <code>CALIBRATION_SET = 3;</code>
     */
    public static final int CALIBRATION_SET_VALUE = 3;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CalibrationOperation valueOf(int value) {
      return forNumber(value);
    }

    public static CalibrationOperation forNumber(int value) {
      switch (value) {
        case 0: return CALIBRATION_NONE;
        case 1: return CALIBRATION_STATUS;
        case 2: return CALIBRATION_CLEAR;
        case 3: return CALIBRATION_SET;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CalibrationOperation>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CalibrationOperation> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CalibrationOperation>() {
            @java.lang.Override
            public CalibrationOperation findValueByNumber(int number) {
              return CalibrationOperation.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return CalibrationOperationVerifier.INSTANCE;
    }

    private static final class CalibrationOperationVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new CalibrationOperationVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return CalibrationOperation.forNumber(number) != null;
            }
          };

    private final int value;

    private CalibrationOperation(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.CalibrationOperation)
  }

  /**
   * Protobuf enum {@code fk_atlas.TempCalibrations}
   */
  public enum TempCalibrations
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>TEMP_NONE = 0;</code>
     */
    TEMP_NONE(0),
    /**
     * <code>TEMP_SINGLE = 1;</code>
     */
    TEMP_SINGLE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>TEMP_NONE = 0;</code>
     */
    public static final int TEMP_NONE_VALUE = 0;
    /**
     * <code>TEMP_SINGLE = 1;</code>
     */
    public static final int TEMP_SINGLE_VALUE = 1;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TempCalibrations valueOf(int value) {
      return forNumber(value);
    }

    public static TempCalibrations forNumber(int value) {
      switch (value) {
        case 0: return TEMP_NONE;
        case 1: return TEMP_SINGLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TempCalibrations>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TempCalibrations> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TempCalibrations>() {
            @java.lang.Override
            public TempCalibrations findValueByNumber(int number) {
              return TempCalibrations.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return TempCalibrationsVerifier.INSTANCE;
    }

    private static final class TempCalibrationsVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new TempCalibrationsVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return TempCalibrations.forNumber(number) != null;
            }
          };

    private final int value;

    private TempCalibrations(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.TempCalibrations)
  }

  /**
   * Protobuf enum {@code fk_atlas.TempCalibrateCommand}
   */
  public enum TempCalibrateCommand
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CALIBRATE_TEMP_NONE = 0;</code>
     */
    CALIBRATE_TEMP_NONE(0),
    /**
     * <code>CALIBRATE_TEMP_CLEAR = 1;</code>
     */
    CALIBRATE_TEMP_CLEAR(1),
    /**
     * <code>CALIBRATE_TEMP_SINGLE = 2;</code>
     */
    CALIBRATE_TEMP_SINGLE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CALIBRATE_TEMP_NONE = 0;</code>
     */
    public static final int CALIBRATE_TEMP_NONE_VALUE = 0;
    /**
     * <code>CALIBRATE_TEMP_CLEAR = 1;</code>
     */
    public static final int CALIBRATE_TEMP_CLEAR_VALUE = 1;
    /**
     * <code>CALIBRATE_TEMP_SINGLE = 2;</code>
     */
    public static final int CALIBRATE_TEMP_SINGLE_VALUE = 2;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TempCalibrateCommand valueOf(int value) {
      return forNumber(value);
    }

    public static TempCalibrateCommand forNumber(int value) {
      switch (value) {
        case 0: return CALIBRATE_TEMP_NONE;
        case 1: return CALIBRATE_TEMP_CLEAR;
        case 2: return CALIBRATE_TEMP_SINGLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TempCalibrateCommand>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TempCalibrateCommand> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TempCalibrateCommand>() {
            @java.lang.Override
            public TempCalibrateCommand findValueByNumber(int number) {
              return TempCalibrateCommand.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return TempCalibrateCommandVerifier.INSTANCE;
    }

    private static final class TempCalibrateCommandVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new TempCalibrateCommandVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return TempCalibrateCommand.forNumber(number) != null;
            }
          };

    private final int value;

    private TempCalibrateCommand(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.TempCalibrateCommand)
  }

  /**
   * Protobuf enum {@code fk_atlas.DoCalibrations}
   */
  public enum DoCalibrations
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>DO_NONE = 0;</code>
     */
    DO_NONE(0),
    /**
     * <code>DO_ATMOSPHERE = 1;</code>
     */
    DO_ATMOSPHERE(1),
    /**
     * <code>DO_ZERO = 2;</code>
     */
    DO_ZERO(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>DO_NONE = 0;</code>
     */
    public static final int DO_NONE_VALUE = 0;
    /**
     * <code>DO_ATMOSPHERE = 1;</code>
     */
    public static final int DO_ATMOSPHERE_VALUE = 1;
    /**
     * <code>DO_ZERO = 2;</code>
     */
    public static final int DO_ZERO_VALUE = 2;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DoCalibrations valueOf(int value) {
      return forNumber(value);
    }

    public static DoCalibrations forNumber(int value) {
      switch (value) {
        case 0: return DO_NONE;
        case 1: return DO_ATMOSPHERE;
        case 2: return DO_ZERO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DoCalibrations>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DoCalibrations> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DoCalibrations>() {
            @java.lang.Override
            public DoCalibrations findValueByNumber(int number) {
              return DoCalibrations.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return DoCalibrationsVerifier.INSTANCE;
    }

    private static final class DoCalibrationsVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new DoCalibrationsVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return DoCalibrations.forNumber(number) != null;
            }
          };

    private final int value;

    private DoCalibrations(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.DoCalibrations)
  }

  /**
   * Protobuf enum {@code fk_atlas.DoCalibrateCommand}
   */
  public enum DoCalibrateCommand
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CALIBRATE_DO_NONE = 0;</code>
     */
    CALIBRATE_DO_NONE(0),
    /**
     * <code>CALIBRATE_DO_CLEAR = 1;</code>
     */
    CALIBRATE_DO_CLEAR(1),
    /**
     * <code>CALIBRATE_DO_ATMOSPHERE = 2;</code>
     */
    CALIBRATE_DO_ATMOSPHERE(2),
    /**
     * <code>CALIBRATE_DO_ZERO = 3;</code>
     */
    CALIBRATE_DO_ZERO(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CALIBRATE_DO_NONE = 0;</code>
     */
    public static final int CALIBRATE_DO_NONE_VALUE = 0;
    /**
     * <code>CALIBRATE_DO_CLEAR = 1;</code>
     */
    public static final int CALIBRATE_DO_CLEAR_VALUE = 1;
    /**
     * <code>CALIBRATE_DO_ATMOSPHERE = 2;</code>
     */
    public static final int CALIBRATE_DO_ATMOSPHERE_VALUE = 2;
    /**
     * <code>CALIBRATE_DO_ZERO = 3;</code>
     */
    public static final int CALIBRATE_DO_ZERO_VALUE = 3;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DoCalibrateCommand valueOf(int value) {
      return forNumber(value);
    }

    public static DoCalibrateCommand forNumber(int value) {
      switch (value) {
        case 0: return CALIBRATE_DO_NONE;
        case 1: return CALIBRATE_DO_CLEAR;
        case 2: return CALIBRATE_DO_ATMOSPHERE;
        case 3: return CALIBRATE_DO_ZERO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DoCalibrateCommand>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DoCalibrateCommand> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DoCalibrateCommand>() {
            @java.lang.Override
            public DoCalibrateCommand findValueByNumber(int number) {
              return DoCalibrateCommand.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return DoCalibrateCommandVerifier.INSTANCE;
    }

    private static final class DoCalibrateCommandVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new DoCalibrateCommandVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return DoCalibrateCommand.forNumber(number) != null;
            }
          };

    private final int value;

    private DoCalibrateCommand(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.DoCalibrateCommand)
  }

  /**
   * Protobuf enum {@code fk_atlas.PhCalibrations}
   */
  public enum PhCalibrations
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>PH_NONE = 0;</code>
     */
    PH_NONE(0),
    /**
     * <code>PH_LOW = 1;</code>
     */
    PH_LOW(1),
    /**
     * <code>PH_MIDDLE = 2;</code>
     */
    PH_MIDDLE(2),
    /**
     * <code>PH_HIGH = 4;</code>
     */
    PH_HIGH(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>PH_NONE = 0;</code>
     */
    public static final int PH_NONE_VALUE = 0;
    /**
     * <code>PH_LOW = 1;</code>
     */
    public static final int PH_LOW_VALUE = 1;
    /**
     * <code>PH_MIDDLE = 2;</code>
     */
    public static final int PH_MIDDLE_VALUE = 2;
    /**
     * <code>PH_HIGH = 4;</code>
     */
    public static final int PH_HIGH_VALUE = 4;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PhCalibrations valueOf(int value) {
      return forNumber(value);
    }

    public static PhCalibrations forNumber(int value) {
      switch (value) {
        case 0: return PH_NONE;
        case 1: return PH_LOW;
        case 2: return PH_MIDDLE;
        case 4: return PH_HIGH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PhCalibrations>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PhCalibrations> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PhCalibrations>() {
            @java.lang.Override
            public PhCalibrations findValueByNumber(int number) {
              return PhCalibrations.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return PhCalibrationsVerifier.INSTANCE;
    }

    private static final class PhCalibrationsVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new PhCalibrationsVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return PhCalibrations.forNumber(number) != null;
            }
          };

    private final int value;

    private PhCalibrations(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.PhCalibrations)
  }

  /**
   * Protobuf enum {@code fk_atlas.PhCalibrateCommand}
   */
  public enum PhCalibrateCommand
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CALIBRATE_PH_NONE = 0;</code>
     */
    CALIBRATE_PH_NONE(0),
    /**
     * <code>CALIBRATE_PH_CLEAR = 1;</code>
     */
    CALIBRATE_PH_CLEAR(1),
    /**
     * <code>CALIBRATE_PH_LOW = 2;</code>
     */
    CALIBRATE_PH_LOW(2),
    /**
     * <code>CALIBRATE_PH_MIDDLE = 3;</code>
     */
    CALIBRATE_PH_MIDDLE(3),
    /**
     * <code>CALIBRATE_PH_HIGH = 4;</code>
     */
    CALIBRATE_PH_HIGH(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CALIBRATE_PH_NONE = 0;</code>
     */
    public static final int CALIBRATE_PH_NONE_VALUE = 0;
    /**
     * <code>CALIBRATE_PH_CLEAR = 1;</code>
     */
    public static final int CALIBRATE_PH_CLEAR_VALUE = 1;
    /**
     * <code>CALIBRATE_PH_LOW = 2;</code>
     */
    public static final int CALIBRATE_PH_LOW_VALUE = 2;
    /**
     * <code>CALIBRATE_PH_MIDDLE = 3;</code>
     */
    public static final int CALIBRATE_PH_MIDDLE_VALUE = 3;
    /**
     * <code>CALIBRATE_PH_HIGH = 4;</code>
     */
    public static final int CALIBRATE_PH_HIGH_VALUE = 4;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PhCalibrateCommand valueOf(int value) {
      return forNumber(value);
    }

    public static PhCalibrateCommand forNumber(int value) {
      switch (value) {
        case 0: return CALIBRATE_PH_NONE;
        case 1: return CALIBRATE_PH_CLEAR;
        case 2: return CALIBRATE_PH_LOW;
        case 3: return CALIBRATE_PH_MIDDLE;
        case 4: return CALIBRATE_PH_HIGH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PhCalibrateCommand>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        PhCalibrateCommand> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PhCalibrateCommand>() {
            @java.lang.Override
            public PhCalibrateCommand findValueByNumber(int number) {
              return PhCalibrateCommand.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return PhCalibrateCommandVerifier.INSTANCE;
    }

    private static final class PhCalibrateCommandVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new PhCalibrateCommandVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return PhCalibrateCommand.forNumber(number) != null;
            }
          };

    private final int value;

    private PhCalibrateCommand(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.PhCalibrateCommand)
  }

  /**
   * Protobuf enum {@code fk_atlas.EcCalibrations}
   */
  public enum EcCalibrations
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>EC_NONE = 0;</code>
     */
    EC_NONE(0),
    /**
     * <code>EC_DRY = 1;</code>
     */
    EC_DRY(1),
    /**
     * <code>EC_SINGLE = 2;</code>
     */
    EC_SINGLE(2),
    /**
     * <code>EC_DUAL_LOW = 4;</code>
     */
    EC_DUAL_LOW(4),
    /**
     * <code>EC_DUAL_HIGH = 8;</code>
     */
    EC_DUAL_HIGH(8),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>EC_NONE = 0;</code>
     */
    public static final int EC_NONE_VALUE = 0;
    /**
     * <code>EC_DRY = 1;</code>
     */
    public static final int EC_DRY_VALUE = 1;
    /**
     * <code>EC_SINGLE = 2;</code>
     */
    public static final int EC_SINGLE_VALUE = 2;
    /**
     * <code>EC_DUAL_LOW = 4;</code>
     */
    public static final int EC_DUAL_LOW_VALUE = 4;
    /**
     * <code>EC_DUAL_HIGH = 8;</code>
     */
    public static final int EC_DUAL_HIGH_VALUE = 8;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EcCalibrations valueOf(int value) {
      return forNumber(value);
    }

    public static EcCalibrations forNumber(int value) {
      switch (value) {
        case 0: return EC_NONE;
        case 1: return EC_DRY;
        case 2: return EC_SINGLE;
        case 4: return EC_DUAL_LOW;
        case 8: return EC_DUAL_HIGH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EcCalibrations>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EcCalibrations> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EcCalibrations>() {
            @java.lang.Override
            public EcCalibrations findValueByNumber(int number) {
              return EcCalibrations.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return EcCalibrationsVerifier.INSTANCE;
    }

    private static final class EcCalibrationsVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new EcCalibrationsVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return EcCalibrations.forNumber(number) != null;
            }
          };

    private final int value;

    private EcCalibrations(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.EcCalibrations)
  }

  /**
   * Protobuf enum {@code fk_atlas.EcCalibrateCommand}
   */
  public enum EcCalibrateCommand
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CALIBRATE_EC_NONE = 0;</code>
     */
    CALIBRATE_EC_NONE(0),
    /**
     * <code>CALIBRATE_EC_CLEAR = 1;</code>
     */
    CALIBRATE_EC_CLEAR(1),
    /**
     * <code>CALIBRATE_EC_DRY = 2;</code>
     */
    CALIBRATE_EC_DRY(2),
    /**
     * <code>CALIBRATE_EC_SINGLE = 3;</code>
     */
    CALIBRATE_EC_SINGLE(3),
    /**
     * <code>CALIBRATE_EC_DUAL_LOW = 4;</code>
     */
    CALIBRATE_EC_DUAL_LOW(4),
    /**
     * <code>CALIBRATE_EC_DUAL_HIGH = 5;</code>
     */
    CALIBRATE_EC_DUAL_HIGH(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CALIBRATE_EC_NONE = 0;</code>
     */
    public static final int CALIBRATE_EC_NONE_VALUE = 0;
    /**
     * <code>CALIBRATE_EC_CLEAR = 1;</code>
     */
    public static final int CALIBRATE_EC_CLEAR_VALUE = 1;
    /**
     * <code>CALIBRATE_EC_DRY = 2;</code>
     */
    public static final int CALIBRATE_EC_DRY_VALUE = 2;
    /**
     * <code>CALIBRATE_EC_SINGLE = 3;</code>
     */
    public static final int CALIBRATE_EC_SINGLE_VALUE = 3;
    /**
     * <code>CALIBRATE_EC_DUAL_LOW = 4;</code>
     */
    public static final int CALIBRATE_EC_DUAL_LOW_VALUE = 4;
    /**
     * <code>CALIBRATE_EC_DUAL_HIGH = 5;</code>
     */
    public static final int CALIBRATE_EC_DUAL_HIGH_VALUE = 5;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EcCalibrateCommand valueOf(int value) {
      return forNumber(value);
    }

    public static EcCalibrateCommand forNumber(int value) {
      switch (value) {
        case 0: return CALIBRATE_EC_NONE;
        case 1: return CALIBRATE_EC_CLEAR;
        case 2: return CALIBRATE_EC_DRY;
        case 3: return CALIBRATE_EC_SINGLE;
        case 4: return CALIBRATE_EC_DUAL_LOW;
        case 5: return CALIBRATE_EC_DUAL_HIGH;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EcCalibrateCommand>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EcCalibrateCommand> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EcCalibrateCommand>() {
            @java.lang.Override
            public EcCalibrateCommand findValueByNumber(int number) {
              return EcCalibrateCommand.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return EcCalibrateCommandVerifier.INSTANCE;
    }

    private static final class EcCalibrateCommandVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new EcCalibrateCommandVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return EcCalibrateCommand.forNumber(number) != null;
            }
          };

    private final int value;

    private EcCalibrateCommand(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.EcCalibrateCommand)
  }

  /**
   * Protobuf enum {@code fk_atlas.OrpCalibrations}
   */
  public enum OrpCalibrations
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>ORP_NONE = 0;</code>
     */
    ORP_NONE(0),
    /**
     * <code>ORP_SINGLE = 1;</code>
     */
    ORP_SINGLE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ORP_NONE = 0;</code>
     */
    public static final int ORP_NONE_VALUE = 0;
    /**
     * <code>ORP_SINGLE = 1;</code>
     */
    public static final int ORP_SINGLE_VALUE = 1;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OrpCalibrations valueOf(int value) {
      return forNumber(value);
    }

    public static OrpCalibrations forNumber(int value) {
      switch (value) {
        case 0: return ORP_NONE;
        case 1: return ORP_SINGLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OrpCalibrations>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OrpCalibrations> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OrpCalibrations>() {
            @java.lang.Override
            public OrpCalibrations findValueByNumber(int number) {
              return OrpCalibrations.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return OrpCalibrationsVerifier.INSTANCE;
    }

    private static final class OrpCalibrationsVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new OrpCalibrationsVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return OrpCalibrations.forNumber(number) != null;
            }
          };

    private final int value;

    private OrpCalibrations(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.OrpCalibrations)
  }

  /**
   * Protobuf enum {@code fk_atlas.OrpCalibrateCommand}
   */
  public enum OrpCalibrateCommand
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>CALIBRATE_ORP_NONE = 0;</code>
     */
    CALIBRATE_ORP_NONE(0),
    /**
     * <code>CALIBRATE_ORP_SINGLE = 1;</code>
     */
    CALIBRATE_ORP_SINGLE(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>CALIBRATE_ORP_NONE = 0;</code>
     */
    public static final int CALIBRATE_ORP_NONE_VALUE = 0;
    /**
     * <code>CALIBRATE_ORP_SINGLE = 1;</code>
     */
    public static final int CALIBRATE_ORP_SINGLE_VALUE = 1;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OrpCalibrateCommand valueOf(int value) {
      return forNumber(value);
    }

    public static OrpCalibrateCommand forNumber(int value) {
      switch (value) {
        case 0: return CALIBRATE_ORP_NONE;
        case 1: return CALIBRATE_ORP_SINGLE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OrpCalibrateCommand>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        OrpCalibrateCommand> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OrpCalibrateCommand>() {
            @java.lang.Override
            public OrpCalibrateCommand findValueByNumber(int number) {
              return OrpCalibrateCommand.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return OrpCalibrateCommandVerifier.INSTANCE;
    }

    private static final class OrpCalibrateCommandVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new OrpCalibrateCommandVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return OrpCalibrateCommand.forNumber(number) != null;
            }
          };

    private final int value;

    private OrpCalibrateCommand(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.OrpCalibrateCommand)
  }

  /**
   * Protobuf enum {@code fk_atlas.ReplyType}
   */
  public enum ReplyType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>REPLY_NONE = 0;</code>
     */
    REPLY_NONE(0),
    /**
     * <code>REPLY_RETRY = 1;</code>
     */
    REPLY_RETRY(1),
    /**
     * <code>REPLY_ERROR = 2;</code>
     */
    REPLY_ERROR(2),
    /**
     * <code>REPLY_STATUS = 3;</code>
     */
    REPLY_STATUS(3),
    /**
     * <code>REPLY_COMMAND = 4;</code>
     */
    REPLY_COMMAND(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>REPLY_NONE = 0;</code>
     */
    public static final int REPLY_NONE_VALUE = 0;
    /**
     * <code>REPLY_RETRY = 1;</code>
     */
    public static final int REPLY_RETRY_VALUE = 1;
    /**
     * <code>REPLY_ERROR = 2;</code>
     */
    public static final int REPLY_ERROR_VALUE = 2;
    /**
     * <code>REPLY_STATUS = 3;</code>
     */
    public static final int REPLY_STATUS_VALUE = 3;
    /**
     * <code>REPLY_COMMAND = 4;</code>
     */
    public static final int REPLY_COMMAND_VALUE = 4;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReplyType valueOf(int value) {
      return forNumber(value);
    }

    public static ReplyType forNumber(int value) {
      switch (value) {
        case 0: return REPLY_NONE;
        case 1: return REPLY_RETRY;
        case 2: return REPLY_ERROR;
        case 3: return REPLY_STATUS;
        case 4: return REPLY_COMMAND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ReplyType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ReplyType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ReplyType>() {
            @java.lang.Override
            public ReplyType findValueByNumber(int number) {
              return ReplyType.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return ReplyTypeVerifier.INSTANCE;
    }

    private static final class ReplyTypeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ReplyTypeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return ReplyType.forNumber(number) != null;
            }
          };

    private final int value;

    private ReplyType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.ReplyType)
  }

  /**
   * Protobuf enum {@code fk_atlas.ErrorType}
   */
  public enum ErrorType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <code>GENERAL = 1;</code>
     */
    GENERAL(1),
    /**
     * <code>UNEXPECTED = 2;</code>
     */
    UNEXPECTED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <code>GENERAL = 1;</code>
     */
    public static final int GENERAL_VALUE = 1;
    /**
     * <code>UNEXPECTED = 2;</code>
     */
    public static final int UNEXPECTED_VALUE = 2;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ErrorType valueOf(int value) {
      return forNumber(value);
    }

    public static ErrorType forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return GENERAL;
        case 2: return UNEXPECTED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ErrorType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ErrorType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ErrorType>() {
            @java.lang.Override
            public ErrorType findValueByNumber(int number) {
              return ErrorType.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return ErrorTypeVerifier.INSTANCE;
    }

    private static final class ErrorTypeVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new ErrorTypeVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return ErrorType.forNumber(number) != null;
            }
          };

    private final int value;

    private ErrorType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fk_atlas.ErrorType)
  }

  public interface AtlasCalibrationCommandOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fk_atlas.AtlasCalibrationCommand)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
     * @return The enum numeric value on the wire for operation.
     */
    int getOperationValue();
    /**
     * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
     * @return The operation.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.CalibrationOperation getOperation();

    /**
     * <code>.fk_atlas.TempCalibrations temp = 2;</code>
     * @return The enum numeric value on the wire for temp.
     */
    int getTempValue();
    /**
     * <code>.fk_atlas.TempCalibrations temp = 2;</code>
     * @return The temp.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.TempCalibrations getTemp();

    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
     * @return The enum numeric value on the wire for dissolvedOxygen.
     */
    int getDissolvedOxygenValue();
    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
     * @return The dissolvedOxygen.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.DoCalibrations getDissolvedOxygen();

    /**
     * <code>.fk_atlas.PhCalibrations ph = 4;</code>
     * @return The enum numeric value on the wire for ph.
     */
    int getPhValue();
    /**
     * <code>.fk_atlas.PhCalibrations ph = 4;</code>
     * @return The ph.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.PhCalibrations getPh();

    /**
     * <code>.fk_atlas.EcCalibrations ec = 5;</code>
     * @return The enum numeric value on the wire for ec.
     */
    int getEcValue();
    /**
     * <code>.fk_atlas.EcCalibrations ec = 5;</code>
     * @return The ec.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.EcCalibrations getEc();

    /**
     * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
     * @return The enum numeric value on the wire for orp.
     */
    int getOrpValue();
    /**
     * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
     * @return The orp.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.OrpCalibrations getOrp();

    /**
     * <code>uint32 which = 8;</code>
     * @return The which.
     */
    int getWhich();

    /**
     * <code>float value = 7;</code>
     * @return The value.
     */
    float getValue();

    /**
     * <code>bytes configuration = 9;</code>
     * @return The configuration.
     */
    com.google.protobuf.ByteString getConfiguration();
  }
  /**
   * Protobuf type {@code fk_atlas.AtlasCalibrationCommand}
   */
  public  static final class AtlasCalibrationCommand extends
      com.google.protobuf.GeneratedMessageLite<
          AtlasCalibrationCommand, AtlasCalibrationCommand.Builder> implements
      // @@protoc_insertion_point(message_implements:fk_atlas.AtlasCalibrationCommand)
      AtlasCalibrationCommandOrBuilder {
    private AtlasCalibrationCommand() {
      configuration_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int OPERATION_FIELD_NUMBER = 1;
    private int operation_;
    /**
     * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
     * @return The enum numeric value on the wire for operation.
     */
    @java.lang.Override
    public int getOperationValue() {
      return operation_;
    }
    /**
     * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
     * @return The operation.
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.CalibrationOperation getOperation() {
      org.conservify.fieldkit.atlas.pb.FkAtlas.CalibrationOperation result = org.conservify.fieldkit.atlas.pb.FkAtlas.CalibrationOperation.forNumber(operation_);
      return result == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.CalibrationOperation.UNRECOGNIZED : result;
    }
    /**
     * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
     * @param value The enum numeric value on the wire for operation to set.
     */
    private void setOperationValue(int value) {
        operation_ = value;
    }
    /**
     * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
     * @param value The operation to set.
     */
    private void setOperation(org.conservify.fieldkit.atlas.pb.FkAtlas.CalibrationOperation value) {
      operation_ = value.getNumber();
      
    }
    /**
     * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
     */
    private void clearOperation() {
      
      operation_ = 0;
    }

    public static final int TEMP_FIELD_NUMBER = 2;
    private int temp_;
    /**
     * <code>.fk_atlas.TempCalibrations temp = 2;</code>
     * @return The enum numeric value on the wire for temp.
     */
    @java.lang.Override
    public int getTempValue() {
      return temp_;
    }
    /**
     * <code>.fk_atlas.TempCalibrations temp = 2;</code>
     * @return The temp.
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.TempCalibrations getTemp() {
      org.conservify.fieldkit.atlas.pb.FkAtlas.TempCalibrations result = org.conservify.fieldkit.atlas.pb.FkAtlas.TempCalibrations.forNumber(temp_);
      return result == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.TempCalibrations.UNRECOGNIZED : result;
    }
    /**
     * <code>.fk_atlas.TempCalibrations temp = 2;</code>
     * @param value The enum numeric value on the wire for temp to set.
     */
    private void setTempValue(int value) {
        temp_ = value;
    }
    /**
     * <code>.fk_atlas.TempCalibrations temp = 2;</code>
     * @param value The temp to set.
     */
    private void setTemp(org.conservify.fieldkit.atlas.pb.FkAtlas.TempCalibrations value) {
      temp_ = value.getNumber();
      
    }
    /**
     * <code>.fk_atlas.TempCalibrations temp = 2;</code>
     */
    private void clearTemp() {
      
      temp_ = 0;
    }

    public static final int DISSOLVEDOXYGEN_FIELD_NUMBER = 3;
    private int dissolvedOxygen_;
    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
     * @return The enum numeric value on the wire for dissolvedOxygen.
     */
    @java.lang.Override
    public int getDissolvedOxygenValue() {
      return dissolvedOxygen_;
    }
    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
     * @return The dissolvedOxygen.
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.DoCalibrations getDissolvedOxygen() {
      org.conservify.fieldkit.atlas.pb.FkAtlas.DoCalibrations result = org.conservify.fieldkit.atlas.pb.FkAtlas.DoCalibrations.forNumber(dissolvedOxygen_);
      return result == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.DoCalibrations.UNRECOGNIZED : result;
    }
    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
     * @param value The enum numeric value on the wire for dissolvedOxygen to set.
     */
    private void setDissolvedOxygenValue(int value) {
        dissolvedOxygen_ = value;
    }
    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
     * @param value The dissolvedOxygen to set.
     */
    private void setDissolvedOxygen(org.conservify.fieldkit.atlas.pb.FkAtlas.DoCalibrations value) {
      dissolvedOxygen_ = value.getNumber();
      
    }
    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
     */
    private void clearDissolvedOxygen() {
      
      dissolvedOxygen_ = 0;
    }

    public static final int PH_FIELD_NUMBER = 4;
    private int ph_;
    /**
     * <code>.fk_atlas.PhCalibrations ph = 4;</code>
     * @return The enum numeric value on the wire for ph.
     */
    @java.lang.Override
    public int getPhValue() {
      return ph_;
    }
    /**
     * <code>.fk_atlas.PhCalibrations ph = 4;</code>
     * @return The ph.
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.PhCalibrations getPh() {
      org.conservify.fieldkit.atlas.pb.FkAtlas.PhCalibrations result = org.conservify.fieldkit.atlas.pb.FkAtlas.PhCalibrations.forNumber(ph_);
      return result == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.PhCalibrations.UNRECOGNIZED : result;
    }
    /**
     * <code>.fk_atlas.PhCalibrations ph = 4;</code>
     * @param value The enum numeric value on the wire for ph to set.
     */
    private void setPhValue(int value) {
        ph_ = value;
    }
    /**
     * <code>.fk_atlas.PhCalibrations ph = 4;</code>
     * @param value The ph to set.
     */
    private void setPh(org.conservify.fieldkit.atlas.pb.FkAtlas.PhCalibrations value) {
      ph_ = value.getNumber();
      
    }
    /**
     * <code>.fk_atlas.PhCalibrations ph = 4;</code>
     */
    private void clearPh() {
      
      ph_ = 0;
    }

    public static final int EC_FIELD_NUMBER = 5;
    private int ec_;
    /**
     * <code>.fk_atlas.EcCalibrations ec = 5;</code>
     * @return The enum numeric value on the wire for ec.
     */
    @java.lang.Override
    public int getEcValue() {
      return ec_;
    }
    /**
     * <code>.fk_atlas.EcCalibrations ec = 5;</code>
     * @return The ec.
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.EcCalibrations getEc() {
      org.conservify.fieldkit.atlas.pb.FkAtlas.EcCalibrations result = org.conservify.fieldkit.atlas.pb.FkAtlas.EcCalibrations.forNumber(ec_);
      return result == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.EcCalibrations.UNRECOGNIZED : result;
    }
    /**
     * <code>.fk_atlas.EcCalibrations ec = 5;</code>
     * @param value The enum numeric value on the wire for ec to set.
     */
    private void setEcValue(int value) {
        ec_ = value;
    }
    /**
     * <code>.fk_atlas.EcCalibrations ec = 5;</code>
     * @param value The ec to set.
     */
    private void setEc(org.conservify.fieldkit.atlas.pb.FkAtlas.EcCalibrations value) {
      ec_ = value.getNumber();
      
    }
    /**
     * <code>.fk_atlas.EcCalibrations ec = 5;</code>
     */
    private void clearEc() {
      
      ec_ = 0;
    }

    public static final int ORP_FIELD_NUMBER = 6;
    private int orp_;
    /**
     * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
     * @return The enum numeric value on the wire for orp.
     */
    @java.lang.Override
    public int getOrpValue() {
      return orp_;
    }
    /**
     * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
     * @return The orp.
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.OrpCalibrations getOrp() {
      org.conservify.fieldkit.atlas.pb.FkAtlas.OrpCalibrations result = org.conservify.fieldkit.atlas.pb.FkAtlas.OrpCalibrations.forNumber(orp_);
      return result == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.OrpCalibrations.UNRECOGNIZED : result;
    }
    /**
     * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
     * @param value The enum numeric value on the wire for orp to set.
     */
    private void setOrpValue(int value) {
        orp_ = value;
    }
    /**
     * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
     * @param value The orp to set.
     */
    private void setOrp(org.conservify.fieldkit.atlas.pb.FkAtlas.OrpCalibrations value) {
      orp_ = value.getNumber();
      
    }
    /**
     * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
     */
    private void clearOrp() {
      
      orp_ = 0;
    }

    public static final int WHICH_FIELD_NUMBER = 8;
    private int which_;
    /**
     * <code>uint32 which = 8;</code>
     * @return The which.
     */
    @java.lang.Override
    public int getWhich() {
      return which_;
    }
    /**
     * <code>uint32 which = 8;</code>
     * @param value The which to set.
     */
    private void setWhich(int value) {
      
      which_ = value;
    }
    /**
     * <code>uint32 which = 8;</code>
     */
    private void clearWhich() {
      
      which_ = 0;
    }

    public static final int VALUE_FIELD_NUMBER = 7;
    private float value_;
    /**
     * <code>float value = 7;</code>
     * @return The value.
     */
    @java.lang.Override
    public float getValue() {
      return value_;
    }
    /**
     * <code>float value = 7;</code>
     * @param value The value to set.
     */
    private void setValue(float value) {
      
      value_ = value;
    }
    /**
     * <code>float value = 7;</code>
     */
    private void clearValue() {
      
      value_ = 0F;
    }

    public static final int CONFIGURATION_FIELD_NUMBER = 9;
    private com.google.protobuf.ByteString configuration_;
    /**
     * <code>bytes configuration = 9;</code>
     * @return The configuration.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getConfiguration() {
      return configuration_;
    }
    /**
     * <code>bytes configuration = 9;</code>
     * @param value The configuration to set.
     */
    private void setConfiguration(com.google.protobuf.ByteString value) {
      value.getClass();
  
      configuration_ = value;
    }
    /**
     * <code>bytes configuration = 9;</code>
     */
    private void clearConfiguration() {
      
      configuration_ = getDefaultInstance().getConfiguration();
    }

    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code fk_atlas.AtlasCalibrationCommand}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand, Builder> implements
        // @@protoc_insertion_point(builder_implements:fk_atlas.AtlasCalibrationCommand)
        org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommandOrBuilder {
      // Construct using org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
       * @return The enum numeric value on the wire for operation.
       */
      @java.lang.Override
      public int getOperationValue() {
        return instance.getOperationValue();
      }
      /**
       * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
       * @param value The operation to set.
       * @return This builder for chaining.
       */
      public Builder setOperationValue(int value) {
        copyOnWrite();
        instance.setOperationValue(value);
        return this;
      }
      /**
       * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
       * @return The operation.
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.CalibrationOperation getOperation() {
        return instance.getOperation();
      }
      /**
       * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
       * @param value The enum numeric value on the wire for operation to set.
       * @return This builder for chaining.
       */
      public Builder setOperation(org.conservify.fieldkit.atlas.pb.FkAtlas.CalibrationOperation value) {
        copyOnWrite();
        instance.setOperation(value);
        return this;
      }
      /**
       * <code>.fk_atlas.CalibrationOperation operation = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOperation() {
        copyOnWrite();
        instance.clearOperation();
        return this;
      }

      /**
       * <code>.fk_atlas.TempCalibrations temp = 2;</code>
       * @return The enum numeric value on the wire for temp.
       */
      @java.lang.Override
      public int getTempValue() {
        return instance.getTempValue();
      }
      /**
       * <code>.fk_atlas.TempCalibrations temp = 2;</code>
       * @param value The temp to set.
       * @return This builder for chaining.
       */
      public Builder setTempValue(int value) {
        copyOnWrite();
        instance.setTempValue(value);
        return this;
      }
      /**
       * <code>.fk_atlas.TempCalibrations temp = 2;</code>
       * @return The temp.
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.TempCalibrations getTemp() {
        return instance.getTemp();
      }
      /**
       * <code>.fk_atlas.TempCalibrations temp = 2;</code>
       * @param value The enum numeric value on the wire for temp to set.
       * @return This builder for chaining.
       */
      public Builder setTemp(org.conservify.fieldkit.atlas.pb.FkAtlas.TempCalibrations value) {
        copyOnWrite();
        instance.setTemp(value);
        return this;
      }
      /**
       * <code>.fk_atlas.TempCalibrations temp = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemp() {
        copyOnWrite();
        instance.clearTemp();
        return this;
      }

      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
       * @return The enum numeric value on the wire for dissolvedOxygen.
       */
      @java.lang.Override
      public int getDissolvedOxygenValue() {
        return instance.getDissolvedOxygenValue();
      }
      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
       * @param value The dissolvedOxygen to set.
       * @return This builder for chaining.
       */
      public Builder setDissolvedOxygenValue(int value) {
        copyOnWrite();
        instance.setDissolvedOxygenValue(value);
        return this;
      }
      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
       * @return The dissolvedOxygen.
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.DoCalibrations getDissolvedOxygen() {
        return instance.getDissolvedOxygen();
      }
      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
       * @param value The enum numeric value on the wire for dissolvedOxygen to set.
       * @return This builder for chaining.
       */
      public Builder setDissolvedOxygen(org.conservify.fieldkit.atlas.pb.FkAtlas.DoCalibrations value) {
        copyOnWrite();
        instance.setDissolvedOxygen(value);
        return this;
      }
      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDissolvedOxygen() {
        copyOnWrite();
        instance.clearDissolvedOxygen();
        return this;
      }

      /**
       * <code>.fk_atlas.PhCalibrations ph = 4;</code>
       * @return The enum numeric value on the wire for ph.
       */
      @java.lang.Override
      public int getPhValue() {
        return instance.getPhValue();
      }
      /**
       * <code>.fk_atlas.PhCalibrations ph = 4;</code>
       * @param value The ph to set.
       * @return This builder for chaining.
       */
      public Builder setPhValue(int value) {
        copyOnWrite();
        instance.setPhValue(value);
        return this;
      }
      /**
       * <code>.fk_atlas.PhCalibrations ph = 4;</code>
       * @return The ph.
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.PhCalibrations getPh() {
        return instance.getPh();
      }
      /**
       * <code>.fk_atlas.PhCalibrations ph = 4;</code>
       * @param value The enum numeric value on the wire for ph to set.
       * @return This builder for chaining.
       */
      public Builder setPh(org.conservify.fieldkit.atlas.pb.FkAtlas.PhCalibrations value) {
        copyOnWrite();
        instance.setPh(value);
        return this;
      }
      /**
       * <code>.fk_atlas.PhCalibrations ph = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPh() {
        copyOnWrite();
        instance.clearPh();
        return this;
      }

      /**
       * <code>.fk_atlas.EcCalibrations ec = 5;</code>
       * @return The enum numeric value on the wire for ec.
       */
      @java.lang.Override
      public int getEcValue() {
        return instance.getEcValue();
      }
      /**
       * <code>.fk_atlas.EcCalibrations ec = 5;</code>
       * @param value The ec to set.
       * @return This builder for chaining.
       */
      public Builder setEcValue(int value) {
        copyOnWrite();
        instance.setEcValue(value);
        return this;
      }
      /**
       * <code>.fk_atlas.EcCalibrations ec = 5;</code>
       * @return The ec.
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.EcCalibrations getEc() {
        return instance.getEc();
      }
      /**
       * <code>.fk_atlas.EcCalibrations ec = 5;</code>
       * @param value The enum numeric value on the wire for ec to set.
       * @return This builder for chaining.
       */
      public Builder setEc(org.conservify.fieldkit.atlas.pb.FkAtlas.EcCalibrations value) {
        copyOnWrite();
        instance.setEc(value);
        return this;
      }
      /**
       * <code>.fk_atlas.EcCalibrations ec = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearEc() {
        copyOnWrite();
        instance.clearEc();
        return this;
      }

      /**
       * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
       * @return The enum numeric value on the wire for orp.
       */
      @java.lang.Override
      public int getOrpValue() {
        return instance.getOrpValue();
      }
      /**
       * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
       * @param value The orp to set.
       * @return This builder for chaining.
       */
      public Builder setOrpValue(int value) {
        copyOnWrite();
        instance.setOrpValue(value);
        return this;
      }
      /**
       * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
       * @return The orp.
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.OrpCalibrations getOrp() {
        return instance.getOrp();
      }
      /**
       * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
       * @param value The enum numeric value on the wire for orp to set.
       * @return This builder for chaining.
       */
      public Builder setOrp(org.conservify.fieldkit.atlas.pb.FkAtlas.OrpCalibrations value) {
        copyOnWrite();
        instance.setOrp(value);
        return this;
      }
      /**
       * <code>.fk_atlas.OrpCalibrations orp = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearOrp() {
        copyOnWrite();
        instance.clearOrp();
        return this;
      }

      /**
       * <code>uint32 which = 8;</code>
       * @return The which.
       */
      @java.lang.Override
      public int getWhich() {
        return instance.getWhich();
      }
      /**
       * <code>uint32 which = 8;</code>
       * @param value The which to set.
       * @return This builder for chaining.
       */
      public Builder setWhich(int value) {
        copyOnWrite();
        instance.setWhich(value);
        return this;
      }
      /**
       * <code>uint32 which = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearWhich() {
        copyOnWrite();
        instance.clearWhich();
        return this;
      }

      /**
       * <code>float value = 7;</code>
       * @return The value.
       */
      @java.lang.Override
      public float getValue() {
        return instance.getValue();
      }
      /**
       * <code>float value = 7;</code>
       * @param value The value to set.
       * @return This builder for chaining.
       */
      public Builder setValue(float value) {
        copyOnWrite();
        instance.setValue(value);
        return this;
      }
      /**
       * <code>float value = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearValue() {
        copyOnWrite();
        instance.clearValue();
        return this;
      }

      /**
       * <code>bytes configuration = 9;</code>
       * @return The configuration.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getConfiguration() {
        return instance.getConfiguration();
      }
      /**
       * <code>bytes configuration = 9;</code>
       * @param value The configuration to set.
       * @return This builder for chaining.
       */
      public Builder setConfiguration(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setConfiguration(value);
        return this;
      }
      /**
       * <code>bytes configuration = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfiguration() {
        copyOnWrite();
        instance.clearConfiguration();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fk_atlas.AtlasCalibrationCommand)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "operation_",
              "temp_",
              "dissolvedOxygen_",
              "ph_",
              "ec_",
              "orp_",
              "value_",
              "which_",
              "configuration_",
            };
            java.lang.String info =
                "\u0000\t\u0000\u0000\u0001\t\t\u0000\u0000\u0000\u0001\f\u0002\f\u0003\f\u0004\f" +
                "\u0005\f\u0006\f\u0007\u0001\b\u000b\t\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand> parser = PARSER;
          if (parser == null) {
            synchronized (org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fk_atlas.AtlasCalibrationCommand)
    private static final org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand DEFAULT_INSTANCE;
    static {
      AtlasCalibrationCommand defaultInstance = new AtlasCalibrationCommand();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        AtlasCalibrationCommand.class, defaultInstance);
    }

    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AtlasCalibrationCommand> PARSER;

    public static com.google.protobuf.Parser<AtlasCalibrationCommand> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TwoWireQueryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fk_atlas.TwoWireQuery)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>uint32 read = 1;</code>
     * @return The read.
     */
    int getRead();

    /**
     * <code>uint32 write = 2;</code>
     * @return The write.
     */
    int getWrite();

    /**
     * <code>bytes data = 3;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code fk_atlas.TwoWireQuery}
   */
  public  static final class TwoWireQuery extends
      com.google.protobuf.GeneratedMessageLite<
          TwoWireQuery, TwoWireQuery.Builder> implements
      // @@protoc_insertion_point(message_implements:fk_atlas.TwoWireQuery)
      TwoWireQueryOrBuilder {
    private TwoWireQuery() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int READ_FIELD_NUMBER = 1;
    private int read_;
    /**
     * <code>uint32 read = 1;</code>
     * @return The read.
     */
    @java.lang.Override
    public int getRead() {
      return read_;
    }
    /**
     * <code>uint32 read = 1;</code>
     * @param value The read to set.
     */
    private void setRead(int value) {
      
      read_ = value;
    }
    /**
     * <code>uint32 read = 1;</code>
     */
    private void clearRead() {
      
      read_ = 0;
    }

    public static final int WRITE_FIELD_NUMBER = 2;
    private int write_;
    /**
     * <code>uint32 write = 2;</code>
     * @return The write.
     */
    @java.lang.Override
    public int getWrite() {
      return write_;
    }
    /**
     * <code>uint32 write = 2;</code>
     * @param value The write to set.
     */
    private void setWrite(int value) {
      
      write_ = value;
    }
    /**
     * <code>uint32 write = 2;</code>
     */
    private void clearWrite() {
      
      write_ = 0;
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 3;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>bytes data = 3;</code>
     * @param value The data to set.
     */
    private void setData(com.google.protobuf.ByteString value) {
      value.getClass();
  
      data_ = value;
    }
    /**
     * <code>bytes data = 3;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code fk_atlas.TwoWireQuery}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery, Builder> implements
        // @@protoc_insertion_point(builder_implements:fk_atlas.TwoWireQuery)
        org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQueryOrBuilder {
      // Construct using org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>uint32 read = 1;</code>
       * @return The read.
       */
      @java.lang.Override
      public int getRead() {
        return instance.getRead();
      }
      /**
       * <code>uint32 read = 1;</code>
       * @param value The read to set.
       * @return This builder for chaining.
       */
      public Builder setRead(int value) {
        copyOnWrite();
        instance.setRead(value);
        return this;
      }
      /**
       * <code>uint32 read = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRead() {
        copyOnWrite();
        instance.clearRead();
        return this;
      }

      /**
       * <code>uint32 write = 2;</code>
       * @return The write.
       */
      @java.lang.Override
      public int getWrite() {
        return instance.getWrite();
      }
      /**
       * <code>uint32 write = 2;</code>
       * @param value The write to set.
       * @return This builder for chaining.
       */
      public Builder setWrite(int value) {
        copyOnWrite();
        instance.setWrite(value);
        return this;
      }
      /**
       * <code>uint32 write = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearWrite() {
        copyOnWrite();
        instance.clearWrite();
        return this;
      }

      /**
       * <code>bytes data = 3;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <code>bytes data = 3;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>bytes data = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fk_atlas.TwoWireQuery)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "read_",
              "write_",
              "data_",
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u000b\u0002\u000b" +
                "\u0003\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery> parser = PARSER;
          if (parser == null) {
            synchronized (org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fk_atlas.TwoWireQuery)
    private static final org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery DEFAULT_INSTANCE;
    static {
      TwoWireQuery defaultInstance = new TwoWireQuery();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TwoWireQuery.class, defaultInstance);
    }

    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TwoWireQuery> PARSER;

    public static com.google.protobuf.Parser<TwoWireQuery> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface CompensationsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fk_atlas.Compensations)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>float temperature = 1;</code>
     * @return The temperature.
     */
    float getTemperature();
  }
  /**
   * Protobuf type {@code fk_atlas.Compensations}
   */
  public  static final class Compensations extends
      com.google.protobuf.GeneratedMessageLite<
          Compensations, Compensations.Builder> implements
      // @@protoc_insertion_point(message_implements:fk_atlas.Compensations)
      CompensationsOrBuilder {
    private Compensations() {
    }
    public static final int TEMPERATURE_FIELD_NUMBER = 1;
    private float temperature_;
    /**
     * <code>float temperature = 1;</code>
     * @return The temperature.
     */
    @java.lang.Override
    public float getTemperature() {
      return temperature_;
    }
    /**
     * <code>float temperature = 1;</code>
     * @param value The temperature to set.
     */
    private void setTemperature(float value) {
      
      temperature_ = value;
    }
    /**
     * <code>float temperature = 1;</code>
     */
    private void clearTemperature() {
      
      temperature_ = 0F;
    }

    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code fk_atlas.Compensations}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations, Builder> implements
        // @@protoc_insertion_point(builder_implements:fk_atlas.Compensations)
        org.conservify.fieldkit.atlas.pb.FkAtlas.CompensationsOrBuilder {
      // Construct using org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>float temperature = 1;</code>
       * @return The temperature.
       */
      @java.lang.Override
      public float getTemperature() {
        return instance.getTemperature();
      }
      /**
       * <code>float temperature = 1;</code>
       * @param value The temperature to set.
       * @return This builder for chaining.
       */
      public Builder setTemperature(float value) {
        copyOnWrite();
        instance.setTemperature(value);
        return this;
      }
      /**
       * <code>float temperature = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemperature() {
        copyOnWrite();
        instance.clearTemperature();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fk_atlas.Compensations)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "temperature_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\u0001";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations> parser = PARSER;
          if (parser == null) {
            synchronized (org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fk_atlas.Compensations)
    private static final org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations DEFAULT_INSTANCE;
    static {
      Compensations defaultInstance = new Compensations();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Compensations.class, defaultInstance);
    }

    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Compensations> PARSER;

    public static com.google.protobuf.Parser<Compensations> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface WireAtlasQueryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fk_atlas.WireAtlasQuery)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.fk_atlas.QueryType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.fk_atlas.QueryType type = 1;</code>
     * @return The type.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.QueryType getType();

    /**
     * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
     * @return Whether the calibration field is set.
     */
    boolean hasCalibration();
    /**
     * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
     * @return The calibration.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand getCalibration();

    /**
     * <code>.fk_atlas.Compensations compensations = 3;</code>
     * @return Whether the compensations field is set.
     */
    boolean hasCompensations();
    /**
     * <code>.fk_atlas.Compensations compensations = 3;</code>
     * @return The compensations.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations getCompensations();

    /**
     * <code>.fk_atlas.TwoWireQuery wire = 4;</code>
     * @return Whether the wire field is set.
     */
    boolean hasWire();
    /**
     * <code>.fk_atlas.TwoWireQuery wire = 4;</code>
     * @return The wire.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery getWire();
  }
  /**
   * Protobuf type {@code fk_atlas.WireAtlasQuery}
   */
  public  static final class WireAtlasQuery extends
      com.google.protobuf.GeneratedMessageLite<
          WireAtlasQuery, WireAtlasQuery.Builder> implements
      // @@protoc_insertion_point(message_implements:fk_atlas.WireAtlasQuery)
      WireAtlasQueryOrBuilder {
    private WireAtlasQuery() {
    }
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.fk_atlas.QueryType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.fk_atlas.QueryType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.QueryType getType() {
      org.conservify.fieldkit.atlas.pb.FkAtlas.QueryType result = org.conservify.fieldkit.atlas.pb.FkAtlas.QueryType.forNumber(type_);
      return result == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.QueryType.UNRECOGNIZED : result;
    }
    /**
     * <code>.fk_atlas.QueryType type = 1;</code>
     * @param value The enum numeric value on the wire for type to set.
     */
    private void setTypeValue(int value) {
        type_ = value;
    }
    /**
     * <code>.fk_atlas.QueryType type = 1;</code>
     * @param value The type to set.
     */
    private void setType(org.conservify.fieldkit.atlas.pb.FkAtlas.QueryType value) {
      type_ = value.getNumber();
      
    }
    /**
     * <code>.fk_atlas.QueryType type = 1;</code>
     */
    private void clearType() {
      
      type_ = 0;
    }

    public static final int CALIBRATION_FIELD_NUMBER = 2;
    private org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand calibration_;
    /**
     * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
     */
    @java.lang.Override
    public boolean hasCalibration() {
      return calibration_ != null;
    }
    /**
     * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand getCalibration() {
      return calibration_ == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.getDefaultInstance() : calibration_;
    }
    /**
     * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
     */
    private void setCalibration(org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand value) {
      value.getClass();
  calibration_ = value;
      
      }
    /**
     * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeCalibration(org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand value) {
      value.getClass();
  if (calibration_ != null &&
          calibration_ != org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.getDefaultInstance()) {
        calibration_ =
          org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.newBuilder(calibration_).mergeFrom(value).buildPartial();
      } else {
        calibration_ = value;
      }
      
    }
    /**
     * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
     */
    private void clearCalibration() {  calibration_ = null;
      
    }

    public static final int COMPENSATIONS_FIELD_NUMBER = 3;
    private org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations compensations_;
    /**
     * <code>.fk_atlas.Compensations compensations = 3;</code>
     */
    @java.lang.Override
    public boolean hasCompensations() {
      return compensations_ != null;
    }
    /**
     * <code>.fk_atlas.Compensations compensations = 3;</code>
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations getCompensations() {
      return compensations_ == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations.getDefaultInstance() : compensations_;
    }
    /**
     * <code>.fk_atlas.Compensations compensations = 3;</code>
     */
    private void setCompensations(org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations value) {
      value.getClass();
  compensations_ = value;
      
      }
    /**
     * <code>.fk_atlas.Compensations compensations = 3;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeCompensations(org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations value) {
      value.getClass();
  if (compensations_ != null &&
          compensations_ != org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations.getDefaultInstance()) {
        compensations_ =
          org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations.newBuilder(compensations_).mergeFrom(value).buildPartial();
      } else {
        compensations_ = value;
      }
      
    }
    /**
     * <code>.fk_atlas.Compensations compensations = 3;</code>
     */
    private void clearCompensations() {  compensations_ = null;
      
    }

    public static final int WIRE_FIELD_NUMBER = 4;
    private org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery wire_;
    /**
     * <code>.fk_atlas.TwoWireQuery wire = 4;</code>
     */
    @java.lang.Override
    public boolean hasWire() {
      return wire_ != null;
    }
    /**
     * <code>.fk_atlas.TwoWireQuery wire = 4;</code>
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery getWire() {
      return wire_ == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.getDefaultInstance() : wire_;
    }
    /**
     * <code>.fk_atlas.TwoWireQuery wire = 4;</code>
     */
    private void setWire(org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery value) {
      value.getClass();
  wire_ = value;
      
      }
    /**
     * <code>.fk_atlas.TwoWireQuery wire = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeWire(org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery value) {
      value.getClass();
  if (wire_ != null &&
          wire_ != org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.getDefaultInstance()) {
        wire_ =
          org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.newBuilder(wire_).mergeFrom(value).buildPartial();
      } else {
        wire_ = value;
      }
      
    }
    /**
     * <code>.fk_atlas.TwoWireQuery wire = 4;</code>
     */
    private void clearWire() {  wire_ = null;
      
    }

    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code fk_atlas.WireAtlasQuery}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery, Builder> implements
        // @@protoc_insertion_point(builder_implements:fk_atlas.WireAtlasQuery)
        org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQueryOrBuilder {
      // Construct using org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.fk_atlas.QueryType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override
      public int getTypeValue() {
        return instance.getTypeValue();
      }
      /**
       * <code>.fk_atlas.QueryType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        copyOnWrite();
        instance.setTypeValue(value);
        return this;
      }
      /**
       * <code>.fk_atlas.QueryType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.QueryType getType() {
        return instance.getType();
      }
      /**
       * <code>.fk_atlas.QueryType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setType(org.conservify.fieldkit.atlas.pb.FkAtlas.QueryType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>.fk_atlas.QueryType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
       */
      @java.lang.Override
      public boolean hasCalibration() {
        return instance.hasCalibration();
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand getCalibration() {
        return instance.getCalibration();
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
       */
      public Builder setCalibration(org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand value) {
        copyOnWrite();
        instance.setCalibration(value);
        return this;
        }
      /**
       * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
       */
      public Builder setCalibration(
          org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand.Builder builderForValue) {
        copyOnWrite();
        instance.setCalibration(builderForValue.build());
        return this;
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
       */
      public Builder mergeCalibration(org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationCommand value) {
        copyOnWrite();
        instance.mergeCalibration(value);
        return this;
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationCommand calibration = 2;</code>
       */
      public Builder clearCalibration() {  copyOnWrite();
        instance.clearCalibration();
        return this;
      }

      /**
       * <code>.fk_atlas.Compensations compensations = 3;</code>
       */
      @java.lang.Override
      public boolean hasCompensations() {
        return instance.hasCompensations();
      }
      /**
       * <code>.fk_atlas.Compensations compensations = 3;</code>
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations getCompensations() {
        return instance.getCompensations();
      }
      /**
       * <code>.fk_atlas.Compensations compensations = 3;</code>
       */
      public Builder setCompensations(org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations value) {
        copyOnWrite();
        instance.setCompensations(value);
        return this;
        }
      /**
       * <code>.fk_atlas.Compensations compensations = 3;</code>
       */
      public Builder setCompensations(
          org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations.Builder builderForValue) {
        copyOnWrite();
        instance.setCompensations(builderForValue.build());
        return this;
      }
      /**
       * <code>.fk_atlas.Compensations compensations = 3;</code>
       */
      public Builder mergeCompensations(org.conservify.fieldkit.atlas.pb.FkAtlas.Compensations value) {
        copyOnWrite();
        instance.mergeCompensations(value);
        return this;
      }
      /**
       * <code>.fk_atlas.Compensations compensations = 3;</code>
       */
      public Builder clearCompensations() {  copyOnWrite();
        instance.clearCompensations();
        return this;
      }

      /**
       * <code>.fk_atlas.TwoWireQuery wire = 4;</code>
       */
      @java.lang.Override
      public boolean hasWire() {
        return instance.hasWire();
      }
      /**
       * <code>.fk_atlas.TwoWireQuery wire = 4;</code>
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery getWire() {
        return instance.getWire();
      }
      /**
       * <code>.fk_atlas.TwoWireQuery wire = 4;</code>
       */
      public Builder setWire(org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery value) {
        copyOnWrite();
        instance.setWire(value);
        return this;
        }
      /**
       * <code>.fk_atlas.TwoWireQuery wire = 4;</code>
       */
      public Builder setWire(
          org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery.Builder builderForValue) {
        copyOnWrite();
        instance.setWire(builderForValue.build());
        return this;
      }
      /**
       * <code>.fk_atlas.TwoWireQuery wire = 4;</code>
       */
      public Builder mergeWire(org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireQuery value) {
        copyOnWrite();
        instance.mergeWire(value);
        return this;
      }
      /**
       * <code>.fk_atlas.TwoWireQuery wire = 4;</code>
       */
      public Builder clearWire() {  copyOnWrite();
        instance.clearWire();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fk_atlas.WireAtlasQuery)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "type_",
              "calibration_",
              "compensations_",
              "wire_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\f\u0002\t\u0003" +
                "\t\u0004\t";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery> parser = PARSER;
          if (parser == null) {
            synchronized (org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fk_atlas.WireAtlasQuery)
    private static final org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery DEFAULT_INSTANCE;
    static {
      WireAtlasQuery defaultInstance = new WireAtlasQuery();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        WireAtlasQuery.class, defaultInstance);
    }

    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasQuery getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<WireAtlasQuery> PARSER;

    public static com.google.protobuf.Parser<WireAtlasQuery> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface AtlasCalibrationStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fk_atlas.AtlasCalibrationStatus)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.fk_atlas.SensorType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.fk_atlas.SensorType type = 1;</code>
     * @return The type.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.SensorType getType();

    /**
     * <code>uint32 time = 2;</code>
     * @return The time.
     */
    int getTime();

    /**
     * <code>uint32 raw = 8;</code>
     * @return The raw.
     */
    int getRaw();

    /**
     * <code>.fk_atlas.TempCalibrations temp = 3;</code>
     * @return The enum numeric value on the wire for temp.
     */
    int getTempValue();
    /**
     * <code>.fk_atlas.TempCalibrations temp = 3;</code>
     * @return The temp.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.TempCalibrations getTemp();

    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
     * @return The enum numeric value on the wire for dissolvedOxygen.
     */
    int getDissolvedOxygenValue();
    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
     * @return The dissolvedOxygen.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.DoCalibrations getDissolvedOxygen();

    /**
     * <code>.fk_atlas.PhCalibrations ph = 5;</code>
     * @return The enum numeric value on the wire for ph.
     */
    int getPhValue();
    /**
     * <code>.fk_atlas.PhCalibrations ph = 5;</code>
     * @return The ph.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.PhCalibrations getPh();

    /**
     * <code>.fk_atlas.EcCalibrations ec = 6;</code>
     * @return The enum numeric value on the wire for ec.
     */
    int getEcValue();
    /**
     * <code>.fk_atlas.EcCalibrations ec = 6;</code>
     * @return The ec.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.EcCalibrations getEc();

    /**
     * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
     * @return The enum numeric value on the wire for orp.
     */
    int getOrpValue();
    /**
     * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
     * @return The orp.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.OrpCalibrations getOrp();

    /**
     * <code>bytes configuration = 9;</code>
     * @return The configuration.
     */
    com.google.protobuf.ByteString getConfiguration();
  }
  /**
   * Protobuf type {@code fk_atlas.AtlasCalibrationStatus}
   */
  public  static final class AtlasCalibrationStatus extends
      com.google.protobuf.GeneratedMessageLite<
          AtlasCalibrationStatus, AtlasCalibrationStatus.Builder> implements
      // @@protoc_insertion_point(message_implements:fk_atlas.AtlasCalibrationStatus)
      AtlasCalibrationStatusOrBuilder {
    private AtlasCalibrationStatus() {
      configuration_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.fk_atlas.SensorType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.fk_atlas.SensorType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.SensorType getType() {
      org.conservify.fieldkit.atlas.pb.FkAtlas.SensorType result = org.conservify.fieldkit.atlas.pb.FkAtlas.SensorType.forNumber(type_);
      return result == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.SensorType.UNRECOGNIZED : result;
    }
    /**
     * <code>.fk_atlas.SensorType type = 1;</code>
     * @param value The enum numeric value on the wire for type to set.
     */
    private void setTypeValue(int value) {
        type_ = value;
    }
    /**
     * <code>.fk_atlas.SensorType type = 1;</code>
     * @param value The type to set.
     */
    private void setType(org.conservify.fieldkit.atlas.pb.FkAtlas.SensorType value) {
      type_ = value.getNumber();
      
    }
    /**
     * <code>.fk_atlas.SensorType type = 1;</code>
     */
    private void clearType() {
      
      type_ = 0;
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private int time_;
    /**
     * <code>uint32 time = 2;</code>
     * @return The time.
     */
    @java.lang.Override
    public int getTime() {
      return time_;
    }
    /**
     * <code>uint32 time = 2;</code>
     * @param value The time to set.
     */
    private void setTime(int value) {
      
      time_ = value;
    }
    /**
     * <code>uint32 time = 2;</code>
     */
    private void clearTime() {
      
      time_ = 0;
    }

    public static final int RAW_FIELD_NUMBER = 8;
    private int raw_;
    /**
     * <code>uint32 raw = 8;</code>
     * @return The raw.
     */
    @java.lang.Override
    public int getRaw() {
      return raw_;
    }
    /**
     * <code>uint32 raw = 8;</code>
     * @param value The raw to set.
     */
    private void setRaw(int value) {
      
      raw_ = value;
    }
    /**
     * <code>uint32 raw = 8;</code>
     */
    private void clearRaw() {
      
      raw_ = 0;
    }

    public static final int TEMP_FIELD_NUMBER = 3;
    private int temp_;
    /**
     * <code>.fk_atlas.TempCalibrations temp = 3;</code>
     * @return The enum numeric value on the wire for temp.
     */
    @java.lang.Override
    public int getTempValue() {
      return temp_;
    }
    /**
     * <code>.fk_atlas.TempCalibrations temp = 3;</code>
     * @return The temp.
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.TempCalibrations getTemp() {
      org.conservify.fieldkit.atlas.pb.FkAtlas.TempCalibrations result = org.conservify.fieldkit.atlas.pb.FkAtlas.TempCalibrations.forNumber(temp_);
      return result == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.TempCalibrations.UNRECOGNIZED : result;
    }
    /**
     * <code>.fk_atlas.TempCalibrations temp = 3;</code>
     * @param value The enum numeric value on the wire for temp to set.
     */
    private void setTempValue(int value) {
        temp_ = value;
    }
    /**
     * <code>.fk_atlas.TempCalibrations temp = 3;</code>
     * @param value The temp to set.
     */
    private void setTemp(org.conservify.fieldkit.atlas.pb.FkAtlas.TempCalibrations value) {
      temp_ = value.getNumber();
      
    }
    /**
     * <code>.fk_atlas.TempCalibrations temp = 3;</code>
     */
    private void clearTemp() {
      
      temp_ = 0;
    }

    public static final int DISSOLVEDOXYGEN_FIELD_NUMBER = 4;
    private int dissolvedOxygen_;
    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
     * @return The enum numeric value on the wire for dissolvedOxygen.
     */
    @java.lang.Override
    public int getDissolvedOxygenValue() {
      return dissolvedOxygen_;
    }
    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
     * @return The dissolvedOxygen.
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.DoCalibrations getDissolvedOxygen() {
      org.conservify.fieldkit.atlas.pb.FkAtlas.DoCalibrations result = org.conservify.fieldkit.atlas.pb.FkAtlas.DoCalibrations.forNumber(dissolvedOxygen_);
      return result == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.DoCalibrations.UNRECOGNIZED : result;
    }
    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
     * @param value The enum numeric value on the wire for dissolvedOxygen to set.
     */
    private void setDissolvedOxygenValue(int value) {
        dissolvedOxygen_ = value;
    }
    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
     * @param value The dissolvedOxygen to set.
     */
    private void setDissolvedOxygen(org.conservify.fieldkit.atlas.pb.FkAtlas.DoCalibrations value) {
      dissolvedOxygen_ = value.getNumber();
      
    }
    /**
     * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
     */
    private void clearDissolvedOxygen() {
      
      dissolvedOxygen_ = 0;
    }

    public static final int PH_FIELD_NUMBER = 5;
    private int ph_;
    /**
     * <code>.fk_atlas.PhCalibrations ph = 5;</code>
     * @return The enum numeric value on the wire for ph.
     */
    @java.lang.Override
    public int getPhValue() {
      return ph_;
    }
    /**
     * <code>.fk_atlas.PhCalibrations ph = 5;</code>
     * @return The ph.
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.PhCalibrations getPh() {
      org.conservify.fieldkit.atlas.pb.FkAtlas.PhCalibrations result = org.conservify.fieldkit.atlas.pb.FkAtlas.PhCalibrations.forNumber(ph_);
      return result == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.PhCalibrations.UNRECOGNIZED : result;
    }
    /**
     * <code>.fk_atlas.PhCalibrations ph = 5;</code>
     * @param value The enum numeric value on the wire for ph to set.
     */
    private void setPhValue(int value) {
        ph_ = value;
    }
    /**
     * <code>.fk_atlas.PhCalibrations ph = 5;</code>
     * @param value The ph to set.
     */
    private void setPh(org.conservify.fieldkit.atlas.pb.FkAtlas.PhCalibrations value) {
      ph_ = value.getNumber();
      
    }
    /**
     * <code>.fk_atlas.PhCalibrations ph = 5;</code>
     */
    private void clearPh() {
      
      ph_ = 0;
    }

    public static final int EC_FIELD_NUMBER = 6;
    private int ec_;
    /**
     * <code>.fk_atlas.EcCalibrations ec = 6;</code>
     * @return The enum numeric value on the wire for ec.
     */
    @java.lang.Override
    public int getEcValue() {
      return ec_;
    }
    /**
     * <code>.fk_atlas.EcCalibrations ec = 6;</code>
     * @return The ec.
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.EcCalibrations getEc() {
      org.conservify.fieldkit.atlas.pb.FkAtlas.EcCalibrations result = org.conservify.fieldkit.atlas.pb.FkAtlas.EcCalibrations.forNumber(ec_);
      return result == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.EcCalibrations.UNRECOGNIZED : result;
    }
    /**
     * <code>.fk_atlas.EcCalibrations ec = 6;</code>
     * @param value The enum numeric value on the wire for ec to set.
     */
    private void setEcValue(int value) {
        ec_ = value;
    }
    /**
     * <code>.fk_atlas.EcCalibrations ec = 6;</code>
     * @param value The ec to set.
     */
    private void setEc(org.conservify.fieldkit.atlas.pb.FkAtlas.EcCalibrations value) {
      ec_ = value.getNumber();
      
    }
    /**
     * <code>.fk_atlas.EcCalibrations ec = 6;</code>
     */
    private void clearEc() {
      
      ec_ = 0;
    }

    public static final int ORP_FIELD_NUMBER = 7;
    private int orp_;
    /**
     * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
     * @return The enum numeric value on the wire for orp.
     */
    @java.lang.Override
    public int getOrpValue() {
      return orp_;
    }
    /**
     * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
     * @return The orp.
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.OrpCalibrations getOrp() {
      org.conservify.fieldkit.atlas.pb.FkAtlas.OrpCalibrations result = org.conservify.fieldkit.atlas.pb.FkAtlas.OrpCalibrations.forNumber(orp_);
      return result == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.OrpCalibrations.UNRECOGNIZED : result;
    }
    /**
     * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
     * @param value The enum numeric value on the wire for orp to set.
     */
    private void setOrpValue(int value) {
        orp_ = value;
    }
    /**
     * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
     * @param value The orp to set.
     */
    private void setOrp(org.conservify.fieldkit.atlas.pb.FkAtlas.OrpCalibrations value) {
      orp_ = value.getNumber();
      
    }
    /**
     * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
     */
    private void clearOrp() {
      
      orp_ = 0;
    }

    public static final int CONFIGURATION_FIELD_NUMBER = 9;
    private com.google.protobuf.ByteString configuration_;
    /**
     * <code>bytes configuration = 9;</code>
     * @return The configuration.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getConfiguration() {
      return configuration_;
    }
    /**
     * <code>bytes configuration = 9;</code>
     * @param value The configuration to set.
     */
    private void setConfiguration(com.google.protobuf.ByteString value) {
      value.getClass();
  
      configuration_ = value;
    }
    /**
     * <code>bytes configuration = 9;</code>
     */
    private void clearConfiguration() {
      
      configuration_ = getDefaultInstance().getConfiguration();
    }

    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code fk_atlas.AtlasCalibrationStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus, Builder> implements
        // @@protoc_insertion_point(builder_implements:fk_atlas.AtlasCalibrationStatus)
        org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatusOrBuilder {
      // Construct using org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.fk_atlas.SensorType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override
      public int getTypeValue() {
        return instance.getTypeValue();
      }
      /**
       * <code>.fk_atlas.SensorType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        copyOnWrite();
        instance.setTypeValue(value);
        return this;
      }
      /**
       * <code>.fk_atlas.SensorType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.SensorType getType() {
        return instance.getType();
      }
      /**
       * <code>.fk_atlas.SensorType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setType(org.conservify.fieldkit.atlas.pb.FkAtlas.SensorType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>.fk_atlas.SensorType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <code>uint32 time = 2;</code>
       * @return The time.
       */
      @java.lang.Override
      public int getTime() {
        return instance.getTime();
      }
      /**
       * <code>uint32 time = 2;</code>
       * @param value The time to set.
       * @return This builder for chaining.
       */
      public Builder setTime(int value) {
        copyOnWrite();
        instance.setTime(value);
        return this;
      }
      /**
       * <code>uint32 time = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTime() {
        copyOnWrite();
        instance.clearTime();
        return this;
      }

      /**
       * <code>uint32 raw = 8;</code>
       * @return The raw.
       */
      @java.lang.Override
      public int getRaw() {
        return instance.getRaw();
      }
      /**
       * <code>uint32 raw = 8;</code>
       * @param value The raw to set.
       * @return This builder for chaining.
       */
      public Builder setRaw(int value) {
        copyOnWrite();
        instance.setRaw(value);
        return this;
      }
      /**
       * <code>uint32 raw = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearRaw() {
        copyOnWrite();
        instance.clearRaw();
        return this;
      }

      /**
       * <code>.fk_atlas.TempCalibrations temp = 3;</code>
       * @return The enum numeric value on the wire for temp.
       */
      @java.lang.Override
      public int getTempValue() {
        return instance.getTempValue();
      }
      /**
       * <code>.fk_atlas.TempCalibrations temp = 3;</code>
       * @param value The temp to set.
       * @return This builder for chaining.
       */
      public Builder setTempValue(int value) {
        copyOnWrite();
        instance.setTempValue(value);
        return this;
      }
      /**
       * <code>.fk_atlas.TempCalibrations temp = 3;</code>
       * @return The temp.
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.TempCalibrations getTemp() {
        return instance.getTemp();
      }
      /**
       * <code>.fk_atlas.TempCalibrations temp = 3;</code>
       * @param value The enum numeric value on the wire for temp to set.
       * @return This builder for chaining.
       */
      public Builder setTemp(org.conservify.fieldkit.atlas.pb.FkAtlas.TempCalibrations value) {
        copyOnWrite();
        instance.setTemp(value);
        return this;
      }
      /**
       * <code>.fk_atlas.TempCalibrations temp = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTemp() {
        copyOnWrite();
        instance.clearTemp();
        return this;
      }

      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
       * @return The enum numeric value on the wire for dissolvedOxygen.
       */
      @java.lang.Override
      public int getDissolvedOxygenValue() {
        return instance.getDissolvedOxygenValue();
      }
      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
       * @param value The dissolvedOxygen to set.
       * @return This builder for chaining.
       */
      public Builder setDissolvedOxygenValue(int value) {
        copyOnWrite();
        instance.setDissolvedOxygenValue(value);
        return this;
      }
      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
       * @return The dissolvedOxygen.
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.DoCalibrations getDissolvedOxygen() {
        return instance.getDissolvedOxygen();
      }
      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
       * @param value The enum numeric value on the wire for dissolvedOxygen to set.
       * @return This builder for chaining.
       */
      public Builder setDissolvedOxygen(org.conservify.fieldkit.atlas.pb.FkAtlas.DoCalibrations value) {
        copyOnWrite();
        instance.setDissolvedOxygen(value);
        return this;
      }
      /**
       * <code>.fk_atlas.DoCalibrations dissolvedOxygen = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDissolvedOxygen() {
        copyOnWrite();
        instance.clearDissolvedOxygen();
        return this;
      }

      /**
       * <code>.fk_atlas.PhCalibrations ph = 5;</code>
       * @return The enum numeric value on the wire for ph.
       */
      @java.lang.Override
      public int getPhValue() {
        return instance.getPhValue();
      }
      /**
       * <code>.fk_atlas.PhCalibrations ph = 5;</code>
       * @param value The ph to set.
       * @return This builder for chaining.
       */
      public Builder setPhValue(int value) {
        copyOnWrite();
        instance.setPhValue(value);
        return this;
      }
      /**
       * <code>.fk_atlas.PhCalibrations ph = 5;</code>
       * @return The ph.
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.PhCalibrations getPh() {
        return instance.getPh();
      }
      /**
       * <code>.fk_atlas.PhCalibrations ph = 5;</code>
       * @param value The enum numeric value on the wire for ph to set.
       * @return This builder for chaining.
       */
      public Builder setPh(org.conservify.fieldkit.atlas.pb.FkAtlas.PhCalibrations value) {
        copyOnWrite();
        instance.setPh(value);
        return this;
      }
      /**
       * <code>.fk_atlas.PhCalibrations ph = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPh() {
        copyOnWrite();
        instance.clearPh();
        return this;
      }

      /**
       * <code>.fk_atlas.EcCalibrations ec = 6;</code>
       * @return The enum numeric value on the wire for ec.
       */
      @java.lang.Override
      public int getEcValue() {
        return instance.getEcValue();
      }
      /**
       * <code>.fk_atlas.EcCalibrations ec = 6;</code>
       * @param value The ec to set.
       * @return This builder for chaining.
       */
      public Builder setEcValue(int value) {
        copyOnWrite();
        instance.setEcValue(value);
        return this;
      }
      /**
       * <code>.fk_atlas.EcCalibrations ec = 6;</code>
       * @return The ec.
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.EcCalibrations getEc() {
        return instance.getEc();
      }
      /**
       * <code>.fk_atlas.EcCalibrations ec = 6;</code>
       * @param value The enum numeric value on the wire for ec to set.
       * @return This builder for chaining.
       */
      public Builder setEc(org.conservify.fieldkit.atlas.pb.FkAtlas.EcCalibrations value) {
        copyOnWrite();
        instance.setEc(value);
        return this;
      }
      /**
       * <code>.fk_atlas.EcCalibrations ec = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearEc() {
        copyOnWrite();
        instance.clearEc();
        return this;
      }

      /**
       * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
       * @return The enum numeric value on the wire for orp.
       */
      @java.lang.Override
      public int getOrpValue() {
        return instance.getOrpValue();
      }
      /**
       * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
       * @param value The orp to set.
       * @return This builder for chaining.
       */
      public Builder setOrpValue(int value) {
        copyOnWrite();
        instance.setOrpValue(value);
        return this;
      }
      /**
       * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
       * @return The orp.
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.OrpCalibrations getOrp() {
        return instance.getOrp();
      }
      /**
       * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
       * @param value The enum numeric value on the wire for orp to set.
       * @return This builder for chaining.
       */
      public Builder setOrp(org.conservify.fieldkit.atlas.pb.FkAtlas.OrpCalibrations value) {
        copyOnWrite();
        instance.setOrp(value);
        return this;
      }
      /**
       * <code>.fk_atlas.OrpCalibrations orp = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearOrp() {
        copyOnWrite();
        instance.clearOrp();
        return this;
      }

      /**
       * <code>bytes configuration = 9;</code>
       * @return The configuration.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getConfiguration() {
        return instance.getConfiguration();
      }
      /**
       * <code>bytes configuration = 9;</code>
       * @param value The configuration to set.
       * @return This builder for chaining.
       */
      public Builder setConfiguration(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setConfiguration(value);
        return this;
      }
      /**
       * <code>bytes configuration = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfiguration() {
        copyOnWrite();
        instance.clearConfiguration();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fk_atlas.AtlasCalibrationStatus)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "type_",
              "time_",
              "temp_",
              "dissolvedOxygen_",
              "ph_",
              "ec_",
              "orp_",
              "raw_",
              "configuration_",
            };
            java.lang.String info =
                "\u0000\t\u0000\u0000\u0001\t\t\u0000\u0000\u0000\u0001\f\u0002\u000b\u0003\f\u0004" +
                "\f\u0005\f\u0006\f\u0007\f\b\u000b\t\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus> parser = PARSER;
          if (parser == null) {
            synchronized (org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fk_atlas.AtlasCalibrationStatus)
    private static final org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus DEFAULT_INSTANCE;
    static {
      AtlasCalibrationStatus defaultInstance = new AtlasCalibrationStatus();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        AtlasCalibrationStatus.class, defaultInstance);
    }

    public static org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AtlasCalibrationStatus> PARSER;

    public static com.google.protobuf.Parser<AtlasCalibrationStatus> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface TwoWireReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fk_atlas.TwoWireReply)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code fk_atlas.TwoWireReply}
   */
  public  static final class TwoWireReply extends
      com.google.protobuf.GeneratedMessageLite<
          TwoWireReply, TwoWireReply.Builder> implements
      // @@protoc_insertion_point(message_implements:fk_atlas.TwoWireReply)
      TwoWireReplyOrBuilder {
    private TwoWireReply() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }
    /**
     * <code>bytes data = 1;</code>
     * @param value The data to set.
     */
    private void setData(com.google.protobuf.ByteString value) {
      value.getClass();
  
      data_ = value;
    }
    /**
     * <code>bytes data = 1;</code>
     */
    private void clearData() {
      
      data_ = getDefaultInstance().getData();
    }

    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code fk_atlas.TwoWireReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply, Builder> implements
        // @@protoc_insertion_point(builder_implements:fk_atlas.TwoWireReply)
        org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReplyOrBuilder {
      // Construct using org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>bytes data = 1;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return instance.getData();
      }
      /**
       * <code>bytes data = 1;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setData(value);
        return this;
      }
      /**
       * <code>bytes data = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        copyOnWrite();
        instance.clearData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fk_atlas.TwoWireReply)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "data_",
            };
            java.lang.String info =
                "\u0000\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0000\u0000\u0001\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply> parser = PARSER;
          if (parser == null) {
            synchronized (org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fk_atlas.TwoWireReply)
    private static final org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply DEFAULT_INSTANCE;
    static {
      TwoWireReply defaultInstance = new TwoWireReply();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        TwoWireReply.class, defaultInstance);
    }

    public static org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<TwoWireReply> PARSER;

    public static com.google.protobuf.Parser<TwoWireReply> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ErrorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fk_atlas.Error)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.fk_atlas.ErrorType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.fk_atlas.ErrorType type = 1;</code>
     * @return The type.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.ErrorType getType();

    /**
     * <code>string message = 2;</code>
     * @return The message.
     */
    java.lang.String getMessage();
    /**
     * <code>string message = 2;</code>
     * @return The bytes for message.
     */
    com.google.protobuf.ByteString
        getMessageBytes();
  }
  /**
   * Protobuf type {@code fk_atlas.Error}
   */
  public  static final class Error extends
      com.google.protobuf.GeneratedMessageLite<
          Error, Error.Builder> implements
      // @@protoc_insertion_point(message_implements:fk_atlas.Error)
      ErrorOrBuilder {
    private Error() {
      message_ = "";
    }
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.fk_atlas.ErrorType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.fk_atlas.ErrorType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.ErrorType getType() {
      org.conservify.fieldkit.atlas.pb.FkAtlas.ErrorType result = org.conservify.fieldkit.atlas.pb.FkAtlas.ErrorType.forNumber(type_);
      return result == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.ErrorType.UNRECOGNIZED : result;
    }
    /**
     * <code>.fk_atlas.ErrorType type = 1;</code>
     * @param value The enum numeric value on the wire for type to set.
     */
    private void setTypeValue(int value) {
        type_ = value;
    }
    /**
     * <code>.fk_atlas.ErrorType type = 1;</code>
     * @param value The type to set.
     */
    private void setType(org.conservify.fieldkit.atlas.pb.FkAtlas.ErrorType value) {
      type_ = value.getNumber();
      
    }
    /**
     * <code>.fk_atlas.ErrorType type = 1;</code>
     */
    private void clearType() {
      
      type_ = 0;
    }

    public static final int MESSAGE_FIELD_NUMBER = 2;
    private java.lang.String message_;
    /**
     * <code>string message = 2;</code>
     * @return The message.
     */
    @java.lang.Override
    public java.lang.String getMessage() {
      return message_;
    }
    /**
     * <code>string message = 2;</code>
     * @return The bytes for message.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMessageBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(message_);
    }
    /**
     * <code>string message = 2;</code>
     * @param value The message to set.
     */
    private void setMessage(
        java.lang.String value) {
      value.getClass();
  
      message_ = value;
    }
    /**
     * <code>string message = 2;</code>
     */
    private void clearMessage() {
      
      message_ = getDefaultInstance().getMessage();
    }
    /**
     * <code>string message = 2;</code>
     * @param value The bytes for message to set.
     */
    private void setMessageBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      message_ = value.toStringUtf8();
      
    }

    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Error parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Error parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Error parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Error parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Error parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Error parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Error parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Error parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Error parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Error parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Error parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Error parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.conservify.fieldkit.atlas.pb.FkAtlas.Error prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code fk_atlas.Error}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.conservify.fieldkit.atlas.pb.FkAtlas.Error, Builder> implements
        // @@protoc_insertion_point(builder_implements:fk_atlas.Error)
        org.conservify.fieldkit.atlas.pb.FkAtlas.ErrorOrBuilder {
      // Construct using org.conservify.fieldkit.atlas.pb.FkAtlas.Error.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.fk_atlas.ErrorType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override
      public int getTypeValue() {
        return instance.getTypeValue();
      }
      /**
       * <code>.fk_atlas.ErrorType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        copyOnWrite();
        instance.setTypeValue(value);
        return this;
      }
      /**
       * <code>.fk_atlas.ErrorType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.ErrorType getType() {
        return instance.getType();
      }
      /**
       * <code>.fk_atlas.ErrorType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setType(org.conservify.fieldkit.atlas.pb.FkAtlas.ErrorType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>.fk_atlas.ErrorType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <code>string message = 2;</code>
       * @return The message.
       */
      @java.lang.Override
      public java.lang.String getMessage() {
        return instance.getMessage();
      }
      /**
       * <code>string message = 2;</code>
       * @return The bytes for message.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getMessageBytes() {
        return instance.getMessageBytes();
      }
      /**
       * <code>string message = 2;</code>
       * @param value The message to set.
       * @return This builder for chaining.
       */
      public Builder setMessage(
          java.lang.String value) {
        copyOnWrite();
        instance.setMessage(value);
        return this;
      }
      /**
       * <code>string message = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessage() {
        copyOnWrite();
        instance.clearMessage();
        return this;
      }
      /**
       * <code>string message = 2;</code>
       * @param value The bytes for message to set.
       * @return This builder for chaining.
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setMessageBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fk_atlas.Error)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.conservify.fieldkit.atlas.pb.FkAtlas.Error();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "type_",
              "message_",
            };
            java.lang.String info =
                "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\f\u0002\u0208" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.conservify.fieldkit.atlas.pb.FkAtlas.Error> parser = PARSER;
          if (parser == null) {
            synchronized (org.conservify.fieldkit.atlas.pb.FkAtlas.Error.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.conservify.fieldkit.atlas.pb.FkAtlas.Error>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fk_atlas.Error)
    private static final org.conservify.fieldkit.atlas.pb.FkAtlas.Error DEFAULT_INSTANCE;
    static {
      Error defaultInstance = new Error();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Error.class, defaultInstance);
    }

    public static org.conservify.fieldkit.atlas.pb.FkAtlas.Error getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Error> PARSER;

    public static com.google.protobuf.Parser<Error> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface WireAtlasReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:fk_atlas.WireAtlasReply)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>.fk_atlas.ReplyType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <code>.fk_atlas.ReplyType type = 1;</code>
     * @return The type.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.ReplyType getType();

    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    java.util.List<org.conservify.fieldkit.atlas.pb.FkAtlas.Error> 
        getErrorsList();
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.Error getErrors(int index);
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    int getErrorsCount();

    /**
     * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
     * @return Whether the calibration field is set.
     */
    boolean hasCalibration();
    /**
     * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
     * @return The calibration.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus getCalibration();

    /**
     * <code>.fk_atlas.TwoWireReply wire = 4;</code>
     * @return Whether the wire field is set.
     */
    boolean hasWire();
    /**
     * <code>.fk_atlas.TwoWireReply wire = 4;</code>
     * @return The wire.
     */
    org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply getWire();
  }
  /**
   * Protobuf type {@code fk_atlas.WireAtlasReply}
   */
  public  static final class WireAtlasReply extends
      com.google.protobuf.GeneratedMessageLite<
          WireAtlasReply, WireAtlasReply.Builder> implements
      // @@protoc_insertion_point(message_implements:fk_atlas.WireAtlasReply)
      WireAtlasReplyOrBuilder {
    private WireAtlasReply() {
      errors_ = emptyProtobufList();
    }
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>.fk_atlas.ReplyType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.fk_atlas.ReplyType type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.ReplyType getType() {
      org.conservify.fieldkit.atlas.pb.FkAtlas.ReplyType result = org.conservify.fieldkit.atlas.pb.FkAtlas.ReplyType.forNumber(type_);
      return result == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.ReplyType.UNRECOGNIZED : result;
    }
    /**
     * <code>.fk_atlas.ReplyType type = 1;</code>
     * @param value The enum numeric value on the wire for type to set.
     */
    private void setTypeValue(int value) {
        type_ = value;
    }
    /**
     * <code>.fk_atlas.ReplyType type = 1;</code>
     * @param value The type to set.
     */
    private void setType(org.conservify.fieldkit.atlas.pb.FkAtlas.ReplyType value) {
      type_ = value.getNumber();
      
    }
    /**
     * <code>.fk_atlas.ReplyType type = 1;</code>
     */
    private void clearType() {
      
      type_ = 0;
    }

    public static final int ERRORS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<org.conservify.fieldkit.atlas.pb.FkAtlas.Error> errors_;
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.conservify.fieldkit.atlas.pb.FkAtlas.Error> getErrorsList() {
      return errors_;
    }
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    public java.util.List<? extends org.conservify.fieldkit.atlas.pb.FkAtlas.ErrorOrBuilder> 
        getErrorsOrBuilderList() {
      return errors_;
    }
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    @java.lang.Override
    public int getErrorsCount() {
      return errors_.size();
    }
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.Error getErrors(int index) {
      return errors_.get(index);
    }
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    public org.conservify.fieldkit.atlas.pb.FkAtlas.ErrorOrBuilder getErrorsOrBuilder(
        int index) {
      return errors_.get(index);
    }
    private void ensureErrorsIsMutable() {
      if (!errors_.isModifiable()) {
        errors_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(errors_);
       }
    }

    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    private void setErrors(
        int index, org.conservify.fieldkit.atlas.pb.FkAtlas.Error value) {
      value.getClass();
  ensureErrorsIsMutable();
      errors_.set(index, value);
    }
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    private void addErrors(org.conservify.fieldkit.atlas.pb.FkAtlas.Error value) {
      value.getClass();
  ensureErrorsIsMutable();
      errors_.add(value);
    }
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    private void addErrors(
        int index, org.conservify.fieldkit.atlas.pb.FkAtlas.Error value) {
      value.getClass();
  ensureErrorsIsMutable();
      errors_.add(index, value);
    }
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    private void addAllErrors(
        java.lang.Iterable<? extends org.conservify.fieldkit.atlas.pb.FkAtlas.Error> values) {
      ensureErrorsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, errors_);
    }
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    private void clearErrors() {
      errors_ = emptyProtobufList();
    }
    /**
     * <code>repeated .fk_atlas.Error errors = 2;</code>
     */
    private void removeErrors(int index) {
      ensureErrorsIsMutable();
      errors_.remove(index);
    }

    public static final int CALIBRATION_FIELD_NUMBER = 3;
    private org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus calibration_;
    /**
     * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
     */
    @java.lang.Override
    public boolean hasCalibration() {
      return calibration_ != null;
    }
    /**
     * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus getCalibration() {
      return calibration_ == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.getDefaultInstance() : calibration_;
    }
    /**
     * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
     */
    private void setCalibration(org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus value) {
      value.getClass();
  calibration_ = value;
      
      }
    /**
     * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeCalibration(org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus value) {
      value.getClass();
  if (calibration_ != null &&
          calibration_ != org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.getDefaultInstance()) {
        calibration_ =
          org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.newBuilder(calibration_).mergeFrom(value).buildPartial();
      } else {
        calibration_ = value;
      }
      
    }
    /**
     * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
     */
    private void clearCalibration() {  calibration_ = null;
      
    }

    public static final int WIRE_FIELD_NUMBER = 4;
    private org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply wire_;
    /**
     * <code>.fk_atlas.TwoWireReply wire = 4;</code>
     */
    @java.lang.Override
    public boolean hasWire() {
      return wire_ != null;
    }
    /**
     * <code>.fk_atlas.TwoWireReply wire = 4;</code>
     */
    @java.lang.Override
    public org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply getWire() {
      return wire_ == null ? org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply.getDefaultInstance() : wire_;
    }
    /**
     * <code>.fk_atlas.TwoWireReply wire = 4;</code>
     */
    private void setWire(org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply value) {
      value.getClass();
  wire_ = value;
      
      }
    /**
     * <code>.fk_atlas.TwoWireReply wire = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeWire(org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply value) {
      value.getClass();
  if (wire_ != null &&
          wire_ != org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply.getDefaultInstance()) {
        wire_ =
          org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply.newBuilder(wire_).mergeFrom(value).buildPartial();
      } else {
        wire_ = value;
      }
      
    }
    /**
     * <code>.fk_atlas.TwoWireReply wire = 4;</code>
     */
    private void clearWire() {  wire_ = null;
      
    }

    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code fk_atlas.WireAtlasReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply, Builder> implements
        // @@protoc_insertion_point(builder_implements:fk_atlas.WireAtlasReply)
        org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReplyOrBuilder {
      // Construct using org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>.fk_atlas.ReplyType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override
      public int getTypeValue() {
        return instance.getTypeValue();
      }
      /**
       * <code>.fk_atlas.ReplyType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        copyOnWrite();
        instance.setTypeValue(value);
        return this;
      }
      /**
       * <code>.fk_atlas.ReplyType type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.ReplyType getType() {
        return instance.getType();
      }
      /**
       * <code>.fk_atlas.ReplyType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setType(org.conservify.fieldkit.atlas.pb.FkAtlas.ReplyType value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>.fk_atlas.ReplyType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      @java.lang.Override
      public java.util.List<org.conservify.fieldkit.atlas.pb.FkAtlas.Error> getErrorsList() {
        return java.util.Collections.unmodifiableList(
            instance.getErrorsList());
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      @java.lang.Override
      public int getErrorsCount() {
        return instance.getErrorsCount();
      }/**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.Error getErrors(int index) {
        return instance.getErrors(index);
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public Builder setErrors(
          int index, org.conservify.fieldkit.atlas.pb.FkAtlas.Error value) {
        copyOnWrite();
        instance.setErrors(index, value);
        return this;
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public Builder setErrors(
          int index, org.conservify.fieldkit.atlas.pb.FkAtlas.Error.Builder builderForValue) {
        copyOnWrite();
        instance.setErrors(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public Builder addErrors(org.conservify.fieldkit.atlas.pb.FkAtlas.Error value) {
        copyOnWrite();
        instance.addErrors(value);
        return this;
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public Builder addErrors(
          int index, org.conservify.fieldkit.atlas.pb.FkAtlas.Error value) {
        copyOnWrite();
        instance.addErrors(index, value);
        return this;
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public Builder addErrors(
          org.conservify.fieldkit.atlas.pb.FkAtlas.Error.Builder builderForValue) {
        copyOnWrite();
        instance.addErrors(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public Builder addErrors(
          int index, org.conservify.fieldkit.atlas.pb.FkAtlas.Error.Builder builderForValue) {
        copyOnWrite();
        instance.addErrors(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public Builder addAllErrors(
          java.lang.Iterable<? extends org.conservify.fieldkit.atlas.pb.FkAtlas.Error> values) {
        copyOnWrite();
        instance.addAllErrors(values);
        return this;
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public Builder clearErrors() {
        copyOnWrite();
        instance.clearErrors();
        return this;
      }
      /**
       * <code>repeated .fk_atlas.Error errors = 2;</code>
       */
      public Builder removeErrors(int index) {
        copyOnWrite();
        instance.removeErrors(index);
        return this;
      }

      /**
       * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
       */
      @java.lang.Override
      public boolean hasCalibration() {
        return instance.hasCalibration();
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus getCalibration() {
        return instance.getCalibration();
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
       */
      public Builder setCalibration(org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus value) {
        copyOnWrite();
        instance.setCalibration(value);
        return this;
        }
      /**
       * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
       */
      public Builder setCalibration(
          org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus.Builder builderForValue) {
        copyOnWrite();
        instance.setCalibration(builderForValue.build());
        return this;
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
       */
      public Builder mergeCalibration(org.conservify.fieldkit.atlas.pb.FkAtlas.AtlasCalibrationStatus value) {
        copyOnWrite();
        instance.mergeCalibration(value);
        return this;
      }
      /**
       * <code>.fk_atlas.AtlasCalibrationStatus calibration = 3;</code>
       */
      public Builder clearCalibration() {  copyOnWrite();
        instance.clearCalibration();
        return this;
      }

      /**
       * <code>.fk_atlas.TwoWireReply wire = 4;</code>
       */
      @java.lang.Override
      public boolean hasWire() {
        return instance.hasWire();
      }
      /**
       * <code>.fk_atlas.TwoWireReply wire = 4;</code>
       */
      @java.lang.Override
      public org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply getWire() {
        return instance.getWire();
      }
      /**
       * <code>.fk_atlas.TwoWireReply wire = 4;</code>
       */
      public Builder setWire(org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply value) {
        copyOnWrite();
        instance.setWire(value);
        return this;
        }
      /**
       * <code>.fk_atlas.TwoWireReply wire = 4;</code>
       */
      public Builder setWire(
          org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply.Builder builderForValue) {
        copyOnWrite();
        instance.setWire(builderForValue.build());
        return this;
      }
      /**
       * <code>.fk_atlas.TwoWireReply wire = 4;</code>
       */
      public Builder mergeWire(org.conservify.fieldkit.atlas.pb.FkAtlas.TwoWireReply value) {
        copyOnWrite();
        instance.mergeWire(value);
        return this;
      }
      /**
       * <code>.fk_atlas.TwoWireReply wire = 4;</code>
       */
      public Builder clearWire() {  copyOnWrite();
        instance.clearWire();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:fk_atlas.WireAtlasReply)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "type_",
              "errors_",
              org.conservify.fieldkit.atlas.pb.FkAtlas.Error.class,
              "calibration_",
              "wire_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0001\u0000\u0001\f\u0002\u001b" +
                "\u0003\t\u0004\t";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply> parser = PARSER;
          if (parser == null) {
            synchronized (org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:fk_atlas.WireAtlasReply)
    private static final org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply DEFAULT_INSTANCE;
    static {
      WireAtlasReply defaultInstance = new WireAtlasReply();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        WireAtlasReply.class, defaultInstance);
    }

    public static org.conservify.fieldkit.atlas.pb.FkAtlas.WireAtlasReply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<WireAtlasReply> PARSER;

    public static com.google.protobuf.Parser<WireAtlasReply> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
